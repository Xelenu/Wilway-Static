{
  "version": 3,
  "sources": ["../node_modules/events/events.js", "../node_modules/set-cookie-parser/lib/set-cookie.js", "../src/rewrite/html.js", "../node_modules/parse5/dist/common/unicode.js", "../node_modules/parse5/dist/common/error-codes.js", "../node_modules/parse5/dist/tokenizer/preprocessor.js", "../node_modules/parse5/dist/common/token.js", "../node_modules/entities/src/generated/decode-data-html.ts", "../node_modules/entities/src/decode-codepoint.ts", "../node_modules/entities/src/decode.ts", "../node_modules/parse5/dist/common/html.js", "../node_modules/parse5/dist/tokenizer/index.js", "../node_modules/parse5/dist/parser/open-element-stack.js", "../node_modules/parse5/dist/parser/formatting-element-list.js", "../node_modules/parse5/dist/tree-adapters/default.js", "../node_modules/parse5/dist/common/doctype.js", "../node_modules/parse5/dist/common/foreign-content.js", "../node_modules/parse5/dist/parser/index.js", "../node_modules/entities/src/escape.ts", "../node_modules/parse5/dist/serializer/index.js", "../node_modules/parse5/dist/index.js", "../src/rewrite/css.js", "../node_modules/meriyah/dist/meriyah.mjs", "../node_modules/astring/dist/astring.mjs", "../src/rewrite/js.js", "../src/rewrite/index.js", "../src/rewrite/codecs.js", "../src/rewrite/cookie.js", "../src/rewrite/rewrite.html.js", "../src/rewrite/rewrite.script.js", "../node_modules/idb/build/index.js", "../node_modules/@mercuryworkshop/bare-mux/dist/index.mjs"],
  "sourcesContent": ["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n", "\"use strict\";\n\nvar defaultParseOptions = {\n  decodeValues: true,\n  map: false,\n  silent: false,\n};\n\nfunction isNonEmptyString(str) {\n  return typeof str === \"string\" && !!str.trim();\n}\n\nfunction parseString(setCookieValue, options) {\n  var parts = setCookieValue.split(\";\").filter(isNonEmptyString);\n\n  var nameValuePairStr = parts.shift();\n  var parsed = parseNameValuePair(nameValuePairStr);\n  var name = parsed.name;\n  var value = parsed.value;\n\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  try {\n    value = options.decodeValues ? decodeURIComponent(value) : value; // decode cookie value\n  } catch (e) {\n    console.error(\n      \"set-cookie-parser encountered an error while decoding a cookie with value '\" +\n        value +\n        \"'. Set options.decodeValues to false to disable this feature.\",\n      e\n    );\n  }\n\n  var cookie = {\n    name: name,\n    value: value,\n  };\n\n  parts.forEach(function (part) {\n    var sides = part.split(\"=\");\n    var key = sides.shift().trimLeft().toLowerCase();\n    var value = sides.join(\"=\");\n    if (key === \"expires\") {\n      cookie.expires = new Date(value);\n    } else if (key === \"max-age\") {\n      cookie.maxAge = parseInt(value, 10);\n    } else if (key === \"secure\") {\n      cookie.secure = true;\n    } else if (key === \"httponly\") {\n      cookie.httpOnly = true;\n    } else if (key === \"samesite\") {\n      cookie.sameSite = value;\n    } else if (key === \"partitioned\") {\n      cookie.partitioned = true;\n    } else {\n      cookie[key] = value;\n    }\n  });\n\n  return cookie;\n}\n\nfunction parseNameValuePair(nameValuePairStr) {\n  // Parses name-value-pair according to rfc6265bis draft\n\n  var name = \"\";\n  var value = \"\";\n  var nameValueArr = nameValuePairStr.split(\"=\");\n  if (nameValueArr.length > 1) {\n    name = nameValueArr.shift();\n    value = nameValueArr.join(\"=\"); // everything after the first =, joined by a \"=\" if there was more than one part\n  } else {\n    value = nameValuePairStr;\n  }\n\n  return { name: name, value: value };\n}\n\nfunction parse(input, options) {\n  options = options\n    ? Object.assign({}, defaultParseOptions, options)\n    : defaultParseOptions;\n\n  if (!input) {\n    if (!options.map) {\n      return [];\n    } else {\n      return {};\n    }\n  }\n\n  if (input.headers) {\n    if (typeof input.headers.getSetCookie === \"function\") {\n      // for fetch responses - they combine headers of the same type in the headers array,\n      // but getSetCookie returns an uncombined array\n      input = input.headers.getSetCookie();\n    } else if (input.headers[\"set-cookie\"]) {\n      // fast-path for node.js (which automatically normalizes header names to lower-case\n      input = input.headers[\"set-cookie\"];\n    } else {\n      // slow-path for other environments - see #25\n      var sch =\n        input.headers[\n          Object.keys(input.headers).find(function (key) {\n            return key.toLowerCase() === \"set-cookie\";\n          })\n        ];\n      // warn if called on a request-like object with a cookie header rather than a set-cookie header - see #34, 36\n      if (!sch && input.headers.cookie && !options.silent) {\n        console.warn(\n          \"Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.\"\n        );\n      }\n      input = sch;\n    }\n  }\n  if (!Array.isArray(input)) {\n    input = [input];\n  }\n\n  if (!options.map) {\n    return input.filter(isNonEmptyString).map(function (str) {\n      return parseString(str, options);\n    });\n  } else {\n    var cookies = {};\n    return input.filter(isNonEmptyString).reduce(function (cookies, str) {\n      var cookie = parseString(str, options);\n      cookies[cookie.name] = cookie;\n      return cookies;\n    }, cookies);\n  }\n}\n\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n\n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/\nfunction splitCookiesString(cookiesString) {\n  if (Array.isArray(cookiesString)) {\n    return cookiesString;\n  }\n  if (typeof cookiesString !== \"string\") {\n    return [];\n  }\n\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        // ',' is a cookie separator if we have later first '=', not ';' or ','\n        lastComma = pos;\n        pos += 1;\n\n        skipWhitespace();\n        nextStart = pos;\n\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n\n        // currently special character\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          // we found cookies separator\n          cookiesSeparatorFound = true;\n          // pos is inside the next cookie, so back up and return it.\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          // in param ',' or param separator ';',\n          // we continue from that comma\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n\n  return cookiesStrings;\n}\n\nmodule.exports = parse;\nmodule.exports.parse = parse;\nmodule.exports.parseString = parseString;\nmodule.exports.splitCookiesString = splitCookiesString;\n", "import EventEmitter from \"events\";\r\nimport { parse, parseFragment, serialize } from \"parse5\";\r\n\r\n/**\r\n * @typedef {import('./index').default} Ultraviolet\r\n */\r\n\r\nclass HTML extends EventEmitter {\r\n\t/**\r\n\t *\r\n\t * @param {Ultraviolet} ctx\r\n\t */\r\n\tconstructor(ctx) {\r\n\t\tsuper();\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.rewriteUrl = ctx.rewriteUrl;\r\n\t\tthis.sourceUrl = ctx.sourceUrl;\r\n\t}\r\n\trewrite(str, options = {}) {\r\n\t\tif (!str) return str;\r\n\t\treturn this.recast(\r\n\t\t\tstr,\r\n\t\t\t(node) => {\r\n\t\t\t\tif (node.tagName) this.emit(\"element\", node, \"rewrite\");\r\n\t\t\t\tif (node.attr) this.emit(\"attr\", node, \"rewrite\");\r\n\t\t\t\tif (node.nodeName === \"#text\") this.emit(\"text\", node, \"rewrite\");\r\n\t\t\t},\r\n\t\t\toptions\r\n\t\t);\r\n\t}\r\n\tsource(str, options = {}) {\r\n\t\tif (!str) return str;\r\n\t\treturn this.recast(\r\n\t\t\tstr,\r\n\t\t\t(node) => {\r\n\t\t\t\tif (node.tagName) this.emit(\"element\", node, \"source\");\r\n\t\t\t\tif (node.attr) this.emit(\"attr\", node, \"source\");\r\n\t\t\t\tif (node.nodeName === \"#text\") this.emit(\"text\", node, \"source\");\r\n\t\t\t},\r\n\t\t\toptions\r\n\t\t);\r\n\t}\r\n\trecast(str, fn, options = {}) {\r\n\t\ttry {\r\n\t\t\tconst ast = (options.document ? parse : parseFragment)(\r\n\t\t\t\tnew String(str).toString()\r\n\t\t\t);\r\n\t\t\tthis.iterate(ast, fn, options);\r\n\t\t\treturn serialize(ast);\r\n\t\t} catch (e) {\r\n\t\t\treturn str;\r\n\t\t}\r\n\t}\r\n\titerate(ast, fn, fnOptions) {\r\n\t\tif (!ast) return ast;\r\n\r\n\t\tif (ast.tagName) {\r\n\t\t\tconst element = new P5Element(ast, false, fnOptions);\r\n\t\t\tfn(element);\r\n\t\t\tif (ast.attrs) {\r\n\t\t\t\tfor (const attr of ast.attrs) {\r\n\t\t\t\t\tif (!attr.skip) fn(new AttributeEvent(element, attr, fnOptions));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (ast.childNodes) {\r\n\t\t\tfor (const child of ast.childNodes) {\r\n\t\t\t\tif (!child.skip) this.iterate(child, fn, fnOptions);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (ast.nodeName === \"#text\") {\r\n\t\t\tfn(new TextEvent(ast, new P5Element(ast.parentNode), false, fnOptions));\r\n\t\t}\r\n\r\n\t\treturn ast;\r\n\t}\r\n\twrapSrcset(str, meta = this.ctx.meta) {\r\n\t\treturn str\r\n\t\t\t.split(\",\")\r\n\t\t\t.map((src) => {\r\n\t\t\t\tconst parts = src.trimStart().split(\" \");\r\n\t\t\t\tif (parts[0]) parts[0] = this.ctx.rewriteUrl(parts[0], meta);\r\n\t\t\t\treturn parts.join(\" \");\r\n\t\t\t})\r\n\t\t\t.join(\", \");\r\n\t}\r\n\tunwrapSrcset(str, meta = this.ctx.meta) {\r\n\t\treturn str\r\n\t\t\t.split(\",\")\r\n\t\t\t.map((src) => {\r\n\t\t\t\tconst parts = src.trimStart().split(\" \");\r\n\t\t\t\tif (parts[0]) parts[0] = this.ctx.sourceUrl(parts[0], meta);\r\n\t\t\t\treturn parts.join(\" \");\r\n\t\t\t})\r\n\t\t\t.join(\", \");\r\n\t}\r\n\tstatic parse = parse;\r\n\tstatic parseFragment = parseFragment;\r\n\tstatic serialize = serialize;\r\n}\r\n\r\nclass P5Element extends EventEmitter {\r\n\tconstructor(node, stream = false, options = {}) {\r\n\t\tsuper();\r\n\t\tthis.stream = stream;\r\n\t\tthis.node = node;\r\n\t\tthis.options = options;\r\n\t}\r\n\tsetAttribute(name, value) {\r\n\t\tfor (const attr of this.attrs) {\r\n\t\t\tif (attr.name === name) {\r\n\t\t\t\tattr.value = value;\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.attrs.push({\r\n\t\t\tname,\r\n\t\t\tvalue,\r\n\t\t});\r\n\t}\r\n\tgetAttribute(name) {\r\n\t\tconst attr = this.attrs.find((attr) => attr.name === name) || {};\r\n\t\treturn attr.value;\r\n\t}\r\n\thasAttribute(name) {\r\n\t\treturn !!this.attrs.find((attr) => attr.name === name);\r\n\t}\r\n\tremoveAttribute(name) {\r\n\t\tconst i = this.attrs.findIndex((attr) => attr.name === name);\r\n\t\tif (typeof i !== \"undefined\") this.attrs.splice(i, 1);\r\n\t}\r\n\tget tagName() {\r\n\t\treturn this.node.tagName;\r\n\t}\r\n\tset tagName(val) {\r\n\t\tthis.node.tagName = val;\r\n\t}\r\n\tget childNodes() {\r\n\t\treturn !this.stream ? this.node.childNodes : null;\r\n\t}\r\n\tget innerHTML() {\r\n\t\treturn !this.stream\r\n\t\t\t? serialize({\r\n\t\t\t\t\tnodeName: \"#document-fragment\",\r\n\t\t\t\t\tchildNodes: this.childNodes,\r\n\t\t\t\t})\r\n\t\t\t: null;\r\n\t}\r\n\tset innerHTML(val) {\r\n\t\tif (!this.stream) this.node.childNodes = parseFragment(val).childNodes;\r\n\t}\r\n\tget outerHTML() {\r\n\t\treturn !this.stream\r\n\t\t\t? serialize({\r\n\t\t\t\t\tnodeName: \"#document-fragment\",\r\n\t\t\t\t\tchildNodes: [this],\r\n\t\t\t\t})\r\n\t\t\t: null;\r\n\t}\r\n\tset outerHTML(val) {\r\n\t\tif (!this.stream)\r\n\t\t\tthis.parentNode.childNodes.splice(\r\n\t\t\t\tthis.parentNode.childNodes.findIndex((node) => node === this.node),\r\n\t\t\t\t1,\r\n\t\t\t\t...parseFragment(val).childNodes\r\n\t\t\t);\r\n\t}\r\n\tget textContent() {\r\n\t\tif (this.stream) return null;\r\n\r\n\t\tlet str = \"\";\r\n\t\tthis.iterate(this.node, (node) => {\r\n\t\t\tif (node.nodeName === \"#text\") str += node.value;\r\n\t\t});\r\n\r\n\t\treturn str;\r\n\t}\r\n\tset textContent(val) {\r\n\t\tif (!this.stream)\r\n\t\t\tthis.node.childNodes = [\r\n\t\t\t\t{\r\n\t\t\t\t\tnodeName: \"#text\",\r\n\t\t\t\t\tvalue: val,\r\n\t\t\t\t\tparentNode: this.node,\r\n\t\t\t\t},\r\n\t\t\t];\r\n\t}\r\n\tget nodeName() {\r\n\t\treturn this.node.nodeName;\r\n\t}\r\n\tget parentNode() {\r\n\t\treturn this.node.parentNode ? new P5Element(this.node.parentNode) : null;\r\n\t}\r\n\tget attrs() {\r\n\t\treturn this.node.attrs;\r\n\t}\r\n\tget namespaceURI() {\r\n\t\treturn this.node.namespaceURI;\r\n\t}\r\n}\r\n\r\nclass AttributeEvent {\r\n\tconstructor(node, attr, options = {}) {\r\n\t\tthis.attr = attr;\r\n\t\tthis.attrs = node.attrs;\r\n\t\tthis.node = node;\r\n\t\tthis.options = options;\r\n\t}\r\n\tdelete() {\r\n\t\tconst i = this.attrs.findIndex((attr) => attr === this.attr);\r\n\r\n\t\tthis.attrs.splice(i, 1);\r\n\r\n\t\tObject.defineProperty(this, \"deleted\", {\r\n\t\t\tget: () => true,\r\n\t\t});\r\n\r\n\t\treturn true;\r\n\t}\r\n\tget name() {\r\n\t\treturn this.attr.name;\r\n\t}\r\n\r\n\tset name(val) {\r\n\t\tthis.attr.name = val;\r\n\t}\r\n\tget value() {\r\n\t\treturn this.attr.value;\r\n\t}\r\n\r\n\tset value(val) {\r\n\t\tthis.attr.value = val;\r\n\t}\r\n\tget deleted() {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nclass TextEvent {\r\n\tconstructor(node, element, stream = false, options = {}) {\r\n\t\tthis.stream = stream;\r\n\t\tthis.node = node;\r\n\t\tthis.element = element;\r\n\t\tthis.options = options;\r\n\t}\r\n\tget nodeName() {\r\n\t\treturn this.node.nodeName;\r\n\t}\r\n\tget parentNode() {\r\n\t\treturn this.element;\r\n\t}\r\n\tget value() {\r\n\t\treturn this.stream ? this.node.text : this.node.value;\r\n\t}\r\n\tset value(val) {\r\n\t\tif (this.stream) this.node.text = val;\r\n\t\telse this.node.value = val;\r\n\t}\r\n}\r\n\r\nexport default HTML;\r\n", "const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n", "export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n", "export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n", "// Generated using scripts/write-decode-map.ts\n\nexport const htmlDecodeTree: Uint16Array = /* #__PURE__ */ new Uint16Array(\n    // prettier-ignore\n    /* #__PURE__ */ \"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n        .split(\"\")\n        .map((c) => c.charCodeAt(0)),\n);\n", "// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\n\nconst decodeMap = new Map([\n    [0, 65_533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint: (...codePoints: number[]) => string =\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, n/no-unsupported-features/es-builtins\n    String.fromCodePoint ??\n    function (codePoint: number): string {\n        let output = \"\";\n\n        if (codePoint > 0xff_ff) {\n            codePoint -= 0x1_00_00;\n            output += String.fromCharCode(\n                ((codePoint >>> 10) & 0x3_ff) | 0xd8_00,\n            );\n            codePoint = 0xdc_00 | (codePoint & 0x3_ff);\n        }\n\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\n\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint: number): number {\n    if (\n        (codePoint >= 0xd8_00 && codePoint <= 0xdf_ff) ||\n        codePoint > 0x10_ff_ff\n    ) {\n        return 0xff_fd;\n    }\n\n    return decodeMap.get(codePoint) ?? codePoint;\n}\n\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport function decodeCodePoint(codePoint: number): string {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n", "import { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nimport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\nimport { replaceCodePoint, fromCodePoint } from \"./decode-codepoint.js\";\n\nconst enum CharCodes {\n    NUM = 35, // \"#\"\n    SEMI = 59, // \";\"\n    EQUALS = 61, // \"=\"\n    ZERO = 48, // \"0\"\n    NINE = 57, // \"9\"\n    LOWER_A = 97, // \"a\"\n    LOWER_F = 102, // \"f\"\n    LOWER_X = 120, // \"x\"\n    LOWER_Z = 122, // \"z\"\n    UPPER_A = 65, // \"A\"\n    UPPER_F = 70, // \"F\"\n    UPPER_Z = 90, // \"Z\"\n}\n\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b10_0000;\n\nexport enum BinTrieFlags {\n    VALUE_LENGTH = 0b1100_0000_0000_0000,\n    BRANCH_LENGTH = 0b0011_1111_1000_0000,\n    JUMP_TABLE = 0b0000_0000_0111_1111,\n}\n\nfunction isNumber(code: number): boolean {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\n\nfunction isHexadecimalCharacter(code: number): boolean {\n    return (\n        (code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F)\n    );\n}\n\nfunction isAsciiAlphaNumeric(code: number): boolean {\n    return (\n        (code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code)\n    );\n}\n\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code: number): boolean {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\n\nconst enum EntityDecoderState {\n    EntityStart,\n    NumericStart,\n    NumericDecimal,\n    NumericHex,\n    NamedEntity,\n}\n\nexport enum DecodingMode {\n    /** Entities in text nodes that can end with any character. */\n    Legacy = 0,\n    /** Only allow entities terminated with a semicolon. */\n    Strict = 1,\n    /** Entities in attributes have limitations on ending characters. */\n    Attribute = 2,\n}\n\n/**\n * Producers for character reference errors as defined in the HTML spec.\n */\nexport interface EntityErrorProducer {\n    missingSemicolonAfterCharacterReference(): void;\n    absenceOfDigitsInNumericCharacterReference(\n        consumedCharacters: number,\n    ): void;\n    validateNumericCharacterReference(code: number): void;\n}\n\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n        /** The tree used to decode entities. */\n        private readonly decodeTree: Uint16Array,\n        /**\n         * The function that is called when a codepoint is decoded.\n         *\n         * For multi-byte named entities, this will be called multiple times,\n         * with the second codepoint, and the same `consumed` value.\n         *\n         * @param codepoint The decoded codepoint.\n         * @param consumed The number of bytes consumed by the decoder.\n         */\n        private readonly emitCodePoint: (cp: number, consumed: number) => void,\n        /** An object that is used to produce errors. */\n        private readonly errors?: EntityErrorProducer | undefined,\n    ) {}\n\n    /** The current state of the decoder. */\n    private state = EntityDecoderState.EntityStart;\n    /** Characters that were consumed while parsing an entity. */\n    private consumed = 1;\n    /**\n     * The result of the entity.\n     *\n     * Either the result index of a numeric entity, or the codepoint of a\n     * numeric entity.\n     */\n    private result = 0;\n\n    /** The current index in the decode tree. */\n    private treeIndex = 0;\n    /** The number of characters that were consumed in excess. */\n    private excess = 1;\n    /** The mode in which the decoder is operating. */\n    private decodeMode = DecodingMode.Strict;\n\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode: DecodingMode): void {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(input: string, offset: number): number {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (input.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(input, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(input, offset);\n            }\n\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(input, offset);\n            }\n\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(input, offset);\n            }\n\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(input, offset);\n            }\n\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(input, offset);\n            }\n        }\n    }\n\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericStart(input: string, offset: number): number {\n        if (offset >= input.length) {\n            return -1;\n        }\n\n        if ((input.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(input, offset + 1);\n        }\n\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(input, offset);\n    }\n\n    private addToNumericResult(\n        input: string,\n        start: number,\n        end: number,\n        base: number,\n    ): void {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                Number.parseInt(input.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericHex(input: string, offset: number): number {\n        const startIndex = offset;\n\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n\n        this.addToNumericResult(input, startIndex, offset, 16);\n\n        return -1;\n    }\n\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNumericDecimal(input: string, offset: number): number {\n        const startIndex = offset;\n\n        while (offset < input.length) {\n            const char = input.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n\n        this.addToNumericResult(input, startIndex, offset, 10);\n\n        return -1;\n    }\n\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    private emitNumericEntity(lastCp: number, expectedLength: number): number {\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            this.errors?.absenceOfDigitsInNumericCharacterReference(\n                this.consumed,\n            );\n            return 0;\n        }\n\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        } else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n\n        return this.consumed;\n    }\n\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    private stateNamedEntity(input: string, offset: number): number {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n        for (; offset < input.length; offset++, this.excess++) {\n            const char = input.charCodeAt(offset);\n\n            this.treeIndex = determineBranch(\n                decodeTree,\n                current,\n                this.treeIndex + Math.max(1, valueLength),\n                char,\n            );\n\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(\n                        this.treeIndex,\n                        valueLength,\n                        this.consumed + this.excess,\n                    );\n                }\n\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n\n        return -1;\n    }\n\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    private emitNotTerminatedNamedEntity(): number {\n        const { result, decodeTree } = this;\n\n        const valueLength =\n            (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        this.errors?.missingSemicolonAfterCharacterReference();\n\n        return this.consumed;\n    }\n\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    private emitNamedEntityData(\n        result: number,\n        valueLength: number,\n        consumed: number,\n    ): number {\n        const { decodeTree } = this;\n\n        this.emitCodePoint(\n            valueLength === 1\n                ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n                : decodeTree[result + 1],\n            consumed,\n        );\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n\n        return consumed;\n    }\n\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end(): number {\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                this.errors?.absenceOfDigitsInNumericCharacterReference(\n                    this.consumed,\n                );\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree: Uint16Array) {\n    let returnValue = \"\";\n    const decoder = new EntityDecoder(\n        decodeTree,\n        (data) => (returnValue += fromCodePoint(data)),\n    );\n\n    return function decodeWithTrie(\n        input: string,\n        decodeMode: DecodingMode,\n    ): string {\n        let lastIndex = 0;\n        let offset = 0;\n\n        while ((offset = input.indexOf(\"&\", offset)) >= 0) {\n            returnValue += input.slice(lastIndex, offset);\n\n            decoder.startEntity(decodeMode);\n\n            const length = decoder.write(\n                input,\n                // Skip the \"&\"\n                offset + 1,\n            );\n\n            if (length < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n\n            lastIndex = offset + length;\n            // If `length` is 0, skip the current `&` and continue.\n            offset = length === 0 ? lastIndex + 1 : lastIndex;\n        }\n\n        const result = returnValue + input.slice(lastIndex);\n\n        // Make sure we don't keep a reference to the final string.\n        returnValue = \"\";\n\n        return result;\n    };\n}\n\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(\n    decodeTree: Uint16Array,\n    current: number,\n    nodeIndex: number,\n    char: number,\n): number {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIndex : -1;\n    }\n\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIndex + value] - 1;\n    }\n\n    // Case 3: Multiple branches encoded in dictionary\n\n    // Binary search for the character.\n    let lo = nodeIndex;\n    let hi = lo + branchCount - 1;\n\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midValue = decodeTree[mid];\n\n        if (midValue < char) {\n            lo = mid + 1;\n        } else if (midValue > char) {\n            hi = mid - 1;\n        } else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n\n    return -1;\n}\n\nconst htmlDecoder = /* #__PURE__ */ getDecoder(htmlDecodeTree);\nconst xmlDecoder = /* #__PURE__ */ getDecoder(xmlDecodeTree);\n\n/**\n * Decodes an HTML string.\n *\n * @param htmlString The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(\n    htmlString: string,\n    mode: DecodingMode = DecodingMode.Legacy,\n): string {\n    return htmlDecoder(htmlString, mode);\n}\n\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param htmlAttribute The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(htmlAttribute: string): string {\n    return htmlDecoder(htmlAttribute, DecodingMode.Attribute);\n}\n\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param htmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(htmlString: string): string {\n    return htmlDecoder(htmlString, DecodingMode.Strict);\n}\n\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param xmlString The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(xmlString: string): string {\n    return xmlDecoder(xmlString, DecodingMode.Strict);\n}\n\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree } from \"./generated/decode-data-html.js\";\nexport { xmlDecodeTree } from \"./generated/decode-data-xml.js\";\n\nexport {\n    decodeCodePoint,\n    replaceCodePoint,\n    fromCodePoint,\n} from \"./decode-codepoint.js\";\n", "/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n", "import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/decode';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n", "import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        if (this.current && this.currentTagId !== undefined) {\n            this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n        }\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(Math.max(targetIdx, 0));\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== undefined &&\n            this.currentTagId !== exclusionId &&\n            IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n", "//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex !== -1) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx === -1) {\n            this.entries.length = 0;\n        }\n        else {\n            this.entries.splice(0, markerIdx + 1);\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n", "import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n", "import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || (current && this.treeAdapter.getNamespaceURI(current) === NS.HTML);\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode =\n            !isHTML && current !== undefined && tid !== undefined && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent !== null && parent !== void 0 ? parent : this.document, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                currentTagId !== undefined &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex === -1 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return (this.fosterParentingEnabled &&\n            this.openElements.currentTagId !== undefined &&\n            this._isElementCausesFosterParenting(this.openElements.currentTagId));\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(Math.max(idx, 0));\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (p.openElements.currentTagId !== undefined && NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (p.openElements.currentTagId !== undefined && TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        p.openElements.currentTagId !== undefined &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n", "export const xmlReplacer: RegExp = /[\"$&'<>\\u0080-\\uFFFF]/g;\n\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint: (c: string, index: number) => number =\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    String.prototype.codePointAt == null\n        ? (c: string, index: number): number =>\n              (c.charCodeAt(index) & 0xfc_00) === 0xd8_00\n                  ? (c.charCodeAt(index) - 0xd8_00) * 0x4_00 +\n                    c.charCodeAt(index + 1) -\n                    0xdc_00 +\n                    0x1_00_00\n                  : c.charCodeAt(index)\n        : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n          (input: string, index: number): number => input.codePointAt(index)!;\n\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(input: string): string {\n    let returnValue = \"\";\n    let lastIndex = 0;\n    let match;\n\n    while ((match = xmlReplacer.exec(input)) !== null) {\n        const { index } = match;\n        const char = input.charCodeAt(index);\n        const next = xmlCodeMap.get(char);\n\n        if (next === undefined) {\n            returnValue += `${input.substring(lastIndex, index)}&#x${getCodePoint(\n                input,\n                index,\n            ).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIndex = xmlReplacer.lastIndex += Number(\n                (char & 0xfc_00) === 0xd8_00,\n            );\n        } else {\n            returnValue += input.substring(lastIndex, index) + next;\n            lastIndex = index + 1;\n        }\n    }\n\n    return returnValue + input.substr(lastIndex);\n}\n\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape: typeof encodeXML = encodeXML;\n\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(\n    regex: RegExp,\n    map: Map<number, string>,\n): (data: string) => string {\n    return function escape(data: string): string {\n        let match;\n        let lastIndex = 0;\n        let result = \"\";\n\n        while ((match = regex.exec(data))) {\n            if (lastIndex !== match.index) {\n                result += data.substring(lastIndex, match.index);\n            }\n\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0))!;\n\n            // Every match will be of length 1\n            lastIndex = match.index + 1;\n        }\n\n        return result + data.substring(lastIndex);\n    };\n}\n\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8: (data: string) => string = /* #__PURE__ */ getEscaper(\n    /[\"&'<>]/g,\n    xmlCodeMap,\n);\n\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute: (data: string) => string =\n    /* #__PURE__ */ getEscaper(\n        /[\"&\\u00A0]/g,\n        new Map([\n            [34, \"&quot;\"],\n            [38, \"&amp;\"],\n            [160, \"&nbsp;\"],\n        ]),\n    );\n\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText: (data: string) => string = /* #__PURE__ */ getEscaper(\n    /[&<>\\u00A0]/g,\n    new Map([\n        [38, \"&amp;\"],\n        [60, \"&lt;\"],\n        [62, \"&gt;\"],\n        [160, \"&nbsp;\"],\n    ]),\n);\n", "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/escape';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n", "import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\nexport * as html from './common/html.js';\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n", "import EventEmitter from \"events\";\r\n\r\nclass CSS extends EventEmitter {\r\n\tconstructor(ctx) {\r\n\t\tsuper();\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.meta = ctx.meta;\r\n\t}\r\n\trewrite(str, options) {\r\n\t\treturn this.recast(str, options, \"rewrite\");\r\n\t}\r\n\tsource(str, options) {\r\n\t\treturn this.recast(str, options, \"source\");\r\n\t}\r\n\trecast(str, options, type) {\r\n\t\t// regex from vk6 (https://github.com/ading2210)\r\n\t\tconst urlRegex = /url\\(['\"]?(.+?)['\"]?\\)/gm;\r\n\t\tconst Atruleregex =\r\n\t\t\t/@import\\s+(url\\s*?\\(.{0,9999}?\\)|['\"].{0,9999}?['\"]|.{0,9999}?)($|\\s|;)/gm;\r\n\t\tstr = new String(str).toString();\r\n\t\tstr = str.replace(urlRegex, (match, url) => {\r\n\t\t\tconst encodedUrl =\r\n\t\t\t\ttype === \"rewrite\" ? this.ctx.rewriteUrl(url) : this.ctx.sourceUrl(url);\r\n\r\n\t\t\treturn match.replace(url, encodedUrl);\r\n\t\t});\r\n\t\tstr = str.replace(Atruleregex, (match, importStatement) => {\r\n\t\t\treturn match.replace(\r\n\t\t\t\timportStatement,\r\n\t\t\t\timportStatement.replace(\r\n\t\t\t\t\t/^(url\\(['\"]?|['\"]|)(.+?)(['\"]|['\"]?\\)|)$/gm,\r\n\t\t\t\t\t(match, firstQuote, url, endQuote) => {\r\n\t\t\t\t\t\tif (firstQuote.startsWith(\"url\")) {\r\n\t\t\t\t\t\t\treturn match;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst encodedUrl =\r\n\t\t\t\t\t\t\ttype === \"rewrite\"\r\n\t\t\t\t\t\t\t\t? this.ctx.rewriteUrl(url)\r\n\t\t\t\t\t\t\t\t: this.ctx.sourceUrl(url);\r\n\r\n\t\t\t\t\t\treturn `${firstQuote}${encodedUrl}${endQuote}`;\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn str;\r\n\t}\r\n}\r\n\r\nexport default CSS;\r\n", "const errorMessages = {\n    [0]: 'Unexpected token',\n    [30]: \"Unexpected token: '%0'\",\n    [1]: 'Octal escape sequences are not allowed in strict mode',\n    [2]: 'Octal escape sequences are not allowed in template strings',\n    [3]: '\\\\8 and \\\\9 are not allowed in template strings',\n    [4]: 'Private identifier #%0 is not defined',\n    [5]: 'Illegal Unicode escape sequence',\n    [6]: 'Invalid code point %0',\n    [7]: 'Invalid hexadecimal escape sequence',\n    [9]: 'Octal literals are not allowed in strict mode',\n    [8]: 'Decimal integer literals with a leading zero are forbidden in strict mode',\n    [10]: 'Expected number in radix %0',\n    [151]: 'Invalid left-hand side assignment to a destructible right-hand side',\n    [11]: 'Non-number found after exponent indicator',\n    [12]: 'Invalid BigIntLiteral',\n    [13]: 'No identifiers allowed directly after numeric literal',\n    [14]: 'Escapes \\\\8 or \\\\9 are not syntactically valid escapes',\n    [15]: 'Escapes \\\\8 or \\\\9 are not allowed in strict mode',\n    [16]: 'Unterminated string literal',\n    [17]: 'Unterminated template literal',\n    [18]: 'Multiline comment was not closed properly',\n    [19]: 'The identifier contained dynamic unicode escape that was not closed',\n    [20]: \"Illegal character '%0'\",\n    [21]: 'Missing hexadecimal digits',\n    [22]: 'Invalid implicit octal',\n    [23]: 'Invalid line break in string literal',\n    [24]: 'Only unicode escapes are legal in identifier names',\n    [25]: \"Expected '%0'\",\n    [26]: 'Invalid left-hand side in assignment',\n    [27]: 'Invalid left-hand side in async arrow',\n    [28]: 'Calls to super must be in the \"constructor\" method of a class expression or class declaration that has a superclass',\n    [29]: 'Member access on super must be in a method',\n    [31]: 'Await expression not allowed in formal parameter',\n    [32]: 'Yield expression not allowed in formal parameter',\n    [95]: \"Unexpected token: 'escaped keyword'\",\n    [33]: 'Unary expressions as the left operand of an exponentiation expression must be disambiguated with parentheses',\n    [123]: 'Async functions can only be declared at the top level or inside a block',\n    [34]: 'Unterminated regular expression',\n    [35]: 'Unexpected regular expression flag',\n    [36]: \"Duplicate regular expression flag '%0'\",\n    [37]: '%0 functions must have exactly %1 argument%2',\n    [38]: 'Setter function argument must not be a rest parameter',\n    [39]: '%0 declaration must have a name in this context',\n    [40]: 'Function name may not contain any reserved words or be eval or arguments in strict mode',\n    [41]: 'The rest operator is missing an argument',\n    [42]: 'A getter cannot be a generator',\n    [43]: 'A setter cannot be a generator',\n    [44]: 'A computed property name must be followed by a colon or paren',\n    [134]: 'Object literal keys that are strings or numbers must be a method or have a colon',\n    [46]: 'Found `* async x(){}` but this should be `async * x(){}`',\n    [45]: 'Getters and setters can not be generators',\n    [47]: \"'%0' can not be generator method\",\n    [48]: \"No line break is allowed after '=>'\",\n    [49]: 'The left-hand side of the arrow can only be destructed through assignment',\n    [50]: 'The binding declaration is not destructible',\n    [51]: 'Async arrow can not be followed by new expression',\n    [52]: \"Classes may not have a static property named 'prototype'\",\n    [53]: 'Class constructor may not be a %0',\n    [54]: 'Duplicate constructor method in class',\n    [55]: 'Invalid increment/decrement operand',\n    [56]: 'Invalid use of `new` keyword on an increment/decrement expression',\n    [57]: '`=>` is an invalid assignment target',\n    [58]: 'Rest element may not have a trailing comma',\n    [59]: 'Missing initializer in %0 declaration',\n    [60]: \"'for-%0' loop head declarations can not have an initializer\",\n    [61]: 'Invalid left-hand side in for-%0 loop: Must have a single binding',\n    [62]: 'Invalid shorthand property initializer',\n    [63]: 'Property name __proto__ appears more than once in object literal',\n    [64]: 'Let is disallowed as a lexically bound name',\n    [65]: \"Invalid use of '%0' inside new expression\",\n    [66]: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n    [67]: 'Identifier \"let\" disallowed as left-hand side expression in strict mode',\n    [68]: 'Illegal continue statement',\n    [69]: 'Illegal break statement',\n    [70]: 'Cannot have `let[...]` as a var name in strict mode',\n    [71]: 'Invalid destructuring assignment target',\n    [72]: 'Rest parameter may not have a default initializer',\n    [73]: 'The rest argument must the be last parameter',\n    [74]: 'Invalid rest argument',\n    [76]: 'In strict mode code, functions can only be declared at top level or inside a block',\n    [77]: 'In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement',\n    [78]: 'Without web compatibility enabled functions can not be declared at top level, inside a block, or as the body of an if statement',\n    [79]: \"Class declaration can't appear in single-statement context\",\n    [80]: 'Invalid left-hand side in for-%0',\n    [81]: 'Invalid assignment in for-%0',\n    [82]: 'for await (... of ...) is only valid in async functions and async generators',\n    [83]: 'The first token after the template expression should be a continuation of the template',\n    [85]: '`let` declaration not allowed here and `let` cannot be a regular var name in strict mode',\n    [84]: '`let \\n [` is a restricted production at the start of a statement',\n    [86]: 'Catch clause requires exactly one parameter, not more (and no trailing comma)',\n    [87]: 'Catch clause parameter does not support default values',\n    [88]: 'Missing catch or finally after try',\n    [89]: 'More than one default clause in switch statement',\n    [90]: 'Illegal newline after throw',\n    [91]: 'Strict mode code may not include a with statement',\n    [92]: 'Illegal return statement',\n    [93]: 'The left hand side of the for-header binding declaration is not destructible',\n    [94]: 'new.target only allowed within functions or static blocks',\n    [96]: \"'#' not followed by identifier\",\n    [102]: 'Invalid keyword',\n    [101]: \"Can not use 'let' as a class name\",\n    [100]: \"'A lexical declaration can't define a 'let' binding\",\n    [99]: 'Can not use `let` as variable name in strict mode',\n    [97]: \"'%0' may not be used as an identifier in this context\",\n    [98]: 'Await is only valid in async functions',\n    [103]: 'The %0 keyword can only be used with the module goal',\n    [104]: 'Unicode codepoint must not be greater than 0x10FFFF',\n    [105]: '%0 source must be string',\n    [106]: 'Only a identifier or string can be used to indicate alias',\n    [107]: \"Only '*' or '{...}' can be imported after default\",\n    [108]: 'Trailing decorator may be followed by method',\n    [109]: \"Decorators can't be used with a constructor\",\n    [110]: 'Can not use `await` as identifier in module or async func',\n    [111]: 'Can not use `await` as identifier in module',\n    [112]: 'HTML comments are only allowed with web compatibility (Annex B)',\n    [113]: \"The identifier 'let' must not be in expression position in strict mode\",\n    [114]: 'Cannot assign to `eval` and `arguments` in strict mode',\n    [115]: \"The left-hand side of a for-of loop may not start with 'let'\",\n    [116]: 'Block body arrows can not be immediately invoked without a group',\n    [117]: 'Block body arrows can not be immediately accessed without a group',\n    [118]: 'Unexpected strict mode reserved word',\n    [119]: 'Unexpected eval or arguments in strict mode',\n    [120]: 'Decorators must not be followed by a semicolon',\n    [121]: 'Calling delete on expression not allowed in strict mode',\n    [122]: 'Pattern can not have a tail',\n    [124]: 'Can not have a `yield` expression on the left side of a ternary',\n    [125]: 'An arrow function can not have a postfix update operator',\n    [126]: 'Invalid object literal key character after generator star',\n    [127]: 'Private fields can not be deleted',\n    [129]: 'Classes may not have a field called constructor',\n    [128]: 'Classes may not have a private element named constructor',\n    [130]: 'A class field initializer or static block may not contain arguments',\n    [131]: 'Generators can only be declared at the top level or inside a block',\n    [132]: 'Async methods are a restricted production and cannot have a newline following it',\n    [133]: 'Unexpected character after object literal property name',\n    [135]: 'Invalid key token',\n    [136]: \"Label '%0' has already been declared\",\n    [137]: 'continue statement must be nested within an iteration statement',\n    [138]: \"Undefined label '%0'\",\n    [139]: 'Trailing comma is disallowed inside import(...) arguments',\n    [140]: 'Invalid binding in JSON import',\n    [141]: 'import() requires exactly one argument',\n    [142]: 'Cannot use new with import(...)',\n    [143]: '... is not allowed in import()',\n    [144]: \"Expected '=>'\",\n    [145]: \"Duplicate binding '%0'\",\n    [146]: 'Duplicate private identifier #%0',\n    [147]: \"Cannot export a duplicate name '%0'\",\n    [150]: 'Duplicate %0 for-binding',\n    [148]: \"Exported binding '%0' needs to refer to a top-level declared variable\",\n    [149]: 'Unexpected private field',\n    [153]: 'Numeric separators are not allowed at the end of numeric literals',\n    [152]: 'Only one underscore is allowed as numeric separator',\n    [154]: 'JSX value should be either an expression or a quoted JSX text',\n    [155]: 'Expected corresponding JSX closing tag for %0',\n    [156]: 'Adjacent JSX elements must be wrapped in an enclosing tag',\n    [157]: \"JSX attributes must only be assigned a non-empty 'expression'\",\n    [158]: \"'%0' has already been declared\",\n    [159]: \"'%0' shadowed a catch clause binding\",\n    [160]: 'Dot property must be an identifier',\n    [161]: 'Encountered invalid input after spread/rest argument',\n    [162]: 'Catch without try',\n    [163]: 'Finally without try',\n    [164]: 'Expected corresponding closing tag for JSX fragment',\n    [165]: 'Coalescing and logical operators used together in the same expression must be disambiguated with parentheses',\n    [166]: 'Invalid tagged template on optional chain',\n    [167]: 'Invalid optional chain from super property',\n    [168]: 'Invalid optional chain from new expression',\n    [169]: 'Cannot use \"import.meta\" outside a module',\n    [170]: 'Leading decorators must be attached to a class declaration',\n    [171]: 'An export name cannot include a lone surrogate, found %0',\n    [172]: 'A string literal cannot be used as an exported binding without `from`',\n    [173]: \"Private fields can't be accessed on super\",\n    [174]: \"The only valid meta property for import is 'import.meta'\",\n    [175]: \"'import.meta' must not contain escaped characters\",\n    [176]: 'cannot use \"await\" as identifier inside an async function',\n    [177]: 'cannot use \"await\" in static blocks',\n};\nclass ParseError extends SyntaxError {\n    start;\n    end;\n    range;\n    loc;\n    description;\n    constructor(start, end, type, ...params) {\n        const description = errorMessages[type].replace(/%(\\d+)/g, (_, i) => params[i]);\n        const message = '[' + start.line + ':' + start.column + '-' + end.line + ':' + end.column + ']: ' + description;\n        super(message);\n        this.start = start.index;\n        this.end = end.index;\n        this.range = [start.index, end.index];\n        this.loc = {\n            start: { line: start.line, column: start.column },\n            end: { line: end.line, column: end.column },\n        };\n        this.description = description;\n    }\n}\nfunction report(parser, type, ...params) {\n    throw new ParseError(parser.tokenStart, parser.currentLocation, type, ...params);\n}\nfunction reportScopeError(scope) {\n    throw new ParseError(scope.start, scope.end, scope.type, ...scope.params);\n}\nfunction reportMessageAt(start, end, type, ...params) {\n    throw new ParseError(start, end, type, ...params);\n}\nfunction reportScannerError(start, end, type) {\n    throw new ParseError(start, end, type);\n}\n\nconst unicodeLookup = ((compressed, lookup) => {\n    const result = new Uint32Array(104448);\n    let index = 0;\n    let subIndex = 0;\n    while (index < 3822) {\n        const inst = compressed[index++];\n        if (inst < 0) {\n            subIndex -= inst;\n        }\n        else {\n            let code = compressed[index++];\n            if (inst & 2)\n                code = lookup[code];\n            if (inst & 1) {\n                result.fill(code, subIndex, subIndex += compressed[index++]);\n            }\n            else {\n                result[subIndex++] = code;\n            }\n        }\n    }\n    return result;\n})([-1, 2, 26, 2, 27, 2, 5, -1, 0, 77595648, 3, 44, 2, 3, 0, 14, 2, 63, 2, 64, 3, 0, 3, 0, 3168796671, 0, 4294956992, 2, 1, 2, 0, 2, 41, 3, 0, 4, 0, 4294966523, 3, 0, 4, 2, 16, 2, 65, 2, 0, 0, 4294836735, 0, 3221225471, 0, 4294901942, 2, 66, 0, 134152192, 3, 0, 2, 0, 4294951935, 3, 0, 2, 0, 2683305983, 0, 2684354047, 2, 18, 2, 0, 0, 4294961151, 3, 0, 2, 2, 19, 2, 0, 0, 608174079, 2, 0, 2, 60, 2, 7, 2, 6, 0, 4286611199, 3, 0, 2, 2, 1, 3, 0, 3, 0, 4294901711, 2, 40, 0, 4089839103, 0, 2961209759, 0, 1342439375, 0, 4294543342, 0, 3547201023, 0, 1577204103, 0, 4194240, 0, 4294688750, 2, 2, 0, 80831, 0, 4261478351, 0, 4294549486, 2, 2, 0, 2967484831, 0, 196559, 0, 3594373100, 0, 3288319768, 0, 8469959, 2, 203, 2, 3, 0, 4093640191, 0, 660618719, 0, 65487, 0, 4294828015, 0, 4092591615, 0, 1616920031, 0, 982991, 2, 3, 2, 0, 0, 2163244511, 0, 4227923919, 0, 4236247022, 2, 71, 0, 4284449919, 0, 851904, 2, 4, 2, 12, 0, 67076095, -1, 2, 72, 0, 1073741743, 0, 4093607775, -1, 0, 50331649, 0, 3265266687, 2, 33, 0, 4294844415, 0, 4278190047, 2, 20, 2, 137, -1, 3, 0, 2, 2, 23, 2, 0, 2, 10, 2, 0, 2, 15, 2, 22, 3, 0, 10, 2, 74, 2, 0, 2, 75, 2, 76, 2, 77, 2, 0, 2, 78, 2, 0, 2, 11, 0, 261632, 2, 25, 3, 0, 2, 2, 13, 2, 4, 3, 0, 18, 2, 79, 2, 5, 3, 0, 2, 2, 80, 0, 2151677951, 2, 29, 2, 9, 0, 909311, 3, 0, 2, 0, 814743551, 2, 49, 0, 67090432, 3, 0, 2, 2, 42, 2, 0, 2, 6, 2, 0, 2, 30, 2, 8, 0, 268374015, 2, 110, 2, 51, 2, 0, 2, 81, 0, 134153215, -1, 2, 7, 2, 0, 2, 8, 0, 2684354559, 0, 67044351, 0, 3221160064, 2, 17, -1, 3, 0, 2, 2, 53, 0, 1046528, 3, 0, 3, 2, 9, 2, 0, 2, 54, 0, 4294960127, 2, 10, 2, 6, 2, 11, 0, 4294377472, 2, 12, 3, 0, 16, 2, 13, 2, 0, 2, 82, 2, 10, 2, 0, 2, 83, 2, 84, 2, 85, 2, 210, 2, 55, 0, 1048577, 2, 86, 2, 14, -1, 2, 14, 0, 131042, 2, 87, 2, 88, 2, 89, 2, 0, 2, 34, -83, 3, 0, 7, 0, 1046559, 2, 0, 2, 15, 2, 0, 0, 2147516671, 2, 21, 3, 90, 2, 2, 0, -16, 2, 91, 0, 524222462, 2, 4, 2, 0, 0, 4269801471, 2, 4, 3, 0, 2, 2, 28, 2, 16, 3, 0, 2, 2, 17, 2, 0, -1, 2, 18, -16, 3, 0, 206, -2, 3, 0, 692, 2, 73, -1, 2, 18, 2, 10, 3, 0, 8, 2, 93, 2, 133, 2, 0, 0, 3220242431, 3, 0, 3, 2, 19, 2, 94, 2, 95, 3, 0, 2, 2, 96, 2, 0, 2, 97, 2, 46, 2, 0, 0, 4351, 2, 0, 2, 9, 3, 0, 2, 0, 67043391, 0, 3909091327, 2, 0, 2, 24, 2, 9, 2, 20, 3, 0, 2, 0, 67076097, 2, 8, 2, 0, 2, 21, 0, 67059711, 0, 4236247039, 3, 0, 2, 0, 939524103, 0, 8191999, 2, 101, 2, 102, 2, 22, 2, 23, 3, 0, 3, 0, 67057663, 3, 0, 349, 2, 103, 2, 104, 2, 7, -264, 3, 0, 11, 2, 24, 3, 0, 2, 2, 32, -1, 0, 3774349439, 2, 105, 2, 106, 3, 0, 2, 2, 19, 2, 107, 3, 0, 10, 2, 10, 2, 18, 2, 0, 2, 47, 2, 0, 2, 31, 2, 108, 2, 25, 0, 1638399, 2, 183, 2, 109, 3, 0, 3, 2, 20, 2, 26, 2, 27, 2, 5, 2, 28, 2, 0, 2, 8, 2, 111, -1, 2, 112, 2, 113, 2, 114, -1, 3, 0, 3, 2, 12, -2, 2, 0, 2, 29, -3, 2, 163, -4, 2, 20, 2, 0, 2, 36, 0, 1, 2, 0, 2, 67, 2, 6, 2, 12, 2, 10, 2, 0, 2, 115, -1, 3, 0, 4, 2, 10, 2, 23, 2, 116, 2, 7, 2, 0, 2, 117, 2, 0, 2, 118, 2, 119, 2, 120, 2, 0, 2, 9, 3, 0, 9, 2, 21, 2, 30, 2, 31, 2, 121, 2, 122, -2, 2, 123, 2, 124, 2, 30, 2, 21, 2, 8, -2, 2, 125, 2, 30, 2, 32, -2, 2, 0, 2, 39, -2, 0, 4277137519, 0, 2269118463, -1, 3, 20, 2, -1, 2, 33, 2, 38, 2, 0, 3, 30, 2, 2, 35, 2, 19, -3, 3, 0, 2, 2, 34, -1, 2, 0, 2, 35, 2, 0, 2, 35, 2, 0, 2, 48, 2, 0, 0, 4294950463, 2, 37, -7, 2, 0, 0, 203775, 2, 57, 2, 167, 2, 20, 2, 43, 2, 36, 2, 18, 2, 37, 2, 18, 2, 126, 2, 21, 3, 0, 2, 2, 38, 0, 2151677888, 2, 0, 2, 12, 0, 4294901764, 2, 144, 2, 0, 2, 58, 2, 56, 0, 5242879, 3, 0, 2, 0, 402644511, -1, 2, 128, 2, 39, 0, 3, -1, 2, 129, 2, 130, 2, 0, 0, 67045375, 2, 40, 0, 4226678271, 0, 3766565279, 0, 2039759, 2, 132, 2, 41, 0, 1046437, 0, 6, 3, 0, 2, 0, 3288270847, 0, 3, 3, 0, 2, 0, 67043519, -5, 2, 0, 0, 4282384383, 0, 1056964609, -1, 3, 0, 2, 0, 67043345, -1, 2, 0, 2, 42, 2, 23, 2, 50, 2, 11, 2, 61, 2, 38, -5, 2, 0, 2, 12, -3, 3, 0, 2, 0, 2147484671, 2, 134, 0, 4190109695, 2, 52, -2, 2, 135, 0, 4244635647, 0, 27, 2, 0, 2, 8, 2, 43, 2, 0, 2, 68, 2, 18, 2, 0, 2, 42, -6, 2, 0, 2, 45, 2, 59, 2, 44, 2, 45, 2, 46, 2, 47, 0, 8388351, -2, 2, 136, 0, 3028287487, 2, 48, 2, 138, 0, 33259519, 2, 49, -9, 2, 21, 0, 4294836223, 0, 3355443199, 0, 134152199, -2, 2, 69, -2, 3, 0, 28, 2, 32, -3, 3, 0, 3, 2, 17, 3, 0, 6, 2, 50, -81, 2, 18, 3, 0, 2, 2, 36, 3, 0, 33, 2, 25, 2, 30, 3, 0, 124, 2, 12, 3, 0, 18, 2, 38, -213, 2, 0, 2, 32, -54, 3, 0, 17, 2, 42, 2, 8, 2, 23, 2, 0, 2, 8, 2, 23, 2, 51, 2, 0, 2, 21, 2, 52, 2, 139, 2, 25, -13, 2, 0, 2, 53, -6, 3, 0, 2, -4, 3, 0, 2, 0, 4294936575, 2, 0, 0, 4294934783, -2, 0, 196635, 3, 0, 191, 2, 54, 3, 0, 38, 2, 30, 2, 55, 2, 34, -278, 2, 140, 3, 0, 9, 2, 141, 2, 142, 2, 56, 3, 0, 11, 2, 7, -72, 3, 0, 3, 2, 143, 0, 1677656575, -130, 2, 26, -16, 2, 0, 2, 24, 2, 38, -16, 0, 4161266656, 0, 4071, 2, 205, -4, 2, 57, -13, 3, 0, 2, 2, 58, 2, 0, 2, 145, 2, 146, 2, 62, 2, 0, 2, 147, 2, 148, 2, 149, 3, 0, 10, 2, 150, 2, 151, 2, 22, 3, 58, 2, 3, 152, 2, 3, 59, 2, 0, 4294954999, 2, 0, -16, 2, 0, 2, 92, 2, 0, 0, 2105343, 0, 4160749584, 2, 177, -34, 2, 8, 2, 154, -6, 0, 4194303871, 0, 4294903771, 2, 0, 2, 60, 2, 100, -3, 2, 0, 0, 1073684479, 0, 17407, -9, 2, 18, 2, 17, 2, 0, 2, 32, -14, 2, 18, 2, 32, -6, 2, 18, 2, 12, -15, 2, 155, 3, 0, 6, 0, 8323103, -1, 3, 0, 2, 2, 61, -37, 2, 62, 2, 156, 2, 157, 2, 158, 2, 159, 2, 160, -105, 2, 26, -32, 3, 0, 1335, -1, 3, 0, 129, 2, 32, 3, 0, 6, 2, 10, 3, 0, 180, 2, 161, 3, 0, 233, 2, 162, 3, 0, 18, 2, 10, -77, 3, 0, 16, 2, 10, -47, 3, 0, 154, 2, 6, 3, 0, 130, 2, 25, -22250, 3, 0, 7, 2, 25, -6130, 3, 5, 2, -1, 0, 69207040, 3, 44, 2, 3, 0, 14, 2, 63, 2, 64, -3, 0, 3168731136, 0, 4294956864, 2, 1, 2, 0, 2, 41, 3, 0, 4, 0, 4294966275, 3, 0, 4, 2, 16, 2, 65, 2, 0, 2, 34, -1, 2, 18, 2, 66, -1, 2, 0, 0, 2047, 0, 4294885376, 3, 0, 2, 0, 3145727, 0, 2617294944, 0, 4294770688, 2, 25, 2, 67, 3, 0, 2, 0, 131135, 2, 98, 0, 70256639, 0, 71303167, 0, 272, 2, 42, 2, 6, 0, 32511, 2, 0, 2, 49, -1, 2, 99, 2, 68, 0, 4278255616, 0, 4294836227, 0, 4294549473, 0, 600178175, 0, 2952806400, 0, 268632067, 0, 4294543328, 0, 57540095, 0, 1577058304, 0, 1835008, 0, 4294688736, 2, 70, 2, 69, 0, 33554435, 2, 131, 2, 70, 2, 164, 0, 131075, 0, 3594373096, 0, 67094296, 2, 69, -1, 0, 4294828000, 0, 603979263, 0, 654311424, 0, 3, 0, 4294828001, 0, 602930687, 2, 171, 0, 393219, 0, 4294828016, 0, 671088639, 0, 2154840064, 0, 4227858435, 0, 4236247008, 2, 71, 2, 38, -1, 2, 4, 0, 917503, 2, 38, -1, 2, 72, 0, 537788335, 0, 4026531935, -1, 0, 1, -1, 2, 33, 2, 73, 0, 7936, -3, 2, 0, 0, 2147485695, 0, 1010761728, 0, 4292984930, 0, 16387, 2, 0, 2, 15, 2, 22, 3, 0, 10, 2, 74, 2, 0, 2, 75, 2, 76, 2, 77, 2, 0, 2, 78, 2, 0, 2, 12, -1, 2, 25, 3, 0, 2, 2, 13, 2, 4, 3, 0, 18, 2, 79, 2, 5, 3, 0, 2, 2, 80, 0, 2147745791, 3, 19, 2, 0, 122879, 2, 0, 2, 9, 0, 276824064, -2, 3, 0, 2, 2, 42, 2, 0, 0, 4294903295, 2, 0, 2, 30, 2, 8, -1, 2, 18, 2, 51, 2, 0, 2, 81, 2, 49, -1, 2, 21, 2, 0, 2, 29, -2, 0, 128, -2, 2, 28, 2, 9, 0, 8160, -1, 2, 127, 0, 4227907585, 2, 0, 2, 37, 2, 0, 2, 50, 2, 184, 2, 10, 2, 6, 2, 11, -1, 0, 74440192, 3, 0, 6, -2, 3, 0, 8, 2, 13, 2, 0, 2, 82, 2, 10, 2, 0, 2, 83, 2, 84, 2, 85, -3, 2, 86, 2, 14, -3, 2, 87, 2, 88, 2, 89, 2, 0, 2, 34, -83, 3, 0, 7, 0, 817183, 2, 0, 2, 15, 2, 0, 0, 33023, 2, 21, 3, 90, 2, -17, 2, 91, 0, 524157950, 2, 4, 2, 0, 2, 92, 2, 4, 2, 0, 2, 22, 2, 28, 2, 16, 3, 0, 2, 2, 17, 2, 0, -1, 2, 18, -16, 3, 0, 206, -2, 3, 0, 692, 2, 73, -1, 2, 18, 2, 10, 3, 0, 8, 2, 93, 0, 3072, 2, 0, 0, 2147516415, 2, 10, 3, 0, 2, 2, 25, 2, 94, 2, 95, 3, 0, 2, 2, 96, 2, 0, 2, 97, 2, 46, 0, 4294965179, 0, 7, 2, 0, 2, 9, 2, 95, 2, 9, -1, 0, 1761345536, 2, 98, 0, 4294901823, 2, 38, 2, 20, 2, 99, 2, 35, 2, 100, 0, 2080440287, 2, 0, 2, 34, 2, 153, 0, 3296722943, 2, 0, 0, 1046675455, 0, 939524101, 0, 1837055, 2, 101, 2, 102, 2, 22, 2, 23, 3, 0, 3, 0, 7, 3, 0, 349, 2, 103, 2, 104, 2, 7, -264, 3, 0, 11, 2, 24, 3, 0, 2, 2, 32, -1, 0, 2700607615, 2, 105, 2, 106, 3, 0, 2, 2, 19, 2, 107, 3, 0, 10, 2, 10, 2, 18, 2, 0, 2, 47, 2, 0, 2, 31, 2, 108, -3, 2, 109, 3, 0, 3, 2, 20, -1, 3, 5, 2, 2, 110, 2, 0, 2, 8, 2, 111, -1, 2, 112, 2, 113, 2, 114, -1, 3, 0, 3, 2, 12, -2, 2, 0, 2, 29, -8, 2, 20, 2, 0, 2, 36, -1, 2, 0, 2, 67, 2, 6, 2, 30, 2, 10, 2, 0, 2, 115, -1, 3, 0, 4, 2, 10, 2, 18, 2, 116, 2, 7, 2, 0, 2, 117, 2, 0, 2, 118, 2, 119, 2, 120, 2, 0, 2, 9, 3, 0, 9, 2, 21, 2, 30, 2, 31, 2, 121, 2, 122, -2, 2, 123, 2, 124, 2, 30, 2, 21, 2, 8, -2, 2, 125, 2, 30, 2, 32, -2, 2, 0, 2, 39, -2, 0, 4277075969, 2, 30, -1, 3, 20, 2, -1, 2, 33, 2, 126, 2, 0, 3, 30, 2, 2, 35, 2, 19, -3, 3, 0, 2, 2, 34, -1, 2, 0, 2, 35, 2, 0, 2, 35, 2, 0, 2, 50, 2, 98, 0, 4294934591, 2, 37, -7, 2, 0, 0, 197631, 2, 57, -1, 2, 20, 2, 43, 2, 37, 2, 18, 0, 3, 2, 18, 2, 126, 2, 21, 2, 127, 2, 54, -1, 0, 2490368, 2, 127, 2, 25, 2, 18, 2, 34, 2, 127, 2, 38, 0, 4294901904, 0, 4718591, 2, 127, 2, 35, 0, 335544350, -1, 2, 128, 0, 2147487743, 0, 1, -1, 2, 129, 2, 130, 2, 8, -1, 2, 131, 2, 70, 0, 3758161920, 0, 3, 2, 132, 0, 12582911, 0, 655360, -1, 2, 0, 2, 29, 0, 2147485568, 0, 3, 2, 0, 2, 25, 0, 176, -5, 2, 0, 2, 17, 2, 192, -1, 2, 0, 2, 25, 2, 209, -1, 2, 0, 0, 16779263, -2, 2, 12, -1, 2, 38, -5, 2, 0, 2, 133, -3, 3, 0, 2, 2, 55, 2, 134, 0, 2147549183, 0, 2, -2, 2, 135, 2, 36, 0, 10, 0, 4294965249, 0, 67633151, 0, 4026597376, 2, 0, 0, 536871935, 2, 18, 2, 0, 2, 42, -6, 2, 0, 0, 1, 2, 59, 2, 17, 0, 1, 2, 46, 2, 25, -3, 2, 136, 2, 36, 2, 137, 2, 138, 0, 16778239, -10, 2, 35, 0, 4294836212, 2, 9, -3, 2, 69, -2, 3, 0, 28, 2, 32, -3, 3, 0, 3, 2, 17, 3, 0, 6, 2, 50, -81, 2, 18, 3, 0, 2, 2, 36, 3, 0, 33, 2, 25, 0, 126, 3, 0, 124, 2, 12, 3, 0, 18, 2, 38, -213, 2, 10, -55, 3, 0, 17, 2, 42, 2, 8, 2, 18, 2, 0, 2, 8, 2, 18, 2, 60, 2, 0, 2, 25, 2, 50, 2, 139, 2, 25, -13, 2, 0, 2, 73, -6, 3, 0, 2, -4, 3, 0, 2, 0, 67583, -1, 2, 107, -2, 0, 11, 3, 0, 191, 2, 54, 3, 0, 38, 2, 30, 2, 55, 2, 34, -278, 2, 140, 3, 0, 9, 2, 141, 2, 142, 2, 56, 3, 0, 11, 2, 7, -72, 3, 0, 3, 2, 143, 2, 144, -187, 3, 0, 2, 2, 58, 2, 0, 2, 145, 2, 146, 2, 62, 2, 0, 2, 147, 2, 148, 2, 149, 3, 0, 10, 2, 150, 2, 151, 2, 22, 3, 58, 2, 3, 152, 2, 3, 59, 2, 2, 153, -57, 2, 8, 2, 154, -7, 2, 18, 2, 0, 2, 60, -4, 2, 0, 0, 1065361407, 0, 16384, -9, 2, 18, 2, 60, 2, 0, 2, 133, -14, 2, 18, 2, 133, -6, 2, 18, 0, 81919, -15, 2, 155, 3, 0, 6, 2, 126, -1, 3, 0, 2, 0, 2063, -37, 2, 62, 2, 156, 2, 157, 2, 158, 2, 159, 2, 160, -138, 3, 0, 1335, -1, 3, 0, 129, 2, 32, 3, 0, 6, 2, 10, 3, 0, 180, 2, 161, 3, 0, 233, 2, 162, 3, 0, 18, 2, 10, -77, 3, 0, 16, 2, 10, -47, 3, 0, 154, 2, 6, 3, 0, 130, 2, 25, -28386, 2, 0, 0, 1, -1, 2, 55, 2, 0, 0, 8193, -21, 2, 201, 0, 10255, 0, 4, -11, 2, 69, 2, 182, -1, 0, 71680, -1, 2, 174, 0, 4292900864, 0, 268435519, -5, 2, 163, -1, 2, 173, -1, 0, 6144, -2, 2, 46, -1, 2, 168, -1, 0, 2147532800, 2, 164, 2, 170, 0, 8355840, -2, 0, 4, -4, 2, 198, 0, 205128192, 0, 1333757536, 0, 2147483696, 0, 423953, 0, 747766272, 0, 2717763192, 0, 4286578751, 0, 278545, 2, 165, 0, 4294886464, 0, 33292336, 0, 417809, 2, 165, 0, 1327482464, 0, 4278190128, 0, 700594195, 0, 1006647527, 0, 4286497336, 0, 4160749631, 2, 166, 0, 201327104, 0, 3634348576, 0, 8323120, 2, 166, 0, 202375680, 0, 2678047264, 0, 4293984304, 2, 166, -1, 0, 983584, 0, 48, 0, 58720273, 0, 3489923072, 0, 10517376, 0, 4293066815, 0, 1, 2, 213, 2, 167, 2, 0, 0, 2089, 0, 3221225552, 0, 201359520, 2, 0, -2, 0, 256, 0, 122880, 0, 16777216, 2, 163, 0, 4160757760, 2, 0, -6, 2, 179, -11, 0, 3263218176, -1, 0, 49664, 0, 2160197632, 0, 8388802, -1, 0, 12713984, -1, 2, 168, 2, 186, 2, 187, -2, 2, 175, -20, 0, 3758096385, -2, 2, 169, 2, 195, 2, 94, 2, 180, 0, 4294057984, -2, 2, 176, 2, 172, 0, 4227874816, -2, 2, 169, -1, 2, 170, -1, 2, 181, 2, 55, 0, 4026593280, 0, 14, 0, 4292919296, -1, 2, 178, 0, 939588608, -1, 0, 805306368, -1, 2, 55, 2, 171, 2, 172, 2, 173, 2, 211, 2, 0, -2, 0, 8192, -4, 0, 267386880, -1, 0, 117440512, 0, 7168, -1, 2, 170, 2, 168, 2, 174, 2, 188, -16, 2, 175, -1, 0, 1426112704, 2, 176, -1, 2, 196, 0, 271581216, 0, 2149777408, 2, 25, 2, 174, 2, 55, 0, 851967, 2, 189, -1, 2, 177, 2, 190, -4, 2, 178, -20, 2, 98, 2, 208, -56, 0, 3145728, 2, 191, -10, 0, 32505856, -1, 2, 179, -1, 0, 2147385088, 2, 94, 1, 2155905152, 2, -3, 2, 176, 2, 0, 0, 67108864, -2, 2, 180, -6, 2, 181, 2, 25, 0, 1, -1, 0, 1, -1, 2, 182, -3, 2, 126, 2, 69, -2, 2, 100, -2, 0, 32704, 2, 55, -915, 2, 183, -1, 2, 207, -10, 2, 194, -5, 2, 185, -6, 0, 3759456256, 2, 19, -1, 2, 184, -1, 2, 185, -2, 0, 4227874752, -3, 0, 2146435072, 2, 186, -2, 0, 1006649344, 2, 55, -1, 2, 94, 0, 201375744, -3, 0, 134217720, 2, 94, 0, 4286677377, 0, 32896, -1, 2, 178, -3, 0, 4227907584, -349, 0, 65520, 0, 1920, 2, 167, 3, 0, 264, -11, 2, 173, -2, 2, 187, 2, 0, 0, 520617856, 0, 2692743168, 0, 36, -3, 0, 524280, -13, 2, 193, -1, 0, 4294934272, 2, 25, 2, 187, -1, 2, 215, 0, 2158720, -3, 2, 186, 0, 1, -4, 2, 55, 0, 3808625411, 0, 3489628288, 0, 4096, 0, 1207959680, 0, 3221274624, 2, 0, -3, 2, 188, 0, 120, 0, 7340032, -2, 2, 189, 2, 4, 2, 25, 2, 176, 3, 0, 4, 2, 186, -1, 2, 190, 2, 167, -1, 0, 8176, 2, 170, 2, 188, 0, 1073741824, -1, 0, 4290773232, 2, 0, -4, 2, 176, 2, 197, 0, 15728640, 2, 167, -1, 2, 174, -1, 0, 134250480, 0, 4720640, 0, 3825467396, -1, 2, 180, -9, 2, 94, 2, 181, 0, 4294967040, 2, 137, 0, 4160880640, 3, 0, 2, 0, 704, 0, 1849688064, 2, 191, -1, 2, 55, 0, 4294901887, 2, 0, 0, 130547712, 0, 1879048192, 2, 212, 3, 0, 2, -1, 2, 192, 2, 193, -1, 0, 17829776, 0, 2025848832, 0, 4261477888, -2, 2, 0, -1, 0, 4286580608, -1, 0, 29360128, 2, 200, 0, 16252928, 0, 3791388672, 2, 130, 3, 0, 2, -2, 2, 206, 2, 0, -1, 2, 107, -1, 0, 66584576, -1, 2, 199, -1, 0, 448, 0, 4294918080, 3, 0, 6, 2, 55, -1, 0, 4294755328, 0, 4294967267, 2, 7, -1, 2, 174, 2, 187, 2, 25, 2, 98, 2, 25, 2, 194, 2, 94, -2, 0, 245760, 2, 195, -1, 2, 163, 2, 202, 0, 4227923456, -1, 2, 196, 2, 174, 2, 94, -3, 0, 4292870145, 0, 262144, -1, 2, 95, 2, 0, 0, 1073758848, 2, 197, -1, 0, 4227921920, 2, 198, 0, 68289024, 0, 528402016, 0, 4292927536, 0, 46080, 2, 191, 0, 4265609306, 0, 4294967289, -2, 0, 268435456, 2, 95, -2, 2, 199, 3, 0, 5, -1, 2, 200, 2, 176, 2, 0, -2, 0, 4227923936, 2, 67, -1, 2, 187, 2, 197, 2, 99, 2, 168, 2, 178, 2, 204, 3, 0, 5, -1, 2, 167, 3, 0, 3, -2, 0, 2146959360, 0, 9440640, 0, 104857600, 0, 4227923840, 3, 0, 2, 0, 768, 2, 201, 2, 28, -2, 2, 174, -2, 2, 202, -1, 2, 169, 2, 98, 3, 0, 5, -1, 0, 4227923964, 0, 512, 0, 8388608, 2, 203, 2, 183, 2, 193, 0, 4286578944, 3, 0, 2, 0, 1152, 0, 1266679808, 2, 199, 0, 576, 0, 4261707776, 2, 98, 3, 0, 9, 2, 169, 0, 131072, 0, 939524096, 2, 188, 3, 0, 2, 2, 16, -1, 0, 2147221504, -28, 2, 187, 3, 0, 3, -3, 0, 4292902912, -6, 2, 99, 3, 0, 81, 2, 25, -2, 2, 107, -33, 2, 18, 2, 181, -124, 2, 188, -18, 2, 204, 3, 0, 213, -1, 2, 187, 3, 0, 54, -17, 2, 169, 2, 55, 2, 205, -1, 2, 55, 2, 197, 0, 4290822144, -2, 0, 67174336, 0, 520093700, 2, 18, 3, 0, 13, -1, 2, 187, 3, 0, 6, -2, 2, 188, 3, 0, 3, -2, 0, 30720, -1, 0, 32512, 3, 0, 2, 0, 4294770656, -191, 2, 185, -38, 2, 181, 2, 8, 2, 206, 3, 0, 278, 0, 2417033215, -9, 0, 4294705144, 0, 4292411391, 0, 65295, -11, 2, 167, 3, 0, 72, -3, 0, 3758159872, 0, 201391616, 3, 0, 123, -7, 2, 187, -13, 2, 180, 3, 0, 2, -1, 2, 173, 2, 207, -3, 2, 99, 2, 0, -7, 2, 181, -1, 0, 384, -1, 0, 133693440, -3, 2, 208, -2, 2, 110, 3, 0, 3, 3, 180, 2, -2, 2, 94, 2, 169, 3, 0, 4, -2, 2, 196, -1, 2, 163, 0, 335552923, 2, 209, -1, 0, 538974272, 0, 2214592512, 0, 132000, -10, 0, 192, -8, 2, 210, -21, 0, 134213632, 2, 162, 3, 0, 34, 2, 55, 0, 4294965279, 3, 0, 6, 0, 100663424, 0, 63524, -1, 2, 214, 2, 152, 3, 0, 3, -1, 0, 3221282816, 0, 4294917120, 3, 0, 9, 2, 25, 2, 211, -1, 2, 212, 3, 0, 14, 2, 25, 2, 187, 3, 0, 6, 2, 25, 2, 213, 3, 0, 15, 0, 2147520640, -6, 0, 4286578784, 2, 0, -2, 0, 1006694400, 3, 0, 24, 2, 36, -1, 0, 4292870144, 3, 0, 2, 0, 1, 2, 176, 3, 0, 6, 2, 209, 0, 4110942569, 0, 1432950139, 0, 2701658217, 0, 4026532864, 0, 4026532881, 2, 0, 2, 47, 3, 0, 8, -1, 2, 178, -2, 2, 180, 0, 98304, 0, 65537, 2, 181, -5, 2, 214, 2, 0, 2, 37, 2, 202, 2, 167, 0, 4294770176, 2, 110, 3, 0, 4, -30, 2, 192, 0, 3758153728, -3, 0, 125829120, -2, 2, 187, 0, 4294897664, 2, 178, -1, 2, 199, -1, 2, 174, 0, 4026580992, 2, 95, 2, 0, -10, 2, 180, 0, 3758145536, 0, 31744, -1, 0, 1610628992, 0, 4261477376, -4, 2, 215, -2, 2, 187, 3, 0, 32, -1335, 2, 0, -129, 2, 187, -6, 2, 176, -180, 0, 65532, -233, 2, 177, -18, 2, 176, 3, 0, 77, -16, 2, 176, 3, 0, 47, -154, 2, 170, -130, 2, 18, 3, 0, 22250, -7, 2, 18, 3, 0, 6128], [4294967295, 4294967291, 4092460543, 4294828031, 4294967294, 134217726, 4294903807, 268435455, 2147483647, 1048575, 1073741823, 3892314111, 134217727, 1061158911, 536805376, 4294910143, 4294901759, 32767, 4294901760, 262143, 536870911, 8388607, 4160749567, 4294902783, 4294918143, 65535, 67043328, 2281701374, 4294967264, 2097151, 4194303, 255, 67108863, 4294967039, 511, 524287, 131071, 63, 127, 3238002687, 4294549487, 4290772991, 33554431, 4294901888, 4286578687, 67043329, 4294705152, 4294770687, 67043583, 1023, 15, 2047999, 67043343, 67051519, 16777215, 2147483648, 4294902000, 28, 4292870143, 4294966783, 16383, 67047423, 4294967279, 262083, 20511, 41943039, 493567, 4294959104, 603979775, 65536, 602799615, 805044223, 4294965206, 8191, 1031749119, 4294917631, 2134769663, 4286578493, 4282253311, 4294942719, 33540095, 4294905855, 2868854591, 1608515583, 265232348, 534519807, 2147614720, 1060109444, 4093640016, 17376, 2139062143, 224, 4169138175, 4294909951, 4286578688, 4294967292, 4294965759, 535511039, 4294966272, 4294967280, 32768, 8289918, 4294934399, 4294901775, 4294965375, 1602223615, 4294967259, 4294443008, 268369920, 4292804608, 4294967232, 486341884, 4294963199, 3087007615, 1073692671, 4128527, 4279238655, 4294902015, 4160684047, 4290246655, 469499899, 4294967231, 134086655, 4294966591, 2445279231, 3670015, 31, 4294967288, 4294705151, 3221208447, 4294902271, 4294549472, 4294921215, 4095, 4285526655, 4294966527, 4294966143, 64, 4294966719, 3774873592, 1877934080, 262151, 2555904, 536807423, 67043839, 3758096383, 3959414372, 3755993023, 2080374783, 4294835295, 4294967103, 4160749565, 4294934527, 4087, 2016, 2147446655, 184024726, 2862017156, 1593309078, 268434431, 268434414, 4294901763, 4294901761, 536870912, 2952790016, 202506752, 139264, 4026531840, 402653184, 4261412864, 63488, 1610612736, 4227922944, 49152, 65280, 3233808384, 3221225472, 65534, 61440, 57152, 4293918720, 4290772992, 25165824, 57344, 4227915776, 4278190080, 3758096384, 4227858432, 4160749568, 3758129152, 4294836224, 4194304, 251658240, 196608, 4294963200, 2143289344, 2097152, 64512, 417808, 4227923712, 12582912, 50331648, 65528, 65472, 4294967168, 15360, 4294966784, 65408, 4294965248, 16, 12288, 4294934528, 2080374784, 2013265920, 4294950912, 524288]);\nconst isIDContinue = (code) => (unicodeLookup[(code >>> 5) + 0] >>> code & 31 & 1) !== 0;\nconst isIDStart = (code) => (unicodeLookup[(code >>> 5) + 34816] >>> code & 31 & 1) !== 0;\n\nfunction advanceChar(parser) {\n    parser.column++;\n    return (parser.currentChar = parser.source.charCodeAt(++parser.index));\n}\nfunction consumePossibleSurrogatePair(parser) {\n    const hi = parser.currentChar;\n    if ((hi & 0xfc00) !== 55296)\n        return 0;\n    const lo = parser.source.charCodeAt(parser.index + 1);\n    if ((lo & 0xfc00) !== 56320)\n        return 0;\n    return 65536 + ((hi & 0x3ff) << 10) + (lo & 0x3ff);\n}\nfunction consumeLineFeed(parser, state) {\n    parser.currentChar = parser.source.charCodeAt(++parser.index);\n    parser.flags |= 1;\n    if ((state & 4) === 0) {\n        parser.column = 0;\n        parser.line++;\n    }\n}\nfunction scanNewLine(parser) {\n    parser.flags |= 1;\n    parser.currentChar = parser.source.charCodeAt(++parser.index);\n    parser.column = 0;\n    parser.line++;\n}\nfunction isExoticECMAScriptWhitespace(ch) {\n    return (ch === 160 ||\n        ch === 65279 ||\n        ch === 133 ||\n        ch === 5760 ||\n        (ch >= 8192 && ch <= 8203) ||\n        ch === 8239 ||\n        ch === 8287 ||\n        ch === 12288 ||\n        ch === 8201 ||\n        ch === 65519);\n}\nfunction toHex(code) {\n    return code < 65 ? code - 48 : (code - 65 + 10) & 0xf;\n}\nfunction convertTokenType(t) {\n    switch (t) {\n        case 134283266:\n            return 'NumericLiteral';\n        case 134283267:\n            return 'StringLiteral';\n        case 86021:\n        case 86022:\n            return 'BooleanLiteral';\n        case 86023:\n            return 'NullLiteral';\n        case 65540:\n            return 'RegularExpression';\n        case 67174408:\n        case 67174409:\n        case 131:\n            return 'TemplateLiteral';\n        default:\n            if ((t & 143360) === 143360)\n                return 'Identifier';\n            if ((t & 4096) === 4096)\n                return 'Keyword';\n            return 'Punctuator';\n    }\n}\n\nconst CharTypes = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    8 | 1024,\n    0,\n    0,\n    8 | 2048,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    8192,\n    0,\n    1 | 2,\n    0,\n    0,\n    8192,\n    0,\n    0,\n    0,\n    256,\n    0,\n    256 | 32768,\n    0,\n    0,\n    2 | 16 | 128 | 32 | 64,\n    2 | 16 | 128 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 32 | 64,\n    2 | 16 | 512 | 64,\n    2 | 16 | 512 | 64,\n    0,\n    0,\n    16384,\n    0,\n    0,\n    0,\n    0,\n    1 | 2 | 64,\n    1 | 2 | 64,\n    1 | 2 | 64,\n    1 | 2 | 64,\n    1 | 2 | 64,\n    1 | 2 | 64,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    1 | 2,\n    0,\n    1,\n    0,\n    0,\n    1 | 2 | 4096,\n    0,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4 | 64,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    1 | 2 | 4,\n    16384,\n    0,\n    0,\n    0,\n    0\n];\nconst isIdStart = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0\n];\nconst isIdPart = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    1,\n    0,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    1,\n    0,\n    0,\n    0,\n    0,\n    0\n];\nfunction isIdentifierStart(code) {\n    return code <= 0x7F\n        ? isIdStart[code] > 0\n        : isIDStart(code);\n}\nfunction isIdentifierPart(code) {\n    return code <= 0x7F\n        ? isIdPart[code] > 0\n        : isIDContinue(code) || (code === 8204 || code === 8205);\n}\n\nconst CommentTypes = [\n    'SingleLine',\n    'MultiLine',\n    'HTMLOpen',\n    'HTMLClose',\n    'HashbangComment',\n];\nfunction skipHashBang(parser) {\n    const { source } = parser;\n    if (parser.currentChar === 35 && source.charCodeAt(parser.index + 1) === 33) {\n        advanceChar(parser);\n        advanceChar(parser);\n        skipSingleLineComment(parser, source, 0, 4, parser.tokenIndex, parser.tokenLine, parser.tokenColumn);\n    }\n}\nfunction skipSingleHTMLComment(parser, source, state, context, type, start, line, column) {\n    if (context & 512)\n        report(parser, 0);\n    return skipSingleLineComment(parser, source, state, type, start, line, column);\n}\nfunction skipSingleLineComment(parser, source, state, type, start, line, column) {\n    const { index } = parser;\n    parser.tokenIndex = parser.index;\n    parser.tokenLine = parser.line;\n    parser.tokenColumn = parser.column;\n    while (parser.index < parser.end) {\n        if (CharTypes[parser.currentChar] & 8) {\n            const isCR = parser.currentChar === 13;\n            scanNewLine(parser);\n            if (isCR && parser.index < parser.end && parser.currentChar === 10)\n                parser.currentChar = source.charCodeAt(++parser.index);\n            break;\n        }\n        else if ((parser.currentChar ^ 8232) <= 1) {\n            scanNewLine(parser);\n            break;\n        }\n        advanceChar(parser);\n        parser.tokenIndex = parser.index;\n        parser.tokenLine = parser.line;\n        parser.tokenColumn = parser.column;\n    }\n    if (parser.options.onComment) {\n        const loc = {\n            start: {\n                line,\n                column,\n            },\n            end: {\n                line: parser.tokenLine,\n                column: parser.tokenColumn,\n            },\n        };\n        parser.options.onComment(CommentTypes[type & 0xff], source.slice(index, parser.tokenIndex), start, parser.tokenIndex, loc);\n    }\n    return state | 1;\n}\nfunction skipMultiLineComment(parser, source, state) {\n    const { index } = parser;\n    while (parser.index < parser.end) {\n        if (parser.currentChar < 0x2b) {\n            let skippedOneAsterisk = false;\n            while (parser.currentChar === 42) {\n                if (!skippedOneAsterisk) {\n                    state &= -5;\n                    skippedOneAsterisk = true;\n                }\n                if (advanceChar(parser) === 47) {\n                    advanceChar(parser);\n                    if (parser.options.onComment) {\n                        const loc = {\n                            start: {\n                                line: parser.tokenLine,\n                                column: parser.tokenColumn,\n                            },\n                            end: {\n                                line: parser.line,\n                                column: parser.column,\n                            },\n                        };\n                        parser.options.onComment(CommentTypes[1 & 0xff], source.slice(index, parser.index - 2), index - 2, parser.index, loc);\n                    }\n                    parser.tokenIndex = parser.index;\n                    parser.tokenLine = parser.line;\n                    parser.tokenColumn = parser.column;\n                    return state;\n                }\n            }\n            if (skippedOneAsterisk) {\n                continue;\n            }\n            if (CharTypes[parser.currentChar] & 8) {\n                if (parser.currentChar === 13) {\n                    state |= 1 | 4;\n                    scanNewLine(parser);\n                }\n                else {\n                    consumeLineFeed(parser, state);\n                    state = (state & -5) | 1;\n                }\n            }\n            else {\n                advanceChar(parser);\n            }\n        }\n        else if ((parser.currentChar ^ 8232) <= 1) {\n            state = (state & -5) | 1;\n            scanNewLine(parser);\n        }\n        else {\n            state &= -5;\n            advanceChar(parser);\n        }\n    }\n    report(parser, 18);\n}\n\nvar RegexState;\n(function (RegexState) {\n    RegexState[RegexState[\"Empty\"] = 0] = \"Empty\";\n    RegexState[RegexState[\"Escape\"] = 1] = \"Escape\";\n    RegexState[RegexState[\"Class\"] = 2] = \"Class\";\n})(RegexState || (RegexState = {}));\nvar RegexFlags;\n(function (RegexFlags) {\n    RegexFlags[RegexFlags[\"Empty\"] = 0] = \"Empty\";\n    RegexFlags[RegexFlags[\"IgnoreCase\"] = 1] = \"IgnoreCase\";\n    RegexFlags[RegexFlags[\"Global\"] = 2] = \"Global\";\n    RegexFlags[RegexFlags[\"Multiline\"] = 4] = \"Multiline\";\n    RegexFlags[RegexFlags[\"Unicode\"] = 16] = \"Unicode\";\n    RegexFlags[RegexFlags[\"Sticky\"] = 8] = \"Sticky\";\n    RegexFlags[RegexFlags[\"DotAll\"] = 32] = \"DotAll\";\n    RegexFlags[RegexFlags[\"Indices\"] = 64] = \"Indices\";\n    RegexFlags[RegexFlags[\"UnicodeSets\"] = 128] = \"UnicodeSets\";\n})(RegexFlags || (RegexFlags = {}));\nfunction scanRegularExpression(parser, context) {\n    const bodyStart = parser.index;\n    let preparseState = RegexState.Empty;\n    loop: while (true) {\n        const ch = parser.currentChar;\n        advanceChar(parser);\n        if (preparseState & RegexState.Escape) {\n            preparseState &= ~RegexState.Escape;\n        }\n        else {\n            switch (ch) {\n                case 47:\n                    if (!preparseState)\n                        break loop;\n                    else\n                        break;\n                case 92:\n                    preparseState |= RegexState.Escape;\n                    break;\n                case 91:\n                    preparseState |= RegexState.Class;\n                    break;\n                case 93:\n                    preparseState &= RegexState.Escape;\n                    break;\n            }\n        }\n        if (ch === 13 ||\n            ch === 10 ||\n            ch === 8232 ||\n            ch === 8233) {\n            report(parser, 34);\n        }\n        if (parser.index >= parser.source.length) {\n            return report(parser, 34);\n        }\n    }\n    const bodyEnd = parser.index - 1;\n    let mask = RegexFlags.Empty;\n    let char = parser.currentChar;\n    const { index: flagStart } = parser;\n    while (isIdentifierPart(char)) {\n        switch (char) {\n            case 103:\n                if (mask & RegexFlags.Global)\n                    report(parser, 36, 'g');\n                mask |= RegexFlags.Global;\n                break;\n            case 105:\n                if (mask & RegexFlags.IgnoreCase)\n                    report(parser, 36, 'i');\n                mask |= RegexFlags.IgnoreCase;\n                break;\n            case 109:\n                if (mask & RegexFlags.Multiline)\n                    report(parser, 36, 'm');\n                mask |= RegexFlags.Multiline;\n                break;\n            case 117:\n                if (mask & RegexFlags.Unicode)\n                    report(parser, 36, 'u');\n                if (mask & RegexFlags.UnicodeSets)\n                    report(parser, 36, 'vu');\n                mask |= RegexFlags.Unicode;\n                break;\n            case 118:\n                if (mask & RegexFlags.Unicode)\n                    report(parser, 36, 'uv');\n                if (mask & RegexFlags.UnicodeSets)\n                    report(parser, 36, 'v');\n                mask |= RegexFlags.UnicodeSets;\n                break;\n            case 121:\n                if (mask & RegexFlags.Sticky)\n                    report(parser, 36, 'y');\n                mask |= RegexFlags.Sticky;\n                break;\n            case 115:\n                if (mask & RegexFlags.DotAll)\n                    report(parser, 36, 's');\n                mask |= RegexFlags.DotAll;\n                break;\n            case 100:\n                if (mask & RegexFlags.Indices)\n                    report(parser, 36, 'd');\n                mask |= RegexFlags.Indices;\n                break;\n            default:\n                report(parser, 35);\n        }\n        char = advanceChar(parser);\n    }\n    const flags = parser.source.slice(flagStart, parser.index);\n    const pattern = parser.source.slice(bodyStart, bodyEnd);\n    parser.tokenRegExp = { pattern, flags };\n    if (context & 128)\n        parser.tokenRaw = parser.source.slice(parser.tokenIndex, parser.index);\n    parser.tokenValue = validate(parser, pattern, flags);\n    return 65540;\n}\nfunction validate(parser, pattern, flags) {\n    try {\n        return new RegExp(pattern, flags);\n    }\n    catch {\n        try {\n            new RegExp(pattern, flags);\n            return null;\n        }\n        catch {\n            report(parser, 34);\n        }\n    }\n}\n\nfunction scanString(parser, context, quote) {\n    const { index: start } = parser;\n    let ret = '';\n    let char = advanceChar(parser);\n    let marker = parser.index;\n    while ((CharTypes[char] & 8) === 0) {\n        if (char === quote) {\n            ret += parser.source.slice(marker, parser.index);\n            advanceChar(parser);\n            if (context & 128)\n                parser.tokenRaw = parser.source.slice(start, parser.index);\n            parser.tokenValue = ret;\n            return 134283267;\n        }\n        if ((char & 8) === 8 && char === 92) {\n            ret += parser.source.slice(marker, parser.index);\n            char = advanceChar(parser);\n            if (char < 0x7f || char === 8232 || char === 8233) {\n                const code = parseEscape(parser, context, char);\n                if (code >= 0)\n                    ret += String.fromCodePoint(code);\n                else\n                    handleStringError(parser, code, 0);\n            }\n            else {\n                ret += String.fromCodePoint(char);\n            }\n            marker = parser.index + 1;\n        }\n        else if (char === 8232 || char === 8233) {\n            parser.column = -1;\n            parser.line++;\n        }\n        if (parser.index >= parser.end)\n            report(parser, 16);\n        char = advanceChar(parser);\n    }\n    report(parser, 16);\n}\nfunction parseEscape(parser, context, first, isTemplate = 0) {\n    switch (first) {\n        case 98:\n            return 8;\n        case 102:\n            return 12;\n        case 114:\n            return 13;\n        case 110:\n            return 10;\n        case 116:\n            return 9;\n        case 118:\n            return 11;\n        case 13: {\n            if (parser.index < parser.end) {\n                const nextChar = parser.source.charCodeAt(parser.index + 1);\n                if (nextChar === 10) {\n                    parser.index = parser.index + 1;\n                    parser.currentChar = nextChar;\n                }\n            }\n        }\n        case 10:\n        case 8232:\n        case 8233:\n            parser.column = -1;\n            parser.line++;\n            return -1;\n        case 48:\n        case 49:\n        case 50:\n        case 51: {\n            let code = first - 48;\n            let index = parser.index + 1;\n            let column = parser.column + 1;\n            if (index < parser.end) {\n                const next = parser.source.charCodeAt(index);\n                if ((CharTypes[next] & 32) === 0) {\n                    if (code !== 0 || CharTypes[next] & 512) {\n                        if (context & 256 || isTemplate)\n                            return -2;\n                        parser.flags |= 64;\n                    }\n                }\n                else if (context & 256 || isTemplate) {\n                    return -2;\n                }\n                else {\n                    parser.currentChar = next;\n                    code = (code << 3) | (next - 48);\n                    index++;\n                    column++;\n                    if (index < parser.end) {\n                        const next = parser.source.charCodeAt(index);\n                        if (CharTypes[next] & 32) {\n                            parser.currentChar = next;\n                            code = (code << 3) | (next - 48);\n                            index++;\n                            column++;\n                        }\n                    }\n                    parser.flags |= 64;\n                }\n                parser.index = index - 1;\n                parser.column = column - 1;\n            }\n            return code;\n        }\n        case 52:\n        case 53:\n        case 54:\n        case 55: {\n            if (isTemplate || context & 256)\n                return -2;\n            let code = first - 48;\n            const index = parser.index + 1;\n            const column = parser.column + 1;\n            if (index < parser.end) {\n                const next = parser.source.charCodeAt(index);\n                if (CharTypes[next] & 32) {\n                    code = (code << 3) | (next - 48);\n                    parser.currentChar = next;\n                    parser.index = index;\n                    parser.column = column;\n                }\n            }\n            parser.flags |= 64;\n            return code;\n        }\n        case 120: {\n            const ch1 = advanceChar(parser);\n            if ((CharTypes[ch1] & 64) === 0)\n                return -4;\n            const hi = toHex(ch1);\n            const ch2 = advanceChar(parser);\n            if ((CharTypes[ch2] & 64) === 0)\n                return -4;\n            const lo = toHex(ch2);\n            return (hi << 4) | lo;\n        }\n        case 117: {\n            const ch = advanceChar(parser);\n            if (parser.currentChar === 123) {\n                let code = 0;\n                while ((CharTypes[advanceChar(parser)] & 64) !== 0) {\n                    code = (code << 4) | toHex(parser.currentChar);\n                    if (code > 1114111)\n                        return -5;\n                }\n                if (parser.currentChar < 1 || parser.currentChar !== 125) {\n                    return -4;\n                }\n                return code;\n            }\n            else {\n                if ((CharTypes[ch] & 64) === 0)\n                    return -4;\n                const ch2 = parser.source.charCodeAt(parser.index + 1);\n                if ((CharTypes[ch2] & 64) === 0)\n                    return -4;\n                const ch3 = parser.source.charCodeAt(parser.index + 2);\n                if ((CharTypes[ch3] & 64) === 0)\n                    return -4;\n                const ch4 = parser.source.charCodeAt(parser.index + 3);\n                if ((CharTypes[ch4] & 64) === 0)\n                    return -4;\n                parser.index += 3;\n                parser.column += 3;\n                parser.currentChar = parser.source.charCodeAt(parser.index);\n                return (toHex(ch) << 12) | (toHex(ch2) << 8) | (toHex(ch3) << 4) | toHex(ch4);\n            }\n        }\n        case 56:\n        case 57:\n            if (isTemplate || (context & 64) === 0 || context & 256)\n                return -3;\n            parser.flags |= 4096;\n        default:\n            return first;\n    }\n}\nfunction handleStringError(state, code, isTemplate) {\n    switch (code) {\n        case -1:\n            return;\n        case -2:\n            report(state, isTemplate ? 2 : 1);\n        case -3:\n            report(state, isTemplate ? 3 : 14);\n        case -4:\n            report(state, 7);\n        case -5:\n            report(state, 104);\n    }\n}\n\nfunction scanTemplate(parser, context) {\n    const { index: start } = parser;\n    let token = 67174409;\n    let ret = '';\n    let char = advanceChar(parser);\n    while (char !== 96) {\n        if (char === 36 && parser.source.charCodeAt(parser.index + 1) === 123) {\n            advanceChar(parser);\n            token = 67174408;\n            break;\n        }\n        else if (char === 92) {\n            char = advanceChar(parser);\n            if (char > 0x7e) {\n                ret += String.fromCodePoint(char);\n            }\n            else {\n                const { index, line, column } = parser;\n                const code = parseEscape(parser, context | 256, char, 1);\n                if (code >= 0) {\n                    ret += String.fromCodePoint(code);\n                }\n                else if (code !== -1 && context & 16384) {\n                    parser.index = index;\n                    parser.line = line;\n                    parser.column = column;\n                    ret = null;\n                    char = scanBadTemplate(parser, char);\n                    if (char < 0)\n                        token = 67174408;\n                    break;\n                }\n                else {\n                    handleStringError(parser, code, 1);\n                }\n            }\n        }\n        else if (parser.index < parser.end) {\n            if (char === 13 && parser.source.charCodeAt(parser.index) === 10) {\n                ret += String.fromCodePoint(char);\n                parser.currentChar = parser.source.charCodeAt(++parser.index);\n            }\n            if (((char & 83) < 3 && char === 10) || (char ^ 8232) <= 1) {\n                parser.column = -1;\n                parser.line++;\n            }\n            ret += String.fromCodePoint(char);\n        }\n        if (parser.index >= parser.end)\n            report(parser, 17);\n        char = advanceChar(parser);\n    }\n    advanceChar(parser);\n    parser.tokenValue = ret;\n    parser.tokenRaw = parser.source.slice(start + 1, parser.index - (token === 67174409 ? 1 : 2));\n    return token;\n}\nfunction scanBadTemplate(parser, ch) {\n    while (ch !== 96) {\n        switch (ch) {\n            case 36: {\n                const index = parser.index + 1;\n                if (index < parser.end && parser.source.charCodeAt(index) === 123) {\n                    parser.index = index;\n                    parser.column++;\n                    return -ch;\n                }\n                break;\n            }\n            case 10:\n            case 8232:\n            case 8233:\n                parser.column = -1;\n                parser.line++;\n        }\n        if (parser.index >= parser.end)\n            report(parser, 17);\n        ch = advanceChar(parser);\n    }\n    return ch;\n}\nfunction scanTemplateTail(parser, context) {\n    if (parser.index >= parser.end)\n        report(parser, 0);\n    parser.index--;\n    parser.column--;\n    return scanTemplate(parser, context);\n}\n\nfunction scanNumber(parser, context, kind) {\n    let char = parser.currentChar;\n    let value = 0;\n    let digit = 9;\n    let atStart = kind & 64 ? 0 : 1;\n    let digits = 0;\n    let allowSeparator = 0;\n    if (kind & 64) {\n        value = '.' + scanDecimalDigitsOrSeparator(parser, char);\n        char = parser.currentChar;\n        if (char === 110)\n            report(parser, 12);\n    }\n    else {\n        if (char === 48) {\n            char = advanceChar(parser);\n            if ((char | 32) === 120) {\n                kind = 8 | 128;\n                char = advanceChar(parser);\n                while (CharTypes[char] & (64 | 4096)) {\n                    if (char === 95) {\n                        if (!allowSeparator)\n                            report(parser, 152);\n                        allowSeparator = 0;\n                        char = advanceChar(parser);\n                        continue;\n                    }\n                    allowSeparator = 1;\n                    value = value * 0x10 + toHex(char);\n                    digits++;\n                    char = advanceChar(parser);\n                }\n                if (digits === 0 || !allowSeparator) {\n                    report(parser, digits === 0 ? 21 : 153);\n                }\n            }\n            else if ((char | 32) === 111) {\n                kind = 4 | 128;\n                char = advanceChar(parser);\n                while (CharTypes[char] & (32 | 4096)) {\n                    if (char === 95) {\n                        if (!allowSeparator) {\n                            report(parser, 152);\n                        }\n                        allowSeparator = 0;\n                        char = advanceChar(parser);\n                        continue;\n                    }\n                    allowSeparator = 1;\n                    value = value * 8 + (char - 48);\n                    digits++;\n                    char = advanceChar(parser);\n                }\n                if (digits === 0 || !allowSeparator) {\n                    report(parser, digits === 0 ? 0 : 153);\n                }\n            }\n            else if ((char | 32) === 98) {\n                kind = 2 | 128;\n                char = advanceChar(parser);\n                while (CharTypes[char] & (128 | 4096)) {\n                    if (char === 95) {\n                        if (!allowSeparator) {\n                            report(parser, 152);\n                        }\n                        allowSeparator = 0;\n                        char = advanceChar(parser);\n                        continue;\n                    }\n                    allowSeparator = 1;\n                    value = value * 2 + (char - 48);\n                    digits++;\n                    char = advanceChar(parser);\n                }\n                if (digits === 0 || !allowSeparator) {\n                    report(parser, digits === 0 ? 0 : 153);\n                }\n            }\n            else if (CharTypes[char] & 32) {\n                if (context & 256)\n                    report(parser, 1);\n                kind = 1;\n                while (CharTypes[char] & 16) {\n                    if (CharTypes[char] & 512) {\n                        kind = 32;\n                        atStart = 0;\n                        break;\n                    }\n                    value = value * 8 + (char - 48);\n                    char = advanceChar(parser);\n                }\n            }\n            else if (CharTypes[char] & 512) {\n                if (context & 256)\n                    report(parser, 1);\n                parser.flags |= 64;\n                kind = 32;\n            }\n            else if (char === 95) {\n                report(parser, 0);\n            }\n        }\n        if (kind & 48) {\n            if (atStart) {\n                while (digit >= 0 && CharTypes[char] & (16 | 4096)) {\n                    if (char === 95) {\n                        char = advanceChar(parser);\n                        if (char === 95 || kind & 32) {\n                            reportScannerError(parser.currentLocation, { index: parser.index + 1, line: parser.line, column: parser.column }, 152);\n                        }\n                        allowSeparator = 1;\n                        continue;\n                    }\n                    allowSeparator = 0;\n                    value = 10 * value + (char - 48);\n                    char = advanceChar(parser);\n                    --digit;\n                }\n                if (allowSeparator) {\n                    reportScannerError(parser.currentLocation, { index: parser.index + 1, line: parser.line, column: parser.column }, 153);\n                }\n                if (digit >= 0 && !isIdentifierStart(char) && char !== 46) {\n                    parser.tokenValue = value;\n                    if (context & 128)\n                        parser.tokenRaw = parser.source.slice(parser.tokenIndex, parser.index);\n                    return 134283266;\n                }\n            }\n            value += scanDecimalDigitsOrSeparator(parser, char);\n            char = parser.currentChar;\n            if (char === 46) {\n                if (advanceChar(parser) === 95)\n                    report(parser, 0);\n                kind = 64;\n                value += '.' + scanDecimalDigitsOrSeparator(parser, parser.currentChar);\n                char = parser.currentChar;\n            }\n        }\n    }\n    const end = parser.index;\n    let isBigInt = 0;\n    if (char === 110 && kind & 128) {\n        isBigInt = 1;\n        char = advanceChar(parser);\n    }\n    else {\n        if ((char | 32) === 101) {\n            char = advanceChar(parser);\n            if (CharTypes[char] & 256)\n                char = advanceChar(parser);\n            const { index } = parser;\n            if ((CharTypes[char] & 16) === 0)\n                report(parser, 11);\n            value += parser.source.substring(end, index) + scanDecimalDigitsOrSeparator(parser, char);\n            char = parser.currentChar;\n        }\n    }\n    if ((parser.index < parser.end && CharTypes[char] & 16) || isIdentifierStart(char)) {\n        report(parser, 13);\n    }\n    if (isBigInt) {\n        parser.tokenRaw = parser.source.slice(parser.tokenIndex, parser.index);\n        parser.tokenValue = BigInt(parser.tokenRaw.slice(0, -1).replaceAll('_', ''));\n        return 134283388;\n    }\n    parser.tokenValue =\n        kind & (1 | 2 | 8 | 4)\n            ? value\n            : kind & 32\n                ? parseFloat(parser.source.substring(parser.tokenIndex, parser.index))\n                : +value;\n    if (context & 128)\n        parser.tokenRaw = parser.source.slice(parser.tokenIndex, parser.index);\n    return 134283266;\n}\nfunction scanDecimalDigitsOrSeparator(parser, char) {\n    let allowSeparator = 0;\n    let start = parser.index;\n    let ret = '';\n    while (CharTypes[char] & (16 | 4096)) {\n        if (char === 95) {\n            const { index } = parser;\n            char = advanceChar(parser);\n            if (char === 95) {\n                reportScannerError(parser.currentLocation, { index: parser.index + 1, line: parser.line, column: parser.column }, 152);\n            }\n            allowSeparator = 1;\n            ret += parser.source.substring(start, index);\n            start = parser.index;\n            continue;\n        }\n        allowSeparator = 0;\n        char = advanceChar(parser);\n    }\n    if (allowSeparator) {\n        reportScannerError(parser.currentLocation, { index: parser.index + 1, line: parser.line, column: parser.column }, 153);\n    }\n    return ret + parser.source.substring(start, parser.index);\n}\n\nconst KeywordDescTable = [\n    'end of source',\n    'identifier', 'number', 'string', 'regular expression',\n    'false', 'true', 'null',\n    'template continuation', 'template tail',\n    '=>', '(', '{', '.', '...', '}', ')', ';', ',', '[', ']', ':', '?', '\\'', '\"',\n    '++', '--',\n    '=', '<<=', '>>=', '>>>=', '**=', '+=', '-=', '*=', '/=', '%=', '^=', '|=',\n    '&=', '||=', '&&=', '??=',\n    'typeof', 'delete', 'void', '!', '~', '+', '-', 'in', 'instanceof', '*', '%', '/', '**', '&&',\n    '||', '===', '!==', '==', '!=', '<=', '>=', '<', '>', '<<', '>>', '>>>', '&', '|', '^',\n    'var', 'let', 'const',\n    'break', 'case', 'catch', 'class', 'continue', 'debugger', 'default', 'do', 'else', 'export',\n    'extends', 'finally', 'for', 'function', 'if', 'import', 'new', 'return', 'super', 'switch',\n    'this', 'throw', 'try', 'while', 'with',\n    'implements', 'interface', 'package', 'private', 'protected', 'public', 'static', 'yield',\n    'as', 'async', 'await', 'constructor', 'get', 'set', 'accessor', 'from', 'of',\n    'enum', 'eval', 'arguments', 'escaped keyword', 'escaped future reserved keyword', 'reserved if strict', '#',\n    'BigIntLiteral', '??', '?.', 'WhiteSpace', 'Illegal', 'LineTerminator', 'PrivateField',\n    'Template', '@', 'target', 'meta', 'LineFeed', 'Escaped', 'JSXText'\n];\nconst descKeywordTable = Object.create(null, {\n    this: { value: 86111 },\n    function: { value: 86104 },\n    if: { value: 20569 },\n    return: { value: 20572 },\n    var: { value: 86088 },\n    else: { value: 20563 },\n    for: { value: 20567 },\n    new: { value: 86107 },\n    in: { value: 8673330 },\n    typeof: { value: 16863275 },\n    while: { value: 20578 },\n    case: { value: 20556 },\n    break: { value: 20555 },\n    try: { value: 20577 },\n    catch: { value: 20557 },\n    delete: { value: 16863276 },\n    throw: { value: 86112 },\n    switch: { value: 86110 },\n    continue: { value: 20559 },\n    default: { value: 20561 },\n    instanceof: { value: 8411187 },\n    do: { value: 20562 },\n    void: { value: 16863277 },\n    finally: { value: 20566 },\n    async: { value: 209005 },\n    await: { value: 209006 },\n    class: { value: 86094 },\n    const: { value: 86090 },\n    constructor: { value: 12399 },\n    debugger: { value: 20560 },\n    export: { value: 20564 },\n    extends: { value: 20565 },\n    false: { value: 86021 },\n    from: { value: 209011 },\n    get: { value: 209008 },\n    implements: { value: 36964 },\n    import: { value: 86106 },\n    interface: { value: 36965 },\n    let: { value: 241737 },\n    null: { value: 86023 },\n    of: { value: 471156 },\n    package: { value: 36966 },\n    private: { value: 36967 },\n    protected: { value: 36968 },\n    public: { value: 36969 },\n    set: { value: 209009 },\n    static: { value: 36970 },\n    super: { value: 86109 },\n    true: { value: 86022 },\n    with: { value: 20579 },\n    yield: { value: 241771 },\n    enum: { value: 86133 },\n    eval: { value: 537079926 },\n    as: { value: 77932 },\n    arguments: { value: 537079927 },\n    target: { value: 209029 },\n    meta: { value: 209030 },\n    accessor: { value: 12402 },\n});\n\nfunction scanIdentifier(parser, context, isValidAsKeyword) {\n    while (isIdPart[advanceChar(parser)])\n        ;\n    parser.tokenValue = parser.source.slice(parser.tokenIndex, parser.index);\n    return parser.currentChar !== 92 && parser.currentChar <= 0x7e\n        ? descKeywordTable[parser.tokenValue] || 208897\n        : scanIdentifierSlowCase(parser, context, 0, isValidAsKeyword);\n}\nfunction scanUnicodeIdentifier(parser, context) {\n    const cookedChar = scanIdentifierUnicodeEscape(parser);\n    if (!isIdentifierStart(cookedChar))\n        report(parser, 5);\n    parser.tokenValue = String.fromCodePoint(cookedChar);\n    return scanIdentifierSlowCase(parser, context, 1, CharTypes[cookedChar] & 4);\n}\nfunction scanIdentifierSlowCase(parser, context, hasEscape, isValidAsKeyword) {\n    let start = parser.index;\n    while (parser.index < parser.end) {\n        if (parser.currentChar === 92) {\n            parser.tokenValue += parser.source.slice(start, parser.index);\n            hasEscape = 1;\n            const code = scanIdentifierUnicodeEscape(parser);\n            if (!isIdentifierPart(code))\n                report(parser, 5);\n            isValidAsKeyword = isValidAsKeyword && CharTypes[code] & 4;\n            parser.tokenValue += String.fromCodePoint(code);\n            start = parser.index;\n        }\n        else {\n            const merged = consumePossibleSurrogatePair(parser);\n            if (merged > 0) {\n                if (!isIdentifierPart(merged)) {\n                    report(parser, 20, String.fromCodePoint(merged));\n                }\n                parser.currentChar = merged;\n                parser.index++;\n                parser.column++;\n            }\n            else if (!isIdentifierPart(parser.currentChar)) {\n                break;\n            }\n            advanceChar(parser);\n        }\n    }\n    if (parser.index <= parser.end) {\n        parser.tokenValue += parser.source.slice(start, parser.index);\n    }\n    const { length } = parser.tokenValue;\n    if (isValidAsKeyword && length >= 2 && length <= 11) {\n        const token = descKeywordTable[parser.tokenValue];\n        if (token === void 0)\n            return 208897 | (hasEscape ? -2147483648 : 0);\n        if (!hasEscape)\n            return token;\n        if (token === 209006) {\n            if ((context & (512 | 524288)) === 0) {\n                return token | -2147483648;\n            }\n            return -2147483528;\n        }\n        if (context & 256) {\n            if (token === 36970) {\n                return -2147483527;\n            }\n            if ((token & 36864) === 36864) {\n                return -2147483527;\n            }\n            if ((token & 20480) === 20480) {\n                if (context & 67108864 && (context & 2048) === 0) {\n                    return token | -2147483648;\n                }\n                else {\n                    return -2147483528;\n                }\n            }\n            return 209018 | -2147483648;\n        }\n        if (context & 67108864 &&\n            (context & 2048) === 0 &&\n            (token & 20480) === 20480) {\n            return token | -2147483648;\n        }\n        if (token === 241771) {\n            return context & 67108864\n                ? 209018 | -2147483648\n                : context & 262144\n                    ? -2147483528\n                    : token | -2147483648;\n        }\n        if (token === 209005) {\n            return 209018 | -2147483648;\n        }\n        if ((token & 36864) === 36864) {\n            return token | 12288 | -2147483648;\n        }\n        return -2147483528;\n    }\n    return 208897 | (hasEscape ? -2147483648 : 0);\n}\nfunction scanPrivateIdentifier(parser) {\n    let char = advanceChar(parser);\n    if (char === 92)\n        return 130;\n    const merged = consumePossibleSurrogatePair(parser);\n    if (merged)\n        char = merged;\n    if (!isIdentifierStart(char))\n        report(parser, 96);\n    return 130;\n}\nfunction scanIdentifierUnicodeEscape(parser) {\n    if (parser.source.charCodeAt(parser.index + 1) !== 117) {\n        report(parser, 5);\n    }\n    parser.currentChar = parser.source.charCodeAt((parser.index += 2));\n    parser.column += 2;\n    return scanUnicodeEscape(parser);\n}\nfunction scanUnicodeEscape(parser) {\n    let codePoint = 0;\n    const char = parser.currentChar;\n    if (char === 123) {\n        const begin = parser.index - 2;\n        while (CharTypes[advanceChar(parser)] & 64) {\n            codePoint = (codePoint << 4) | toHex(parser.currentChar);\n            if (codePoint > 1114111)\n                reportScannerError({ index: begin, line: parser.line, column: parser.column }, parser.currentLocation, 104);\n        }\n        if (parser.currentChar !== 125) {\n            reportScannerError({ index: begin, line: parser.line, column: parser.column }, parser.currentLocation, 7);\n        }\n        advanceChar(parser);\n        return codePoint;\n    }\n    if ((CharTypes[char] & 64) === 0)\n        report(parser, 7);\n    const char2 = parser.source.charCodeAt(parser.index + 1);\n    if ((CharTypes[char2] & 64) === 0)\n        report(parser, 7);\n    const char3 = parser.source.charCodeAt(parser.index + 2);\n    if ((CharTypes[char3] & 64) === 0)\n        report(parser, 7);\n    const char4 = parser.source.charCodeAt(parser.index + 3);\n    if ((CharTypes[char4] & 64) === 0)\n        report(parser, 7);\n    codePoint = (toHex(char) << 12) | (toHex(char2) << 8) | (toHex(char3) << 4) | toHex(char4);\n    parser.currentChar = parser.source.charCodeAt((parser.index += 4));\n    parser.column += 4;\n    return codePoint;\n}\n\nconst TokenLookup = [\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    127,\n    135,\n    127,\n    127,\n    129,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    128,\n    127,\n    16842798,\n    134283267,\n    130,\n    208897,\n    8391477,\n    8390213,\n    134283267,\n    67174411,\n    16,\n    8391476,\n    25233968,\n    18,\n    25233969,\n    67108877,\n    8457014,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    134283266,\n    21,\n    1074790417,\n    8456256,\n    1077936155,\n    8390721,\n    22,\n    132,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    208897,\n    69271571,\n    136,\n    20,\n    8389959,\n    208897,\n    131,\n    4096,\n    4096,\n    4096,\n    4096,\n    4096,\n    4096,\n    4096,\n    208897,\n    4096,\n    208897,\n    208897,\n    4096,\n    208897,\n    4096,\n    208897,\n    4096,\n    208897,\n    4096,\n    4096,\n    4096,\n    208897,\n    4096,\n    4096,\n    208897,\n    4096,\n    4096,\n    2162700,\n    8389702,\n    1074790415,\n    16842799,\n    128,\n];\nfunction nextToken(parser, context) {\n    parser.flags = (parser.flags | 1) ^ 1;\n    parser.startIndex = parser.index;\n    parser.startColumn = parser.column;\n    parser.startLine = parser.line;\n    parser.setToken(scanSingleToken(parser, context, 0));\n}\nfunction scanSingleToken(parser, context, state) {\n    const isStartOfLine = parser.index === 0;\n    const { source } = parser;\n    let startIndex = parser.index;\n    let startLine = parser.line;\n    let startColumn = parser.column;\n    while (parser.index < parser.end) {\n        parser.tokenIndex = parser.index;\n        parser.tokenColumn = parser.column;\n        parser.tokenLine = parser.line;\n        let char = parser.currentChar;\n        if (char <= 0x7e) {\n            const token = TokenLookup[char];\n            switch (token) {\n                case 67174411:\n                case 16:\n                case 2162700:\n                case 1074790415:\n                case 69271571:\n                case 20:\n                case 21:\n                case 1074790417:\n                case 18:\n                case 16842799:\n                case 132:\n                case 128:\n                    advanceChar(parser);\n                    return token;\n                case 208897:\n                    return scanIdentifier(parser, context, 0);\n                case 4096:\n                    return scanIdentifier(parser, context, 1);\n                case 134283266:\n                    return scanNumber(parser, context, 16 | 128);\n                case 134283267:\n                    return scanString(parser, context, char);\n                case 131:\n                    return scanTemplate(parser, context);\n                case 136:\n                    return scanUnicodeIdentifier(parser, context);\n                case 130:\n                    return scanPrivateIdentifier(parser);\n                case 127:\n                    advanceChar(parser);\n                    break;\n                case 129:\n                    state |= 1 | 4;\n                    scanNewLine(parser);\n                    break;\n                case 135:\n                    consumeLineFeed(parser, state);\n                    state = (state & -5) | 1;\n                    break;\n                case 8456256: {\n                    const ch = advanceChar(parser);\n                    if (parser.index < parser.end) {\n                        if (ch === 60) {\n                            if (parser.index < parser.end && advanceChar(parser) === 61) {\n                                advanceChar(parser);\n                                return 4194332;\n                            }\n                            return 8390978;\n                        }\n                        else if (ch === 61) {\n                            advanceChar(parser);\n                            return 8390718;\n                        }\n                        if (ch === 33) {\n                            const index = parser.index + 1;\n                            if (index + 1 < parser.end &&\n                                source.charCodeAt(index) === 45 &&\n                                source.charCodeAt(index + 1) == 45) {\n                                parser.column += 3;\n                                parser.currentChar = source.charCodeAt((parser.index += 3));\n                                state = skipSingleHTMLComment(parser, source, state, context, 2, parser.tokenIndex, parser.tokenLine, parser.tokenColumn);\n                                startIndex = parser.tokenIndex;\n                                startLine = parser.tokenLine;\n                                startColumn = parser.tokenColumn;\n                                continue;\n                            }\n                            return 8456256;\n                        }\n                    }\n                    return 8456256;\n                }\n                case 1077936155: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 61) {\n                        if (advanceChar(parser) === 61) {\n                            advanceChar(parser);\n                            return 8390458;\n                        }\n                        return 8390460;\n                    }\n                    if (ch === 62) {\n                        advanceChar(parser);\n                        return 10;\n                    }\n                    return 1077936155;\n                }\n                case 16842798:\n                    if (advanceChar(parser) !== 61) {\n                        return 16842798;\n                    }\n                    if (advanceChar(parser) !== 61) {\n                        return 8390461;\n                    }\n                    advanceChar(parser);\n                    return 8390459;\n                case 8391477:\n                    if (advanceChar(parser) !== 61)\n                        return 8391477;\n                    advanceChar(parser);\n                    return 4194340;\n                case 8391476: {\n                    advanceChar(parser);\n                    if (parser.index >= parser.end)\n                        return 8391476;\n                    const ch = parser.currentChar;\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 4194338;\n                    }\n                    if (ch !== 42)\n                        return 8391476;\n                    if (advanceChar(parser) !== 61)\n                        return 8391735;\n                    advanceChar(parser);\n                    return 4194335;\n                }\n                case 8389959:\n                    if (advanceChar(parser) !== 61)\n                        return 8389959;\n                    advanceChar(parser);\n                    return 4194341;\n                case 25233968: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 43) {\n                        advanceChar(parser);\n                        return 33619993;\n                    }\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 4194336;\n                    }\n                    return 25233968;\n                }\n                case 25233969: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 45) {\n                        advanceChar(parser);\n                        if ((state & 1 || isStartOfLine) && parser.currentChar === 62) {\n                            if ((context & 64) === 0)\n                                report(parser, 112);\n                            advanceChar(parser);\n                            state = skipSingleHTMLComment(parser, source, state, context, 3, startIndex, startLine, startColumn);\n                            startIndex = parser.tokenIndex;\n                            startLine = parser.tokenLine;\n                            startColumn = parser.tokenColumn;\n                            continue;\n                        }\n                        return 33619994;\n                    }\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 4194337;\n                    }\n                    return 25233969;\n                }\n                case 8457014: {\n                    advanceChar(parser);\n                    if (parser.index < parser.end) {\n                        const ch = parser.currentChar;\n                        if (ch === 47) {\n                            advanceChar(parser);\n                            state = skipSingleLineComment(parser, source, state, 0, parser.tokenIndex, parser.tokenLine, parser.tokenColumn);\n                            startIndex = parser.tokenIndex;\n                            startLine = parser.tokenLine;\n                            startColumn = parser.tokenColumn;\n                            continue;\n                        }\n                        if (ch === 42) {\n                            advanceChar(parser);\n                            state = skipMultiLineComment(parser, source, state);\n                            startIndex = parser.tokenIndex;\n                            startLine = parser.tokenLine;\n                            startColumn = parser.tokenColumn;\n                            continue;\n                        }\n                        if (context & 8192) {\n                            return scanRegularExpression(parser, context);\n                        }\n                        if (ch === 61) {\n                            advanceChar(parser);\n                            return 4259875;\n                        }\n                    }\n                    return 8457014;\n                }\n                case 67108877: {\n                    const next = advanceChar(parser);\n                    if (next >= 48 && next <= 57)\n                        return scanNumber(parser, context, 64 | 16);\n                    if (next === 46) {\n                        const index = parser.index + 1;\n                        if (index < parser.end && source.charCodeAt(index) === 46) {\n                            parser.column += 2;\n                            parser.currentChar = source.charCodeAt((parser.index += 2));\n                            return 14;\n                        }\n                    }\n                    return 67108877;\n                }\n                case 8389702: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 124) {\n                        advanceChar(parser);\n                        if (parser.currentChar === 61) {\n                            advanceChar(parser);\n                            return 4194344;\n                        }\n                        return 8913465;\n                    }\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 4194342;\n                    }\n                    return 8389702;\n                }\n                case 8390721: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 8390719;\n                    }\n                    if (ch !== 62)\n                        return 8390721;\n                    advanceChar(parser);\n                    if (parser.index < parser.end) {\n                        const ch = parser.currentChar;\n                        if (ch === 62) {\n                            if (advanceChar(parser) === 61) {\n                                advanceChar(parser);\n                                return 4194334;\n                            }\n                            return 8390980;\n                        }\n                        if (ch === 61) {\n                            advanceChar(parser);\n                            return 4194333;\n                        }\n                    }\n                    return 8390979;\n                }\n                case 8390213: {\n                    advanceChar(parser);\n                    const ch = parser.currentChar;\n                    if (ch === 38) {\n                        advanceChar(parser);\n                        if (parser.currentChar === 61) {\n                            advanceChar(parser);\n                            return 4194345;\n                        }\n                        return 8913720;\n                    }\n                    if (ch === 61) {\n                        advanceChar(parser);\n                        return 4194343;\n                    }\n                    return 8390213;\n                }\n                case 22: {\n                    let ch = advanceChar(parser);\n                    if (ch === 63) {\n                        advanceChar(parser);\n                        if (parser.currentChar === 61) {\n                            advanceChar(parser);\n                            return 4194346;\n                        }\n                        return 276824445;\n                    }\n                    if (ch === 46) {\n                        const index = parser.index + 1;\n                        if (index < parser.end) {\n                            ch = source.charCodeAt(index);\n                            if (!(ch >= 48 && ch <= 57)) {\n                                advanceChar(parser);\n                                return 67108990;\n                            }\n                        }\n                    }\n                    return 22;\n                }\n            }\n        }\n        else {\n            if ((char ^ 8232) <= 1) {\n                state = (state & -5) | 1;\n                scanNewLine(parser);\n                continue;\n            }\n            const merged = consumePossibleSurrogatePair(parser);\n            if (merged > 0)\n                char = merged;\n            if (isIDStart(char)) {\n                parser.tokenValue = '';\n                return scanIdentifierSlowCase(parser, context, 0, 0);\n            }\n            if (isExoticECMAScriptWhitespace(char)) {\n                advanceChar(parser);\n                continue;\n            }\n            report(parser, 20, String.fromCodePoint(char));\n        }\n    }\n    return 1048576;\n}\n\nconst entities = {\n    AElig: '\\u00C6',\n    AMP: '\\u0026',\n    Aacute: '\\u00C1',\n    Abreve: '\\u0102',\n    Acirc: '\\u00C2',\n    Acy: '\\u0410',\n    Afr: '\\uD835\\uDD04',\n    Agrave: '\\u00C0',\n    Alpha: '\\u0391',\n    Amacr: '\\u0100',\n    And: '\\u2A53',\n    Aogon: '\\u0104',\n    Aopf: '\\uD835\\uDD38',\n    ApplyFunction: '\\u2061',\n    Aring: '\\u00C5',\n    Ascr: '\\uD835\\uDC9C',\n    Assign: '\\u2254',\n    Atilde: '\\u00C3',\n    Auml: '\\u00C4',\n    Backslash: '\\u2216',\n    Barv: '\\u2AE7',\n    Barwed: '\\u2306',\n    Bcy: '\\u0411',\n    Because: '\\u2235',\n    Bernoullis: '\\u212C',\n    Beta: '\\u0392',\n    Bfr: '\\uD835\\uDD05',\n    Bopf: '\\uD835\\uDD39',\n    Breve: '\\u02D8',\n    Bscr: '\\u212C',\n    Bumpeq: '\\u224E',\n    CHcy: '\\u0427',\n    COPY: '\\u00A9',\n    Cacute: '\\u0106',\n    Cap: '\\u22D2',\n    CapitalDifferentialD: '\\u2145',\n    Cayleys: '\\u212D',\n    Ccaron: '\\u010C',\n    Ccedil: '\\u00C7',\n    Ccirc: '\\u0108',\n    Cconint: '\\u2230',\n    Cdot: '\\u010A',\n    Cedilla: '\\u00B8',\n    CenterDot: '\\u00B7',\n    Cfr: '\\u212D',\n    Chi: '\\u03A7',\n    CircleDot: '\\u2299',\n    CircleMinus: '\\u2296',\n    CirclePlus: '\\u2295',\n    CircleTimes: '\\u2297',\n    ClockwiseContourIntegral: '\\u2232',\n    CloseCurlyDoubleQuote: '\\u201D',\n    CloseCurlyQuote: '\\u2019',\n    Colon: '\\u2237',\n    Colone: '\\u2A74',\n    Congruent: '\\u2261',\n    Conint: '\\u222F',\n    ContourIntegral: '\\u222E',\n    Copf: '\\u2102',\n    Coproduct: '\\u2210',\n    CounterClockwiseContourIntegral: '\\u2233',\n    Cross: '\\u2A2F',\n    Cscr: '\\uD835\\uDC9E',\n    Cup: '\\u22D3',\n    CupCap: '\\u224D',\n    DD: '\\u2145',\n    DDotrahd: '\\u2911',\n    DJcy: '\\u0402',\n    DScy: '\\u0405',\n    DZcy: '\\u040F',\n    Dagger: '\\u2021',\n    Darr: '\\u21A1',\n    Dashv: '\\u2AE4',\n    Dcaron: '\\u010E',\n    Dcy: '\\u0414',\n    Del: '\\u2207',\n    Delta: '\\u0394',\n    Dfr: '\\uD835\\uDD07',\n    DiacriticalAcute: '\\u00B4',\n    DiacriticalDot: '\\u02D9',\n    DiacriticalDoubleAcute: '\\u02DD',\n    DiacriticalGrave: '\\u0060',\n    DiacriticalTilde: '\\u02DC',\n    Diamond: '\\u22C4',\n    DifferentialD: '\\u2146',\n    Dopf: '\\uD835\\uDD3B',\n    Dot: '\\u00A8',\n    DotDot: '\\u20DC',\n    DotEqual: '\\u2250',\n    DoubleContourIntegral: '\\u222F',\n    DoubleDot: '\\u00A8',\n    DoubleDownArrow: '\\u21D3',\n    DoubleLeftArrow: '\\u21D0',\n    DoubleLeftRightArrow: '\\u21D4',\n    DoubleLeftTee: '\\u2AE4',\n    DoubleLongLeftArrow: '\\u27F8',\n    DoubleLongLeftRightArrow: '\\u27FA',\n    DoubleLongRightArrow: '\\u27F9',\n    DoubleRightArrow: '\\u21D2',\n    DoubleRightTee: '\\u22A8',\n    DoubleUpArrow: '\\u21D1',\n    DoubleUpDownArrow: '\\u21D5',\n    DoubleVerticalBar: '\\u2225',\n    DownArrow: '\\u2193',\n    DownArrowBar: '\\u2913',\n    DownArrowUpArrow: '\\u21F5',\n    DownBreve: '\\u0311',\n    DownLeftRightVector: '\\u2950',\n    DownLeftTeeVector: '\\u295E',\n    DownLeftVector: '\\u21BD',\n    DownLeftVectorBar: '\\u2956',\n    DownRightTeeVector: '\\u295F',\n    DownRightVector: '\\u21C1',\n    DownRightVectorBar: '\\u2957',\n    DownTee: '\\u22A4',\n    DownTeeArrow: '\\u21A7',\n    Downarrow: '\\u21D3',\n    Dscr: '\\uD835\\uDC9F',\n    Dstrok: '\\u0110',\n    ENG: '\\u014A',\n    ETH: '\\u00D0',\n    Eacute: '\\u00C9',\n    Ecaron: '\\u011A',\n    Ecirc: '\\u00CA',\n    Ecy: '\\u042D',\n    Edot: '\\u0116',\n    Efr: '\\uD835\\uDD08',\n    Egrave: '\\u00C8',\n    Element: '\\u2208',\n    Emacr: '\\u0112',\n    EmptySmallSquare: '\\u25FB',\n    EmptyVerySmallSquare: '\\u25AB',\n    Eogon: '\\u0118',\n    Eopf: '\\uD835\\uDD3C',\n    Epsilon: '\\u0395',\n    Equal: '\\u2A75',\n    EqualTilde: '\\u2242',\n    Equilibrium: '\\u21CC',\n    Escr: '\\u2130',\n    Esim: '\\u2A73',\n    Eta: '\\u0397',\n    Euml: '\\u00CB',\n    Exists: '\\u2203',\n    ExponentialE: '\\u2147',\n    Fcy: '\\u0424',\n    Ffr: '\\uD835\\uDD09',\n    FilledSmallSquare: '\\u25FC',\n    FilledVerySmallSquare: '\\u25AA',\n    Fopf: '\\uD835\\uDD3D',\n    ForAll: '\\u2200',\n    Fouriertrf: '\\u2131',\n    Fscr: '\\u2131',\n    GJcy: '\\u0403',\n    GT: '\\u003E',\n    Gamma: '\\u0393',\n    Gammad: '\\u03DC',\n    Gbreve: '\\u011E',\n    Gcedil: '\\u0122',\n    Gcirc: '\\u011C',\n    Gcy: '\\u0413',\n    Gdot: '\\u0120',\n    Gfr: '\\uD835\\uDD0A',\n    Gg: '\\u22D9',\n    Gopf: '\\uD835\\uDD3E',\n    GreaterEqual: '\\u2265',\n    GreaterEqualLess: '\\u22DB',\n    GreaterFullEqual: '\\u2267',\n    GreaterGreater: '\\u2AA2',\n    GreaterLess: '\\u2277',\n    GreaterSlantEqual: '\\u2A7E',\n    GreaterTilde: '\\u2273',\n    Gscr: '\\uD835\\uDCA2',\n    Gt: '\\u226B',\n    HARDcy: '\\u042A',\n    Hacek: '\\u02C7',\n    Hat: '\\u005E',\n    Hcirc: '\\u0124',\n    Hfr: '\\u210C',\n    HilbertSpace: '\\u210B',\n    Hopf: '\\u210D',\n    HorizontalLine: '\\u2500',\n    Hscr: '\\u210B',\n    Hstrok: '\\u0126',\n    HumpDownHump: '\\u224E',\n    HumpEqual: '\\u224F',\n    IEcy: '\\u0415',\n    IJlig: '\\u0132',\n    IOcy: '\\u0401',\n    Iacute: '\\u00CD',\n    Icirc: '\\u00CE',\n    Icy: '\\u0418',\n    Idot: '\\u0130',\n    Ifr: '\\u2111',\n    Igrave: '\\u00CC',\n    Im: '\\u2111',\n    Imacr: '\\u012A',\n    ImaginaryI: '\\u2148',\n    Implies: '\\u21D2',\n    Int: '\\u222C',\n    Integral: '\\u222B',\n    Intersection: '\\u22C2',\n    InvisibleComma: '\\u2063',\n    InvisibleTimes: '\\u2062',\n    Iogon: '\\u012E',\n    Iopf: '\\uD835\\uDD40',\n    Iota: '\\u0399',\n    Iscr: '\\u2110',\n    Itilde: '\\u0128',\n    Iukcy: '\\u0406',\n    Iuml: '\\u00CF',\n    Jcirc: '\\u0134',\n    Jcy: '\\u0419',\n    Jfr: '\\uD835\\uDD0D',\n    Jopf: '\\uD835\\uDD41',\n    Jscr: '\\uD835\\uDCA5',\n    Jsercy: '\\u0408',\n    Jukcy: '\\u0404',\n    KHcy: '\\u0425',\n    KJcy: '\\u040C',\n    Kappa: '\\u039A',\n    Kcedil: '\\u0136',\n    Kcy: '\\u041A',\n    Kfr: '\\uD835\\uDD0E',\n    Kopf: '\\uD835\\uDD42',\n    Kscr: '\\uD835\\uDCA6',\n    LJcy: '\\u0409',\n    LT: '\\u003C',\n    Lacute: '\\u0139',\n    Lambda: '\\u039B',\n    Lang: '\\u27EA',\n    Laplacetrf: '\\u2112',\n    Larr: '\\u219E',\n    Lcaron: '\\u013D',\n    Lcedil: '\\u013B',\n    Lcy: '\\u041B',\n    LeftAngleBracket: '\\u27E8',\n    LeftArrow: '\\u2190',\n    LeftArrowBar: '\\u21E4',\n    LeftArrowRightArrow: '\\u21C6',\n    LeftCeiling: '\\u2308',\n    LeftDoubleBracket: '\\u27E6',\n    LeftDownTeeVector: '\\u2961',\n    LeftDownVector: '\\u21C3',\n    LeftDownVectorBar: '\\u2959',\n    LeftFloor: '\\u230A',\n    LeftRightArrow: '\\u2194',\n    LeftRightVector: '\\u294E',\n    LeftTee: '\\u22A3',\n    LeftTeeArrow: '\\u21A4',\n    LeftTeeVector: '\\u295A',\n    LeftTriangle: '\\u22B2',\n    LeftTriangleBar: '\\u29CF',\n    LeftTriangleEqual: '\\u22B4',\n    LeftUpDownVector: '\\u2951',\n    LeftUpTeeVector: '\\u2960',\n    LeftUpVector: '\\u21BF',\n    LeftUpVectorBar: '\\u2958',\n    LeftVector: '\\u21BC',\n    LeftVectorBar: '\\u2952',\n    Leftarrow: '\\u21D0',\n    Leftrightarrow: '\\u21D4',\n    LessEqualGreater: '\\u22DA',\n    LessFullEqual: '\\u2266',\n    LessGreater: '\\u2276',\n    LessLess: '\\u2AA1',\n    LessSlantEqual: '\\u2A7D',\n    LessTilde: '\\u2272',\n    Lfr: '\\uD835\\uDD0F',\n    Ll: '\\u22D8',\n    Lleftarrow: '\\u21DA',\n    Lmidot: '\\u013F',\n    LongLeftArrow: '\\u27F5',\n    LongLeftRightArrow: '\\u27F7',\n    LongRightArrow: '\\u27F6',\n    Longleftarrow: '\\u27F8',\n    Longleftrightarrow: '\\u27FA',\n    Longrightarrow: '\\u27F9',\n    Lopf: '\\uD835\\uDD43',\n    LowerLeftArrow: '\\u2199',\n    LowerRightArrow: '\\u2198',\n    Lscr: '\\u2112',\n    Lsh: '\\u21B0',\n    Lstrok: '\\u0141',\n    Lt: '\\u226A',\n    Map: '\\u2905',\n    Mcy: '\\u041C',\n    MediumSpace: '\\u205F',\n    Mellintrf: '\\u2133',\n    Mfr: '\\uD835\\uDD10',\n    MinusPlus: '\\u2213',\n    Mopf: '\\uD835\\uDD44',\n    Mscr: '\\u2133',\n    Mu: '\\u039C',\n    NJcy: '\\u040A',\n    Nacute: '\\u0143',\n    Ncaron: '\\u0147',\n    Ncedil: '\\u0145',\n    Ncy: '\\u041D',\n    NegativeMediumSpace: '\\u200B',\n    NegativeThickSpace: '\\u200B',\n    NegativeThinSpace: '\\u200B',\n    NegativeVeryThinSpace: '\\u200B',\n    NestedGreaterGreater: '\\u226B',\n    NestedLessLess: '\\u226A',\n    NewLine: '\\u000A',\n    Nfr: '\\uD835\\uDD11',\n    NoBreak: '\\u2060',\n    NonBreakingSpace: '\\u00A0',\n    Nopf: '\\u2115',\n    Not: '\\u2AEC',\n    NotCongruent: '\\u2262',\n    NotCupCap: '\\u226D',\n    NotDoubleVerticalBar: '\\u2226',\n    NotElement: '\\u2209',\n    NotEqual: '\\u2260',\n    NotEqualTilde: '\\u2242\\u0338',\n    NotExists: '\\u2204',\n    NotGreater: '\\u226F',\n    NotGreaterEqual: '\\u2271',\n    NotGreaterFullEqual: '\\u2267\\u0338',\n    NotGreaterGreater: '\\u226B\\u0338',\n    NotGreaterLess: '\\u2279',\n    NotGreaterSlantEqual: '\\u2A7E\\u0338',\n    NotGreaterTilde: '\\u2275',\n    NotHumpDownHump: '\\u224E\\u0338',\n    NotHumpEqual: '\\u224F\\u0338',\n    NotLeftTriangle: '\\u22EA',\n    NotLeftTriangleBar: '\\u29CF\\u0338',\n    NotLeftTriangleEqual: '\\u22EC',\n    NotLess: '\\u226E',\n    NotLessEqual: '\\u2270',\n    NotLessGreater: '\\u2278',\n    NotLessLess: '\\u226A\\u0338',\n    NotLessSlantEqual: '\\u2A7D\\u0338',\n    NotLessTilde: '\\u2274',\n    NotNestedGreaterGreater: '\\u2AA2\\u0338',\n    NotNestedLessLess: '\\u2AA1\\u0338',\n    NotPrecedes: '\\u2280',\n    NotPrecedesEqual: '\\u2AAF\\u0338',\n    NotPrecedesSlantEqual: '\\u22E0',\n    NotReverseElement: '\\u220C',\n    NotRightTriangle: '\\u22EB',\n    NotRightTriangleBar: '\\u29D0\\u0338',\n    NotRightTriangleEqual: '\\u22ED',\n    NotSquareSubset: '\\u228F\\u0338',\n    NotSquareSubsetEqual: '\\u22E2',\n    NotSquareSuperset: '\\u2290\\u0338',\n    NotSquareSupersetEqual: '\\u22E3',\n    NotSubset: '\\u2282\\u20D2',\n    NotSubsetEqual: '\\u2288',\n    NotSucceeds: '\\u2281',\n    NotSucceedsEqual: '\\u2AB0\\u0338',\n    NotSucceedsSlantEqual: '\\u22E1',\n    NotSucceedsTilde: '\\u227F\\u0338',\n    NotSuperset: '\\u2283\\u20D2',\n    NotSupersetEqual: '\\u2289',\n    NotTilde: '\\u2241',\n    NotTildeEqual: '\\u2244',\n    NotTildeFullEqual: '\\u2247',\n    NotTildeTilde: '\\u2249',\n    NotVerticalBar: '\\u2224',\n    Nscr: '\\uD835\\uDCA9',\n    Ntilde: '\\u00D1',\n    Nu: '\\u039D',\n    OElig: '\\u0152',\n    Oacute: '\\u00D3',\n    Ocirc: '\\u00D4',\n    Ocy: '\\u041E',\n    Odblac: '\\u0150',\n    Ofr: '\\uD835\\uDD12',\n    Ograve: '\\u00D2',\n    Omacr: '\\u014C',\n    Omega: '\\u03A9',\n    Omicron: '\\u039F',\n    Oopf: '\\uD835\\uDD46',\n    OpenCurlyDoubleQuote: '\\u201C',\n    OpenCurlyQuote: '\\u2018',\n    Or: '\\u2A54',\n    Oscr: '\\uD835\\uDCAA',\n    Oslash: '\\u00D8',\n    Otilde: '\\u00D5',\n    Otimes: '\\u2A37',\n    Ouml: '\\u00D6',\n    OverBar: '\\u203E',\n    OverBrace: '\\u23DE',\n    OverBracket: '\\u23B4',\n    OverParenthesis: '\\u23DC',\n    PartialD: '\\u2202',\n    Pcy: '\\u041F',\n    Pfr: '\\uD835\\uDD13',\n    Phi: '\\u03A6',\n    Pi: '\\u03A0',\n    PlusMinus: '\\u00B1',\n    Poincareplane: '\\u210C',\n    Popf: '\\u2119',\n    Pr: '\\u2ABB',\n    Precedes: '\\u227A',\n    PrecedesEqual: '\\u2AAF',\n    PrecedesSlantEqual: '\\u227C',\n    PrecedesTilde: '\\u227E',\n    Prime: '\\u2033',\n    Product: '\\u220F',\n    Proportion: '\\u2237',\n    Proportional: '\\u221D',\n    Pscr: '\\uD835\\uDCAB',\n    Psi: '\\u03A8',\n    QUOT: '\\u0022',\n    Qfr: '\\uD835\\uDD14',\n    Qopf: '\\u211A',\n    Qscr: '\\uD835\\uDCAC',\n    RBarr: '\\u2910',\n    REG: '\\u00AE',\n    Racute: '\\u0154',\n    Rang: '\\u27EB',\n    Rarr: '\\u21A0',\n    Rarrtl: '\\u2916',\n    Rcaron: '\\u0158',\n    Rcedil: '\\u0156',\n    Rcy: '\\u0420',\n    Re: '\\u211C',\n    ReverseElement: '\\u220B',\n    ReverseEquilibrium: '\\u21CB',\n    ReverseUpEquilibrium: '\\u296F',\n    Rfr: '\\u211C',\n    Rho: '\\u03A1',\n    RightAngleBracket: '\\u27E9',\n    RightArrow: '\\u2192',\n    RightArrowBar: '\\u21E5',\n    RightArrowLeftArrow: '\\u21C4',\n    RightCeiling: '\\u2309',\n    RightDoubleBracket: '\\u27E7',\n    RightDownTeeVector: '\\u295D',\n    RightDownVector: '\\u21C2',\n    RightDownVectorBar: '\\u2955',\n    RightFloor: '\\u230B',\n    RightTee: '\\u22A2',\n    RightTeeArrow: '\\u21A6',\n    RightTeeVector: '\\u295B',\n    RightTriangle: '\\u22B3',\n    RightTriangleBar: '\\u29D0',\n    RightTriangleEqual: '\\u22B5',\n    RightUpDownVector: '\\u294F',\n    RightUpTeeVector: '\\u295C',\n    RightUpVector: '\\u21BE',\n    RightUpVectorBar: '\\u2954',\n    RightVector: '\\u21C0',\n    RightVectorBar: '\\u2953',\n    Rightarrow: '\\u21D2',\n    Ropf: '\\u211D',\n    RoundImplies: '\\u2970',\n    Rrightarrow: '\\u21DB',\n    Rscr: '\\u211B',\n    Rsh: '\\u21B1',\n    RuleDelayed: '\\u29F4',\n    SHCHcy: '\\u0429',\n    SHcy: '\\u0428',\n    SOFTcy: '\\u042C',\n    Sacute: '\\u015A',\n    Sc: '\\u2ABC',\n    Scaron: '\\u0160',\n    Scedil: '\\u015E',\n    Scirc: '\\u015C',\n    Scy: '\\u0421',\n    Sfr: '\\uD835\\uDD16',\n    ShortDownArrow: '\\u2193',\n    ShortLeftArrow: '\\u2190',\n    ShortRightArrow: '\\u2192',\n    ShortUpArrow: '\\u2191',\n    Sigma: '\\u03A3',\n    SmallCircle: '\\u2218',\n    Sopf: '\\uD835\\uDD4A',\n    Sqrt: '\\u221A',\n    Square: '\\u25A1',\n    SquareIntersection: '\\u2293',\n    SquareSubset: '\\u228F',\n    SquareSubsetEqual: '\\u2291',\n    SquareSuperset: '\\u2290',\n    SquareSupersetEqual: '\\u2292',\n    SquareUnion: '\\u2294',\n    Sscr: '\\uD835\\uDCAE',\n    Star: '\\u22C6',\n    Sub: '\\u22D0',\n    Subset: '\\u22D0',\n    SubsetEqual: '\\u2286',\n    Succeeds: '\\u227B',\n    SucceedsEqual: '\\u2AB0',\n    SucceedsSlantEqual: '\\u227D',\n    SucceedsTilde: '\\u227F',\n    SuchThat: '\\u220B',\n    Sum: '\\u2211',\n    Sup: '\\u22D1',\n    Superset: '\\u2283',\n    SupersetEqual: '\\u2287',\n    Supset: '\\u22D1',\n    THORN: '\\u00DE',\n    TRADE: '\\u2122',\n    TSHcy: '\\u040B',\n    TScy: '\\u0426',\n    Tab: '\\u0009',\n    Tau: '\\u03A4',\n    Tcaron: '\\u0164',\n    Tcedil: '\\u0162',\n    Tcy: '\\u0422',\n    Tfr: '\\uD835\\uDD17',\n    Therefore: '\\u2234',\n    Theta: '\\u0398',\n    ThickSpace: '\\u205F\\u200A',\n    ThinSpace: '\\u2009',\n    Tilde: '\\u223C',\n    TildeEqual: '\\u2243',\n    TildeFullEqual: '\\u2245',\n    TildeTilde: '\\u2248',\n    Topf: '\\uD835\\uDD4B',\n    TripleDot: '\\u20DB',\n    Tscr: '\\uD835\\uDCAF',\n    Tstrok: '\\u0166',\n    Uacute: '\\u00DA',\n    Uarr: '\\u219F',\n    Uarrocir: '\\u2949',\n    Ubrcy: '\\u040E',\n    Ubreve: '\\u016C',\n    Ucirc: '\\u00DB',\n    Ucy: '\\u0423',\n    Udblac: '\\u0170',\n    Ufr: '\\uD835\\uDD18',\n    Ugrave: '\\u00D9',\n    Umacr: '\\u016A',\n    UnderBar: '\\u005F',\n    UnderBrace: '\\u23DF',\n    UnderBracket: '\\u23B5',\n    UnderParenthesis: '\\u23DD',\n    Union: '\\u22C3',\n    UnionPlus: '\\u228E',\n    Uogon: '\\u0172',\n    Uopf: '\\uD835\\uDD4C',\n    UpArrow: '\\u2191',\n    UpArrowBar: '\\u2912',\n    UpArrowDownArrow: '\\u21C5',\n    UpDownArrow: '\\u2195',\n    UpEquilibrium: '\\u296E',\n    UpTee: '\\u22A5',\n    UpTeeArrow: '\\u21A5',\n    Uparrow: '\\u21D1',\n    Updownarrow: '\\u21D5',\n    UpperLeftArrow: '\\u2196',\n    UpperRightArrow: '\\u2197',\n    Upsi: '\\u03D2',\n    Upsilon: '\\u03A5',\n    Uring: '\\u016E',\n    Uscr: '\\uD835\\uDCB0',\n    Utilde: '\\u0168',\n    Uuml: '\\u00DC',\n    VDash: '\\u22AB',\n    Vbar: '\\u2AEB',\n    Vcy: '\\u0412',\n    Vdash: '\\u22A9',\n    Vdashl: '\\u2AE6',\n    Vee: '\\u22C1',\n    Verbar: '\\u2016',\n    Vert: '\\u2016',\n    VerticalBar: '\\u2223',\n    VerticalLine: '\\u007C',\n    VerticalSeparator: '\\u2758',\n    VerticalTilde: '\\u2240',\n    VeryThinSpace: '\\u200A',\n    Vfr: '\\uD835\\uDD19',\n    Vopf: '\\uD835\\uDD4D',\n    Vscr: '\\uD835\\uDCB1',\n    Vvdash: '\\u22AA',\n    Wcirc: '\\u0174',\n    Wedge: '\\u22C0',\n    Wfr: '\\uD835\\uDD1A',\n    Wopf: '\\uD835\\uDD4E',\n    Wscr: '\\uD835\\uDCB2',\n    Xfr: '\\uD835\\uDD1B',\n    Xi: '\\u039E',\n    Xopf: '\\uD835\\uDD4F',\n    Xscr: '\\uD835\\uDCB3',\n    YAcy: '\\u042F',\n    YIcy: '\\u0407',\n    YUcy: '\\u042E',\n    Yacute: '\\u00DD',\n    Ycirc: '\\u0176',\n    Ycy: '\\u042B',\n    Yfr: '\\uD835\\uDD1C',\n    Yopf: '\\uD835\\uDD50',\n    Yscr: '\\uD835\\uDCB4',\n    Yuml: '\\u0178',\n    ZHcy: '\\u0416',\n    Zacute: '\\u0179',\n    Zcaron: '\\u017D',\n    Zcy: '\\u0417',\n    Zdot: '\\u017B',\n    ZeroWidthSpace: '\\u200B',\n    Zeta: '\\u0396',\n    Zfr: '\\u2128',\n    Zopf: '\\u2124',\n    Zscr: '\\uD835\\uDCB5',\n    aacute: '\\u00E1',\n    abreve: '\\u0103',\n    ac: '\\u223E',\n    acE: '\\u223E\\u0333',\n    acd: '\\u223F',\n    acirc: '\\u00E2',\n    acute: '\\u00B4',\n    acy: '\\u0430',\n    aelig: '\\u00E6',\n    af: '\\u2061',\n    afr: '\\uD835\\uDD1E',\n    agrave: '\\u00E0',\n    alefsym: '\\u2135',\n    aleph: '\\u2135',\n    alpha: '\\u03B1',\n    amacr: '\\u0101',\n    amalg: '\\u2A3F',\n    amp: '\\u0026',\n    and: '\\u2227',\n    andand: '\\u2A55',\n    andd: '\\u2A5C',\n    andslope: '\\u2A58',\n    andv: '\\u2A5A',\n    ang: '\\u2220',\n    ange: '\\u29A4',\n    angle: '\\u2220',\n    angmsd: '\\u2221',\n    angmsdaa: '\\u29A8',\n    angmsdab: '\\u29A9',\n    angmsdac: '\\u29AA',\n    angmsdad: '\\u29AB',\n    angmsdae: '\\u29AC',\n    angmsdaf: '\\u29AD',\n    angmsdag: '\\u29AE',\n    angmsdah: '\\u29AF',\n    angrt: '\\u221F',\n    angrtvb: '\\u22BE',\n    angrtvbd: '\\u299D',\n    angsph: '\\u2222',\n    angst: '\\u00C5',\n    angzarr: '\\u237C',\n    aogon: '\\u0105',\n    aopf: '\\uD835\\uDD52',\n    ap: '\\u2248',\n    apE: '\\u2A70',\n    apacir: '\\u2A6F',\n    ape: '\\u224A',\n    apid: '\\u224B',\n    apos: '\\u0027',\n    approx: '\\u2248',\n    approxeq: '\\u224A',\n    aring: '\\u00E5',\n    ascr: '\\uD835\\uDCB6',\n    ast: '\\u002A',\n    asymp: '\\u2248',\n    asympeq: '\\u224D',\n    atilde: '\\u00E3',\n    auml: '\\u00E4',\n    awconint: '\\u2233',\n    awint: '\\u2A11',\n    bNot: '\\u2AED',\n    backcong: '\\u224C',\n    backepsilon: '\\u03F6',\n    backprime: '\\u2035',\n    backsim: '\\u223D',\n    backsimeq: '\\u22CD',\n    barvee: '\\u22BD',\n    barwed: '\\u2305',\n    barwedge: '\\u2305',\n    bbrk: '\\u23B5',\n    bbrktbrk: '\\u23B6',\n    bcong: '\\u224C',\n    bcy: '\\u0431',\n    bdquo: '\\u201E',\n    becaus: '\\u2235',\n    because: '\\u2235',\n    bemptyv: '\\u29B0',\n    bepsi: '\\u03F6',\n    bernou: '\\u212C',\n    beta: '\\u03B2',\n    beth: '\\u2136',\n    between: '\\u226C',\n    bfr: '\\uD835\\uDD1F',\n    bigcap: '\\u22C2',\n    bigcirc: '\\u25EF',\n    bigcup: '\\u22C3',\n    bigodot: '\\u2A00',\n    bigoplus: '\\u2A01',\n    bigotimes: '\\u2A02',\n    bigsqcup: '\\u2A06',\n    bigstar: '\\u2605',\n    bigtriangledown: '\\u25BD',\n    bigtriangleup: '\\u25B3',\n    biguplus: '\\u2A04',\n    bigvee: '\\u22C1',\n    bigwedge: '\\u22C0',\n    bkarow: '\\u290D',\n    blacklozenge: '\\u29EB',\n    blacksquare: '\\u25AA',\n    blacktriangle: '\\u25B4',\n    blacktriangledown: '\\u25BE',\n    blacktriangleleft: '\\u25C2',\n    blacktriangleright: '\\u25B8',\n    blank: '\\u2423',\n    blk12: '\\u2592',\n    blk14: '\\u2591',\n    blk34: '\\u2593',\n    block: '\\u2588',\n    bne: '\\u003D\\u20E5',\n    bnequiv: '\\u2261\\u20E5',\n    bnot: '\\u2310',\n    bopf: '\\uD835\\uDD53',\n    bot: '\\u22A5',\n    bottom: '\\u22A5',\n    bowtie: '\\u22C8',\n    boxDL: '\\u2557',\n    boxDR: '\\u2554',\n    boxDl: '\\u2556',\n    boxDr: '\\u2553',\n    boxH: '\\u2550',\n    boxHD: '\\u2566',\n    boxHU: '\\u2569',\n    boxHd: '\\u2564',\n    boxHu: '\\u2567',\n    boxUL: '\\u255D',\n    boxUR: '\\u255A',\n    boxUl: '\\u255C',\n    boxUr: '\\u2559',\n    boxV: '\\u2551',\n    boxVH: '\\u256C',\n    boxVL: '\\u2563',\n    boxVR: '\\u2560',\n    boxVh: '\\u256B',\n    boxVl: '\\u2562',\n    boxVr: '\\u255F',\n    boxbox: '\\u29C9',\n    boxdL: '\\u2555',\n    boxdR: '\\u2552',\n    boxdl: '\\u2510',\n    boxdr: '\\u250C',\n    boxh: '\\u2500',\n    boxhD: '\\u2565',\n    boxhU: '\\u2568',\n    boxhd: '\\u252C',\n    boxhu: '\\u2534',\n    boxminus: '\\u229F',\n    boxplus: '\\u229E',\n    boxtimes: '\\u22A0',\n    boxuL: '\\u255B',\n    boxuR: '\\u2558',\n    boxul: '\\u2518',\n    boxur: '\\u2514',\n    boxv: '\\u2502',\n    boxvH: '\\u256A',\n    boxvL: '\\u2561',\n    boxvR: '\\u255E',\n    boxvh: '\\u253C',\n    boxvl: '\\u2524',\n    boxvr: '\\u251C',\n    bprime: '\\u2035',\n    breve: '\\u02D8',\n    brvbar: '\\u00A6',\n    bscr: '\\uD835\\uDCB7',\n    bsemi: '\\u204F',\n    bsim: '\\u223D',\n    bsime: '\\u22CD',\n    bsol: '\\u005C',\n    bsolb: '\\u29C5',\n    bsolhsub: '\\u27C8',\n    bull: '\\u2022',\n    bullet: '\\u2022',\n    bump: '\\u224E',\n    bumpE: '\\u2AAE',\n    bumpe: '\\u224F',\n    bumpeq: '\\u224F',\n    cacute: '\\u0107',\n    cap: '\\u2229',\n    capand: '\\u2A44',\n    capbrcup: '\\u2A49',\n    capcap: '\\u2A4B',\n    capcup: '\\u2A47',\n    capdot: '\\u2A40',\n    caps: '\\u2229\\uFE00',\n    caret: '\\u2041',\n    caron: '\\u02C7',\n    ccaps: '\\u2A4D',\n    ccaron: '\\u010D',\n    ccedil: '\\u00E7',\n    ccirc: '\\u0109',\n    ccups: '\\u2A4C',\n    ccupssm: '\\u2A50',\n    cdot: '\\u010B',\n    cedil: '\\u00B8',\n    cemptyv: '\\u29B2',\n    cent: '\\u00A2',\n    centerdot: '\\u00B7',\n    cfr: '\\uD835\\uDD20',\n    chcy: '\\u0447',\n    check: '\\u2713',\n    checkmark: '\\u2713',\n    chi: '\\u03C7',\n    cir: '\\u25CB',\n    cirE: '\\u29C3',\n    circ: '\\u02C6',\n    circeq: '\\u2257',\n    circlearrowleft: '\\u21BA',\n    circlearrowright: '\\u21BB',\n    circledR: '\\u00AE',\n    circledS: '\\u24C8',\n    circledast: '\\u229B',\n    circledcirc: '\\u229A',\n    circleddash: '\\u229D',\n    cire: '\\u2257',\n    cirfnint: '\\u2A10',\n    cirmid: '\\u2AEF',\n    cirscir: '\\u29C2',\n    clubs: '\\u2663',\n    clubsuit: '\\u2663',\n    colon: '\\u003A',\n    colone: '\\u2254',\n    coloneq: '\\u2254',\n    comma: '\\u002C',\n    commat: '\\u0040',\n    comp: '\\u2201',\n    compfn: '\\u2218',\n    complement: '\\u2201',\n    complexes: '\\u2102',\n    cong: '\\u2245',\n    congdot: '\\u2A6D',\n    conint: '\\u222E',\n    copf: '\\uD835\\uDD54',\n    coprod: '\\u2210',\n    copy: '\\u00A9',\n    copysr: '\\u2117',\n    crarr: '\\u21B5',\n    cross: '\\u2717',\n    cscr: '\\uD835\\uDCB8',\n    csub: '\\u2ACF',\n    csube: '\\u2AD1',\n    csup: '\\u2AD0',\n    csupe: '\\u2AD2',\n    ctdot: '\\u22EF',\n    cudarrl: '\\u2938',\n    cudarrr: '\\u2935',\n    cuepr: '\\u22DE',\n    cuesc: '\\u22DF',\n    cularr: '\\u21B6',\n    cularrp: '\\u293D',\n    cup: '\\u222A',\n    cupbrcap: '\\u2A48',\n    cupcap: '\\u2A46',\n    cupcup: '\\u2A4A',\n    cupdot: '\\u228D',\n    cupor: '\\u2A45',\n    cups: '\\u222A\\uFE00',\n    curarr: '\\u21B7',\n    curarrm: '\\u293C',\n    curlyeqprec: '\\u22DE',\n    curlyeqsucc: '\\u22DF',\n    curlyvee: '\\u22CE',\n    curlywedge: '\\u22CF',\n    curren: '\\u00A4',\n    curvearrowleft: '\\u21B6',\n    curvearrowright: '\\u21B7',\n    cuvee: '\\u22CE',\n    cuwed: '\\u22CF',\n    cwconint: '\\u2232',\n    cwint: '\\u2231',\n    cylcty: '\\u232D',\n    dArr: '\\u21D3',\n    dHar: '\\u2965',\n    dagger: '\\u2020',\n    daleth: '\\u2138',\n    darr: '\\u2193',\n    dash: '\\u2010',\n    dashv: '\\u22A3',\n    dbkarow: '\\u290F',\n    dblac: '\\u02DD',\n    dcaron: '\\u010F',\n    dcy: '\\u0434',\n    dd: '\\u2146',\n    ddagger: '\\u2021',\n    ddarr: '\\u21CA',\n    ddotseq: '\\u2A77',\n    deg: '\\u00B0',\n    delta: '\\u03B4',\n    demptyv: '\\u29B1',\n    dfisht: '\\u297F',\n    dfr: '\\uD835\\uDD21',\n    dharl: '\\u21C3',\n    dharr: '\\u21C2',\n    diam: '\\u22C4',\n    diamond: '\\u22C4',\n    diamondsuit: '\\u2666',\n    diams: '\\u2666',\n    die: '\\u00A8',\n    digamma: '\\u03DD',\n    disin: '\\u22F2',\n    div: '\\u00F7',\n    divide: '\\u00F7',\n    divideontimes: '\\u22C7',\n    divonx: '\\u22C7',\n    djcy: '\\u0452',\n    dlcorn: '\\u231E',\n    dlcrop: '\\u230D',\n    dollar: '\\u0024',\n    dopf: '\\uD835\\uDD55',\n    dot: '\\u02D9',\n    doteq: '\\u2250',\n    doteqdot: '\\u2251',\n    dotminus: '\\u2238',\n    dotplus: '\\u2214',\n    dotsquare: '\\u22A1',\n    doublebarwedge: '\\u2306',\n    downarrow: '\\u2193',\n    downdownarrows: '\\u21CA',\n    downharpoonleft: '\\u21C3',\n    downharpoonright: '\\u21C2',\n    drbkarow: '\\u2910',\n    drcorn: '\\u231F',\n    drcrop: '\\u230C',\n    dscr: '\\uD835\\uDCB9',\n    dscy: '\\u0455',\n    dsol: '\\u29F6',\n    dstrok: '\\u0111',\n    dtdot: '\\u22F1',\n    dtri: '\\u25BF',\n    dtrif: '\\u25BE',\n    duarr: '\\u21F5',\n    duhar: '\\u296F',\n    dwangle: '\\u29A6',\n    dzcy: '\\u045F',\n    dzigrarr: '\\u27FF',\n    eDDot: '\\u2A77',\n    eDot: '\\u2251',\n    eacute: '\\u00E9',\n    easter: '\\u2A6E',\n    ecaron: '\\u011B',\n    ecir: '\\u2256',\n    ecirc: '\\u00EA',\n    ecolon: '\\u2255',\n    ecy: '\\u044D',\n    edot: '\\u0117',\n    ee: '\\u2147',\n    efDot: '\\u2252',\n    efr: '\\uD835\\uDD22',\n    eg: '\\u2A9A',\n    egrave: '\\u00E8',\n    egs: '\\u2A96',\n    egsdot: '\\u2A98',\n    el: '\\u2A99',\n    elinters: '\\u23E7',\n    ell: '\\u2113',\n    els: '\\u2A95',\n    elsdot: '\\u2A97',\n    emacr: '\\u0113',\n    empty: '\\u2205',\n    emptyset: '\\u2205',\n    emptyv: '\\u2205',\n    emsp13: '\\u2004',\n    emsp14: '\\u2005',\n    emsp: '\\u2003',\n    eng: '\\u014B',\n    ensp: '\\u2002',\n    eogon: '\\u0119',\n    eopf: '\\uD835\\uDD56',\n    epar: '\\u22D5',\n    eparsl: '\\u29E3',\n    eplus: '\\u2A71',\n    epsi: '\\u03B5',\n    epsilon: '\\u03B5',\n    epsiv: '\\u03F5',\n    eqcirc: '\\u2256',\n    eqcolon: '\\u2255',\n    eqsim: '\\u2242',\n    eqslantgtr: '\\u2A96',\n    eqslantless: '\\u2A95',\n    equals: '\\u003D',\n    equest: '\\u225F',\n    equiv: '\\u2261',\n    equivDD: '\\u2A78',\n    eqvparsl: '\\u29E5',\n    erDot: '\\u2253',\n    erarr: '\\u2971',\n    escr: '\\u212F',\n    esdot: '\\u2250',\n    esim: '\\u2242',\n    eta: '\\u03B7',\n    eth: '\\u00F0',\n    euml: '\\u00EB',\n    euro: '\\u20AC',\n    excl: '\\u0021',\n    exist: '\\u2203',\n    expectation: '\\u2130',\n    exponentiale: '\\u2147',\n    fallingdotseq: '\\u2252',\n    fcy: '\\u0444',\n    female: '\\u2640',\n    ffilig: '\\uFB03',\n    fflig: '\\uFB00',\n    ffllig: '\\uFB04',\n    ffr: '\\uD835\\uDD23',\n    filig: '\\uFB01',\n    fjlig: '\\u0066\\u006A',\n    flat: '\\u266D',\n    fllig: '\\uFB02',\n    fltns: '\\u25B1',\n    fnof: '\\u0192',\n    fopf: '\\uD835\\uDD57',\n    forall: '\\u2200',\n    fork: '\\u22D4',\n    forkv: '\\u2AD9',\n    fpartint: '\\u2A0D',\n    frac12: '\\u00BD',\n    frac13: '\\u2153',\n    frac14: '\\u00BC',\n    frac15: '\\u2155',\n    frac16: '\\u2159',\n    frac18: '\\u215B',\n    frac23: '\\u2154',\n    frac25: '\\u2156',\n    frac34: '\\u00BE',\n    frac35: '\\u2157',\n    frac38: '\\u215C',\n    frac45: '\\u2158',\n    frac56: '\\u215A',\n    frac58: '\\u215D',\n    frac78: '\\u215E',\n    frasl: '\\u2044',\n    frown: '\\u2322',\n    fscr: '\\uD835\\uDCBB',\n    gE: '\\u2267',\n    gEl: '\\u2A8C',\n    gacute: '\\u01F5',\n    gamma: '\\u03B3',\n    gammad: '\\u03DD',\n    gap: '\\u2A86',\n    gbreve: '\\u011F',\n    gcirc: '\\u011D',\n    gcy: '\\u0433',\n    gdot: '\\u0121',\n    ge: '\\u2265',\n    gel: '\\u22DB',\n    geq: '\\u2265',\n    geqq: '\\u2267',\n    geqslant: '\\u2A7E',\n    ges: '\\u2A7E',\n    gescc: '\\u2AA9',\n    gesdot: '\\u2A80',\n    gesdoto: '\\u2A82',\n    gesdotol: '\\u2A84',\n    gesl: '\\u22DB\\uFE00',\n    gesles: '\\u2A94',\n    gfr: '\\uD835\\uDD24',\n    gg: '\\u226B',\n    ggg: '\\u22D9',\n    gimel: '\\u2137',\n    gjcy: '\\u0453',\n    gl: '\\u2277',\n    glE: '\\u2A92',\n    gla: '\\u2AA5',\n    glj: '\\u2AA4',\n    gnE: '\\u2269',\n    gnap: '\\u2A8A',\n    gnapprox: '\\u2A8A',\n    gne: '\\u2A88',\n    gneq: '\\u2A88',\n    gneqq: '\\u2269',\n    gnsim: '\\u22E7',\n    gopf: '\\uD835\\uDD58',\n    grave: '\\u0060',\n    gscr: '\\u210A',\n    gsim: '\\u2273',\n    gsime: '\\u2A8E',\n    gsiml: '\\u2A90',\n    gt: '\\u003E',\n    gtcc: '\\u2AA7',\n    gtcir: '\\u2A7A',\n    gtdot: '\\u22D7',\n    gtlPar: '\\u2995',\n    gtquest: '\\u2A7C',\n    gtrapprox: '\\u2A86',\n    gtrarr: '\\u2978',\n    gtrdot: '\\u22D7',\n    gtreqless: '\\u22DB',\n    gtreqqless: '\\u2A8C',\n    gtrless: '\\u2277',\n    gtrsim: '\\u2273',\n    gvertneqq: '\\u2269\\uFE00',\n    gvnE: '\\u2269\\uFE00',\n    hArr: '\\u21D4',\n    hairsp: '\\u200A',\n    half: '\\u00BD',\n    hamilt: '\\u210B',\n    hardcy: '\\u044A',\n    harr: '\\u2194',\n    harrcir: '\\u2948',\n    harrw: '\\u21AD',\n    hbar: '\\u210F',\n    hcirc: '\\u0125',\n    hearts: '\\u2665',\n    heartsuit: '\\u2665',\n    hellip: '\\u2026',\n    hercon: '\\u22B9',\n    hfr: '\\uD835\\uDD25',\n    hksearow: '\\u2925',\n    hkswarow: '\\u2926',\n    hoarr: '\\u21FF',\n    homtht: '\\u223B',\n    hookleftarrow: '\\u21A9',\n    hookrightarrow: '\\u21AA',\n    hopf: '\\uD835\\uDD59',\n    horbar: '\\u2015',\n    hscr: '\\uD835\\uDCBD',\n    hslash: '\\u210F',\n    hstrok: '\\u0127',\n    hybull: '\\u2043',\n    hyphen: '\\u2010',\n    iacute: '\\u00ED',\n    ic: '\\u2063',\n    icirc: '\\u00EE',\n    icy: '\\u0438',\n    iecy: '\\u0435',\n    iexcl: '\\u00A1',\n    iff: '\\u21D4',\n    ifr: '\\uD835\\uDD26',\n    igrave: '\\u00EC',\n    ii: '\\u2148',\n    iiiint: '\\u2A0C',\n    iiint: '\\u222D',\n    iinfin: '\\u29DC',\n    iiota: '\\u2129',\n    ijlig: '\\u0133',\n    imacr: '\\u012B',\n    image: '\\u2111',\n    imagline: '\\u2110',\n    imagpart: '\\u2111',\n    imath: '\\u0131',\n    imof: '\\u22B7',\n    imped: '\\u01B5',\n    in: '\\u2208',\n    incare: '\\u2105',\n    infin: '\\u221E',\n    infintie: '\\u29DD',\n    inodot: '\\u0131',\n    int: '\\u222B',\n    intcal: '\\u22BA',\n    integers: '\\u2124',\n    intercal: '\\u22BA',\n    intlarhk: '\\u2A17',\n    intprod: '\\u2A3C',\n    iocy: '\\u0451',\n    iogon: '\\u012F',\n    iopf: '\\uD835\\uDD5A',\n    iota: '\\u03B9',\n    iprod: '\\u2A3C',\n    iquest: '\\u00BF',\n    iscr: '\\uD835\\uDCBE',\n    isin: '\\u2208',\n    isinE: '\\u22F9',\n    isindot: '\\u22F5',\n    isins: '\\u22F4',\n    isinsv: '\\u22F3',\n    isinv: '\\u2208',\n    it: '\\u2062',\n    itilde: '\\u0129',\n    iukcy: '\\u0456',\n    iuml: '\\u00EF',\n    jcirc: '\\u0135',\n    jcy: '\\u0439',\n    jfr: '\\uD835\\uDD27',\n    jmath: '\\u0237',\n    jopf: '\\uD835\\uDD5B',\n    jscr: '\\uD835\\uDCBF',\n    jsercy: '\\u0458',\n    jukcy: '\\u0454',\n    kappa: '\\u03BA',\n    kappav: '\\u03F0',\n    kcedil: '\\u0137',\n    kcy: '\\u043A',\n    kfr: '\\uD835\\uDD28',\n    kgreen: '\\u0138',\n    khcy: '\\u0445',\n    kjcy: '\\u045C',\n    kopf: '\\uD835\\uDD5C',\n    kscr: '\\uD835\\uDCC0',\n    lAarr: '\\u21DA',\n    lArr: '\\u21D0',\n    lAtail: '\\u291B',\n    lBarr: '\\u290E',\n    lE: '\\u2266',\n    lEg: '\\u2A8B',\n    lHar: '\\u2962',\n    lacute: '\\u013A',\n    laemptyv: '\\u29B4',\n    lagran: '\\u2112',\n    lambda: '\\u03BB',\n    lang: '\\u27E8',\n    langd: '\\u2991',\n    langle: '\\u27E8',\n    lap: '\\u2A85',\n    laquo: '\\u00AB',\n    larr: '\\u2190',\n    larrb: '\\u21E4',\n    larrbfs: '\\u291F',\n    larrfs: '\\u291D',\n    larrhk: '\\u21A9',\n    larrlp: '\\u21AB',\n    larrpl: '\\u2939',\n    larrsim: '\\u2973',\n    larrtl: '\\u21A2',\n    lat: '\\u2AAB',\n    latail: '\\u2919',\n    late: '\\u2AAD',\n    lates: '\\u2AAD\\uFE00',\n    lbarr: '\\u290C',\n    lbbrk: '\\u2772',\n    lbrace: '\\u007B',\n    lbrack: '\\u005B',\n    lbrke: '\\u298B',\n    lbrksld: '\\u298F',\n    lbrkslu: '\\u298D',\n    lcaron: '\\u013E',\n    lcedil: '\\u013C',\n    lceil: '\\u2308',\n    lcub: '\\u007B',\n    lcy: '\\u043B',\n    ldca: '\\u2936',\n    ldquo: '\\u201C',\n    ldquor: '\\u201E',\n    ldrdhar: '\\u2967',\n    ldrushar: '\\u294B',\n    ldsh: '\\u21B2',\n    le: '\\u2264',\n    leftarrow: '\\u2190',\n    leftarrowtail: '\\u21A2',\n    leftharpoondown: '\\u21BD',\n    leftharpoonup: '\\u21BC',\n    leftleftarrows: '\\u21C7',\n    leftrightarrow: '\\u2194',\n    leftrightarrows: '\\u21C6',\n    leftrightharpoons: '\\u21CB',\n    leftrightsquigarrow: '\\u21AD',\n    leftthreetimes: '\\u22CB',\n    leg: '\\u22DA',\n    leq: '\\u2264',\n    leqq: '\\u2266',\n    leqslant: '\\u2A7D',\n    les: '\\u2A7D',\n    lescc: '\\u2AA8',\n    lesdot: '\\u2A7F',\n    lesdoto: '\\u2A81',\n    lesdotor: '\\u2A83',\n    lesg: '\\u22DA\\uFE00',\n    lesges: '\\u2A93',\n    lessapprox: '\\u2A85',\n    lessdot: '\\u22D6',\n    lesseqgtr: '\\u22DA',\n    lesseqqgtr: '\\u2A8B',\n    lessgtr: '\\u2276',\n    lesssim: '\\u2272',\n    lfisht: '\\u297C',\n    lfloor: '\\u230A',\n    lfr: '\\uD835\\uDD29',\n    lg: '\\u2276',\n    lgE: '\\u2A91',\n    lhard: '\\u21BD',\n    lharu: '\\u21BC',\n    lharul: '\\u296A',\n    lhblk: '\\u2584',\n    ljcy: '\\u0459',\n    ll: '\\u226A',\n    llarr: '\\u21C7',\n    llcorner: '\\u231E',\n    llhard: '\\u296B',\n    lltri: '\\u25FA',\n    lmidot: '\\u0140',\n    lmoust: '\\u23B0',\n    lmoustache: '\\u23B0',\n    lnE: '\\u2268',\n    lnap: '\\u2A89',\n    lnapprox: '\\u2A89',\n    lne: '\\u2A87',\n    lneq: '\\u2A87',\n    lneqq: '\\u2268',\n    lnsim: '\\u22E6',\n    loang: '\\u27EC',\n    loarr: '\\u21FD',\n    lobrk: '\\u27E6',\n    longleftarrow: '\\u27F5',\n    longleftrightarrow: '\\u27F7',\n    longmapsto: '\\u27FC',\n    longrightarrow: '\\u27F6',\n    looparrowleft: '\\u21AB',\n    looparrowright: '\\u21AC',\n    lopar: '\\u2985',\n    lopf: '\\uD835\\uDD5D',\n    loplus: '\\u2A2D',\n    lotimes: '\\u2A34',\n    lowast: '\\u2217',\n    lowbar: '\\u005F',\n    loz: '\\u25CA',\n    lozenge: '\\u25CA',\n    lozf: '\\u29EB',\n    lpar: '\\u0028',\n    lparlt: '\\u2993',\n    lrarr: '\\u21C6',\n    lrcorner: '\\u231F',\n    lrhar: '\\u21CB',\n    lrhard: '\\u296D',\n    lrm: '\\u200E',\n    lrtri: '\\u22BF',\n    lsaquo: '\\u2039',\n    lscr: '\\uD835\\uDCC1',\n    lsh: '\\u21B0',\n    lsim: '\\u2272',\n    lsime: '\\u2A8D',\n    lsimg: '\\u2A8F',\n    lsqb: '\\u005B',\n    lsquo: '\\u2018',\n    lsquor: '\\u201A',\n    lstrok: '\\u0142',\n    lt: '\\u003C',\n    ltcc: '\\u2AA6',\n    ltcir: '\\u2A79',\n    ltdot: '\\u22D6',\n    lthree: '\\u22CB',\n    ltimes: '\\u22C9',\n    ltlarr: '\\u2976',\n    ltquest: '\\u2A7B',\n    ltrPar: '\\u2996',\n    ltri: '\\u25C3',\n    ltrie: '\\u22B4',\n    ltrif: '\\u25C2',\n    lurdshar: '\\u294A',\n    luruhar: '\\u2966',\n    lvertneqq: '\\u2268\\uFE00',\n    lvnE: '\\u2268\\uFE00',\n    mDDot: '\\u223A',\n    macr: '\\u00AF',\n    male: '\\u2642',\n    malt: '\\u2720',\n    maltese: '\\u2720',\n    map: '\\u21A6',\n    mapsto: '\\u21A6',\n    mapstodown: '\\u21A7',\n    mapstoleft: '\\u21A4',\n    mapstoup: '\\u21A5',\n    marker: '\\u25AE',\n    mcomma: '\\u2A29',\n    mcy: '\\u043C',\n    mdash: '\\u2014',\n    measuredangle: '\\u2221',\n    mfr: '\\uD835\\uDD2A',\n    mho: '\\u2127',\n    micro: '\\u00B5',\n    mid: '\\u2223',\n    midast: '\\u002A',\n    midcir: '\\u2AF0',\n    middot: '\\u00B7',\n    minus: '\\u2212',\n    minusb: '\\u229F',\n    minusd: '\\u2238',\n    minusdu: '\\u2A2A',\n    mlcp: '\\u2ADB',\n    mldr: '\\u2026',\n    mnplus: '\\u2213',\n    models: '\\u22A7',\n    mopf: '\\uD835\\uDD5E',\n    mp: '\\u2213',\n    mscr: '\\uD835\\uDCC2',\n    mstpos: '\\u223E',\n    mu: '\\u03BC',\n    multimap: '\\u22B8',\n    mumap: '\\u22B8',\n    nGg: '\\u22D9\\u0338',\n    nGt: '\\u226B\\u20D2',\n    nGtv: '\\u226B\\u0338',\n    nLeftarrow: '\\u21CD',\n    nLeftrightarrow: '\\u21CE',\n    nLl: '\\u22D8\\u0338',\n    nLt: '\\u226A\\u20D2',\n    nLtv: '\\u226A\\u0338',\n    nRightarrow: '\\u21CF',\n    nVDash: '\\u22AF',\n    nVdash: '\\u22AE',\n    nabla: '\\u2207',\n    nacute: '\\u0144',\n    nang: '\\u2220\\u20D2',\n    nap: '\\u2249',\n    napE: '\\u2A70\\u0338',\n    napid: '\\u224B\\u0338',\n    napos: '\\u0149',\n    napprox: '\\u2249',\n    natur: '\\u266E',\n    natural: '\\u266E',\n    naturals: '\\u2115',\n    nbsp: '\\u00A0',\n    nbump: '\\u224E\\u0338',\n    nbumpe: '\\u224F\\u0338',\n    ncap: '\\u2A43',\n    ncaron: '\\u0148',\n    ncedil: '\\u0146',\n    ncong: '\\u2247',\n    ncongdot: '\\u2A6D\\u0338',\n    ncup: '\\u2A42',\n    ncy: '\\u043D',\n    ndash: '\\u2013',\n    ne: '\\u2260',\n    neArr: '\\u21D7',\n    nearhk: '\\u2924',\n    nearr: '\\u2197',\n    nearrow: '\\u2197',\n    nedot: '\\u2250\\u0338',\n    nequiv: '\\u2262',\n    nesear: '\\u2928',\n    nesim: '\\u2242\\u0338',\n    nexist: '\\u2204',\n    nexists: '\\u2204',\n    nfr: '\\uD835\\uDD2B',\n    ngE: '\\u2267\\u0338',\n    nge: '\\u2271',\n    ngeq: '\\u2271',\n    ngeqq: '\\u2267\\u0338',\n    ngeqslant: '\\u2A7E\\u0338',\n    nges: '\\u2A7E\\u0338',\n    ngsim: '\\u2275',\n    ngt: '\\u226F',\n    ngtr: '\\u226F',\n    nhArr: '\\u21CE',\n    nharr: '\\u21AE',\n    nhpar: '\\u2AF2',\n    ni: '\\u220B',\n    nis: '\\u22FC',\n    nisd: '\\u22FA',\n    niv: '\\u220B',\n    njcy: '\\u045A',\n    nlArr: '\\u21CD',\n    nlE: '\\u2266\\u0338',\n    nlarr: '\\u219A',\n    nldr: '\\u2025',\n    nle: '\\u2270',\n    nleftarrow: '\\u219A',\n    nleftrightarrow: '\\u21AE',\n    nleq: '\\u2270',\n    nleqq: '\\u2266\\u0338',\n    nleqslant: '\\u2A7D\\u0338',\n    nles: '\\u2A7D\\u0338',\n    nless: '\\u226E',\n    nlsim: '\\u2274',\n    nlt: '\\u226E',\n    nltri: '\\u22EA',\n    nltrie: '\\u22EC',\n    nmid: '\\u2224',\n    nopf: '\\uD835\\uDD5F',\n    not: '\\u00AC',\n    notin: '\\u2209',\n    notinE: '\\u22F9\\u0338',\n    notindot: '\\u22F5\\u0338',\n    notinva: '\\u2209',\n    notinvb: '\\u22F7',\n    notinvc: '\\u22F6',\n    notni: '\\u220C',\n    notniva: '\\u220C',\n    notnivb: '\\u22FE',\n    notnivc: '\\u22FD',\n    npar: '\\u2226',\n    nparallel: '\\u2226',\n    nparsl: '\\u2AFD\\u20E5',\n    npart: '\\u2202\\u0338',\n    npolint: '\\u2A14',\n    npr: '\\u2280',\n    nprcue: '\\u22E0',\n    npre: '\\u2AAF\\u0338',\n    nprec: '\\u2280',\n    npreceq: '\\u2AAF\\u0338',\n    nrArr: '\\u21CF',\n    nrarr: '\\u219B',\n    nrarrc: '\\u2933\\u0338',\n    nrarrw: '\\u219D\\u0338',\n    nrightarrow: '\\u219B',\n    nrtri: '\\u22EB',\n    nrtrie: '\\u22ED',\n    nsc: '\\u2281',\n    nsccue: '\\u22E1',\n    nsce: '\\u2AB0\\u0338',\n    nscr: '\\uD835\\uDCC3',\n    nshortmid: '\\u2224',\n    nshortparallel: '\\u2226',\n    nsim: '\\u2241',\n    nsime: '\\u2244',\n    nsimeq: '\\u2244',\n    nsmid: '\\u2224',\n    nspar: '\\u2226',\n    nsqsube: '\\u22E2',\n    nsqsupe: '\\u22E3',\n    nsub: '\\u2284',\n    nsubE: '\\u2AC5\\u0338',\n    nsube: '\\u2288',\n    nsubset: '\\u2282\\u20D2',\n    nsubseteq: '\\u2288',\n    nsubseteqq: '\\u2AC5\\u0338',\n    nsucc: '\\u2281',\n    nsucceq: '\\u2AB0\\u0338',\n    nsup: '\\u2285',\n    nsupE: '\\u2AC6\\u0338',\n    nsupe: '\\u2289',\n    nsupset: '\\u2283\\u20D2',\n    nsupseteq: '\\u2289',\n    nsupseteqq: '\\u2AC6\\u0338',\n    ntgl: '\\u2279',\n    ntilde: '\\u00F1',\n    ntlg: '\\u2278',\n    ntriangleleft: '\\u22EA',\n    ntrianglelefteq: '\\u22EC',\n    ntriangleright: '\\u22EB',\n    ntrianglerighteq: '\\u22ED',\n    nu: '\\u03BD',\n    num: '\\u0023',\n    numero: '\\u2116',\n    numsp: '\\u2007',\n    nvDash: '\\u22AD',\n    nvHarr: '\\u2904',\n    nvap: '\\u224D\\u20D2',\n    nvdash: '\\u22AC',\n    nvge: '\\u2265\\u20D2',\n    nvgt: '\\u003E\\u20D2',\n    nvinfin: '\\u29DE',\n    nvlArr: '\\u2902',\n    nvle: '\\u2264\\u20D2',\n    nvlt: '\\u003C\\u20D2',\n    nvltrie: '\\u22B4\\u20D2',\n    nvrArr: '\\u2903',\n    nvrtrie: '\\u22B5\\u20D2',\n    nvsim: '\\u223C\\u20D2',\n    nwArr: '\\u21D6',\n    nwarhk: '\\u2923',\n    nwarr: '\\u2196',\n    nwarrow: '\\u2196',\n    nwnear: '\\u2927',\n    oS: '\\u24C8',\n    oacute: '\\u00F3',\n    oast: '\\u229B',\n    ocir: '\\u229A',\n    ocirc: '\\u00F4',\n    ocy: '\\u043E',\n    odash: '\\u229D',\n    odblac: '\\u0151',\n    odiv: '\\u2A38',\n    odot: '\\u2299',\n    odsold: '\\u29BC',\n    oelig: '\\u0153',\n    ofcir: '\\u29BF',\n    ofr: '\\uD835\\uDD2C',\n    ogon: '\\u02DB',\n    ograve: '\\u00F2',\n    ogt: '\\u29C1',\n    ohbar: '\\u29B5',\n    ohm: '\\u03A9',\n    oint: '\\u222E',\n    olarr: '\\u21BA',\n    olcir: '\\u29BE',\n    olcross: '\\u29BB',\n    oline: '\\u203E',\n    olt: '\\u29C0',\n    omacr: '\\u014D',\n    omega: '\\u03C9',\n    omicron: '\\u03BF',\n    omid: '\\u29B6',\n    ominus: '\\u2296',\n    oopf: '\\uD835\\uDD60',\n    opar: '\\u29B7',\n    operp: '\\u29B9',\n    oplus: '\\u2295',\n    or: '\\u2228',\n    orarr: '\\u21BB',\n    ord: '\\u2A5D',\n    order: '\\u2134',\n    orderof: '\\u2134',\n    ordf: '\\u00AA',\n    ordm: '\\u00BA',\n    origof: '\\u22B6',\n    oror: '\\u2A56',\n    orslope: '\\u2A57',\n    orv: '\\u2A5B',\n    oscr: '\\u2134',\n    oslash: '\\u00F8',\n    osol: '\\u2298',\n    otilde: '\\u00F5',\n    otimes: '\\u2297',\n    otimesas: '\\u2A36',\n    ouml: '\\u00F6',\n    ovbar: '\\u233D',\n    par: '\\u2225',\n    para: '\\u00B6',\n    parallel: '\\u2225',\n    parsim: '\\u2AF3',\n    parsl: '\\u2AFD',\n    part: '\\u2202',\n    pcy: '\\u043F',\n    percnt: '\\u0025',\n    period: '\\u002E',\n    permil: '\\u2030',\n    perp: '\\u22A5',\n    pertenk: '\\u2031',\n    pfr: '\\uD835\\uDD2D',\n    phi: '\\u03C6',\n    phiv: '\\u03D5',\n    phmmat: '\\u2133',\n    phone: '\\u260E',\n    pi: '\\u03C0',\n    pitchfork: '\\u22D4',\n    piv: '\\u03D6',\n    planck: '\\u210F',\n    planckh: '\\u210E',\n    plankv: '\\u210F',\n    plus: '\\u002B',\n    plusacir: '\\u2A23',\n    plusb: '\\u229E',\n    pluscir: '\\u2A22',\n    plusdo: '\\u2214',\n    plusdu: '\\u2A25',\n    pluse: '\\u2A72',\n    plusmn: '\\u00B1',\n    plussim: '\\u2A26',\n    plustwo: '\\u2A27',\n    pm: '\\u00B1',\n    pointint: '\\u2A15',\n    popf: '\\uD835\\uDD61',\n    pound: '\\u00A3',\n    pr: '\\u227A',\n    prE: '\\u2AB3',\n    prap: '\\u2AB7',\n    prcue: '\\u227C',\n    pre: '\\u2AAF',\n    prec: '\\u227A',\n    precapprox: '\\u2AB7',\n    preccurlyeq: '\\u227C',\n    preceq: '\\u2AAF',\n    precnapprox: '\\u2AB9',\n    precneqq: '\\u2AB5',\n    precnsim: '\\u22E8',\n    precsim: '\\u227E',\n    prime: '\\u2032',\n    primes: '\\u2119',\n    prnE: '\\u2AB5',\n    prnap: '\\u2AB9',\n    prnsim: '\\u22E8',\n    prod: '\\u220F',\n    profalar: '\\u232E',\n    profline: '\\u2312',\n    profsurf: '\\u2313',\n    prop: '\\u221D',\n    propto: '\\u221D',\n    prsim: '\\u227E',\n    prurel: '\\u22B0',\n    pscr: '\\uD835\\uDCC5',\n    psi: '\\u03C8',\n    puncsp: '\\u2008',\n    qfr: '\\uD835\\uDD2E',\n    qint: '\\u2A0C',\n    qopf: '\\uD835\\uDD62',\n    qprime: '\\u2057',\n    qscr: '\\uD835\\uDCC6',\n    quaternions: '\\u210D',\n    quatint: '\\u2A16',\n    quest: '\\u003F',\n    questeq: '\\u225F',\n    quot: '\\u0022',\n    rAarr: '\\u21DB',\n    rArr: '\\u21D2',\n    rAtail: '\\u291C',\n    rBarr: '\\u290F',\n    rHar: '\\u2964',\n    race: '\\u223D\\u0331',\n    racute: '\\u0155',\n    radic: '\\u221A',\n    raemptyv: '\\u29B3',\n    rang: '\\u27E9',\n    rangd: '\\u2992',\n    range: '\\u29A5',\n    rangle: '\\u27E9',\n    raquo: '\\u00BB',\n    rarr: '\\u2192',\n    rarrap: '\\u2975',\n    rarrb: '\\u21E5',\n    rarrbfs: '\\u2920',\n    rarrc: '\\u2933',\n    rarrfs: '\\u291E',\n    rarrhk: '\\u21AA',\n    rarrlp: '\\u21AC',\n    rarrpl: '\\u2945',\n    rarrsim: '\\u2974',\n    rarrtl: '\\u21A3',\n    rarrw: '\\u219D',\n    ratail: '\\u291A',\n    ratio: '\\u2236',\n    rationals: '\\u211A',\n    rbarr: '\\u290D',\n    rbbrk: '\\u2773',\n    rbrace: '\\u007D',\n    rbrack: '\\u005D',\n    rbrke: '\\u298C',\n    rbrksld: '\\u298E',\n    rbrkslu: '\\u2990',\n    rcaron: '\\u0159',\n    rcedil: '\\u0157',\n    rceil: '\\u2309',\n    rcub: '\\u007D',\n    rcy: '\\u0440',\n    rdca: '\\u2937',\n    rdldhar: '\\u2969',\n    rdquo: '\\u201D',\n    rdquor: '\\u201D',\n    rdsh: '\\u21B3',\n    real: '\\u211C',\n    realine: '\\u211B',\n    realpart: '\\u211C',\n    reals: '\\u211D',\n    rect: '\\u25AD',\n    reg: '\\u00AE',\n    rfisht: '\\u297D',\n    rfloor: '\\u230B',\n    rfr: '\\uD835\\uDD2F',\n    rhard: '\\u21C1',\n    rharu: '\\u21C0',\n    rharul: '\\u296C',\n    rho: '\\u03C1',\n    rhov: '\\u03F1',\n    rightarrow: '\\u2192',\n    rightarrowtail: '\\u21A3',\n    rightharpoondown: '\\u21C1',\n    rightharpoonup: '\\u21C0',\n    rightleftarrows: '\\u21C4',\n    rightleftharpoons: '\\u21CC',\n    rightrightarrows: '\\u21C9',\n    rightsquigarrow: '\\u219D',\n    rightthreetimes: '\\u22CC',\n    ring: '\\u02DA',\n    risingdotseq: '\\u2253',\n    rlarr: '\\u21C4',\n    rlhar: '\\u21CC',\n    rlm: '\\u200F',\n    rmoust: '\\u23B1',\n    rmoustache: '\\u23B1',\n    rnmid: '\\u2AEE',\n    roang: '\\u27ED',\n    roarr: '\\u21FE',\n    robrk: '\\u27E7',\n    ropar: '\\u2986',\n    ropf: '\\uD835\\uDD63',\n    roplus: '\\u2A2E',\n    rotimes: '\\u2A35',\n    rpar: '\\u0029',\n    rpargt: '\\u2994',\n    rppolint: '\\u2A12',\n    rrarr: '\\u21C9',\n    rsaquo: '\\u203A',\n    rscr: '\\uD835\\uDCC7',\n    rsh: '\\u21B1',\n    rsqb: '\\u005D',\n    rsquo: '\\u2019',\n    rsquor: '\\u2019',\n    rthree: '\\u22CC',\n    rtimes: '\\u22CA',\n    rtri: '\\u25B9',\n    rtrie: '\\u22B5',\n    rtrif: '\\u25B8',\n    rtriltri: '\\u29CE',\n    ruluhar: '\\u2968',\n    rx: '\\u211E',\n    sacute: '\\u015B',\n    sbquo: '\\u201A',\n    sc: '\\u227B',\n    scE: '\\u2AB4',\n    scap: '\\u2AB8',\n    scaron: '\\u0161',\n    sccue: '\\u227D',\n    sce: '\\u2AB0',\n    scedil: '\\u015F',\n    scirc: '\\u015D',\n    scnE: '\\u2AB6',\n    scnap: '\\u2ABA',\n    scnsim: '\\u22E9',\n    scpolint: '\\u2A13',\n    scsim: '\\u227F',\n    scy: '\\u0441',\n    sdot: '\\u22C5',\n    sdotb: '\\u22A1',\n    sdote: '\\u2A66',\n    seArr: '\\u21D8',\n    searhk: '\\u2925',\n    searr: '\\u2198',\n    searrow: '\\u2198',\n    sect: '\\u00A7',\n    semi: '\\u003B',\n    seswar: '\\u2929',\n    setminus: '\\u2216',\n    setmn: '\\u2216',\n    sext: '\\u2736',\n    sfr: '\\uD835\\uDD30',\n    sfrown: '\\u2322',\n    sharp: '\\u266F',\n    shchcy: '\\u0449',\n    shcy: '\\u0448',\n    shortmid: '\\u2223',\n    shortparallel: '\\u2225',\n    shy: '\\u00AD',\n    sigma: '\\u03C3',\n    sigmaf: '\\u03C2',\n    sigmav: '\\u03C2',\n    sim: '\\u223C',\n    simdot: '\\u2A6A',\n    sime: '\\u2243',\n    simeq: '\\u2243',\n    simg: '\\u2A9E',\n    simgE: '\\u2AA0',\n    siml: '\\u2A9D',\n    simlE: '\\u2A9F',\n    simne: '\\u2246',\n    simplus: '\\u2A24',\n    simrarr: '\\u2972',\n    slarr: '\\u2190',\n    smallsetminus: '\\u2216',\n    smashp: '\\u2A33',\n    smeparsl: '\\u29E4',\n    smid: '\\u2223',\n    smile: '\\u2323',\n    smt: '\\u2AAA',\n    smte: '\\u2AAC',\n    smtes: '\\u2AAC\\uFE00',\n    softcy: '\\u044C',\n    sol: '\\u002F',\n    solb: '\\u29C4',\n    solbar: '\\u233F',\n    sopf: '\\uD835\\uDD64',\n    spades: '\\u2660',\n    spadesuit: '\\u2660',\n    spar: '\\u2225',\n    sqcap: '\\u2293',\n    sqcaps: '\\u2293\\uFE00',\n    sqcup: '\\u2294',\n    sqcups: '\\u2294\\uFE00',\n    sqsub: '\\u228F',\n    sqsube: '\\u2291',\n    sqsubset: '\\u228F',\n    sqsubseteq: '\\u2291',\n    sqsup: '\\u2290',\n    sqsupe: '\\u2292',\n    sqsupset: '\\u2290',\n    sqsupseteq: '\\u2292',\n    squ: '\\u25A1',\n    square: '\\u25A1',\n    squarf: '\\u25AA',\n    squf: '\\u25AA',\n    srarr: '\\u2192',\n    sscr: '\\uD835\\uDCC8',\n    ssetmn: '\\u2216',\n    ssmile: '\\u2323',\n    sstarf: '\\u22C6',\n    star: '\\u2606',\n    starf: '\\u2605',\n    straightepsilon: '\\u03F5',\n    straightphi: '\\u03D5',\n    strns: '\\u00AF',\n    sub: '\\u2282',\n    subE: '\\u2AC5',\n    subdot: '\\u2ABD',\n    sube: '\\u2286',\n    subedot: '\\u2AC3',\n    submult: '\\u2AC1',\n    subnE: '\\u2ACB',\n    subne: '\\u228A',\n    subplus: '\\u2ABF',\n    subrarr: '\\u2979',\n    subset: '\\u2282',\n    subseteq: '\\u2286',\n    subseteqq: '\\u2AC5',\n    subsetneq: '\\u228A',\n    subsetneqq: '\\u2ACB',\n    subsim: '\\u2AC7',\n    subsub: '\\u2AD5',\n    subsup: '\\u2AD3',\n    succ: '\\u227B',\n    succapprox: '\\u2AB8',\n    succcurlyeq: '\\u227D',\n    succeq: '\\u2AB0',\n    succnapprox: '\\u2ABA',\n    succneqq: '\\u2AB6',\n    succnsim: '\\u22E9',\n    succsim: '\\u227F',\n    sum: '\\u2211',\n    sung: '\\u266A',\n    sup1: '\\u00B9',\n    sup2: '\\u00B2',\n    sup3: '\\u00B3',\n    sup: '\\u2283',\n    supE: '\\u2AC6',\n    supdot: '\\u2ABE',\n    supdsub: '\\u2AD8',\n    supe: '\\u2287',\n    supedot: '\\u2AC4',\n    suphsol: '\\u27C9',\n    suphsub: '\\u2AD7',\n    suplarr: '\\u297B',\n    supmult: '\\u2AC2',\n    supnE: '\\u2ACC',\n    supne: '\\u228B',\n    supplus: '\\u2AC0',\n    supset: '\\u2283',\n    supseteq: '\\u2287',\n    supseteqq: '\\u2AC6',\n    supsetneq: '\\u228B',\n    supsetneqq: '\\u2ACC',\n    supsim: '\\u2AC8',\n    supsub: '\\u2AD4',\n    supsup: '\\u2AD6',\n    swArr: '\\u21D9',\n    swarhk: '\\u2926',\n    swarr: '\\u2199',\n    swarrow: '\\u2199',\n    swnwar: '\\u292A',\n    szlig: '\\u00DF',\n    target: '\\u2316',\n    tau: '\\u03C4',\n    tbrk: '\\u23B4',\n    tcaron: '\\u0165',\n    tcedil: '\\u0163',\n    tcy: '\\u0442',\n    tdot: '\\u20DB',\n    telrec: '\\u2315',\n    tfr: '\\uD835\\uDD31',\n    there4: '\\u2234',\n    therefore: '\\u2234',\n    theta: '\\u03B8',\n    thetasym: '\\u03D1',\n    thetav: '\\u03D1',\n    thickapprox: '\\u2248',\n    thicksim: '\\u223C',\n    thinsp: '\\u2009',\n    thkap: '\\u2248',\n    thksim: '\\u223C',\n    thorn: '\\u00FE',\n    tilde: '\\u02DC',\n    times: '\\u00D7',\n    timesb: '\\u22A0',\n    timesbar: '\\u2A31',\n    timesd: '\\u2A30',\n    tint: '\\u222D',\n    toea: '\\u2928',\n    top: '\\u22A4',\n    topbot: '\\u2336',\n    topcir: '\\u2AF1',\n    topf: '\\uD835\\uDD65',\n    topfork: '\\u2ADA',\n    tosa: '\\u2929',\n    tprime: '\\u2034',\n    trade: '\\u2122',\n    triangle: '\\u25B5',\n    triangledown: '\\u25BF',\n    triangleleft: '\\u25C3',\n    trianglelefteq: '\\u22B4',\n    triangleq: '\\u225C',\n    triangleright: '\\u25B9',\n    trianglerighteq: '\\u22B5',\n    tridot: '\\u25EC',\n    trie: '\\u225C',\n    triminus: '\\u2A3A',\n    triplus: '\\u2A39',\n    trisb: '\\u29CD',\n    tritime: '\\u2A3B',\n    trpezium: '\\u23E2',\n    tscr: '\\uD835\\uDCC9',\n    tscy: '\\u0446',\n    tshcy: '\\u045B',\n    tstrok: '\\u0167',\n    twixt: '\\u226C',\n    twoheadleftarrow: '\\u219E',\n    twoheadrightarrow: '\\u21A0',\n    uArr: '\\u21D1',\n    uHar: '\\u2963',\n    uacute: '\\u00FA',\n    uarr: '\\u2191',\n    ubrcy: '\\u045E',\n    ubreve: '\\u016D',\n    ucirc: '\\u00FB',\n    ucy: '\\u0443',\n    udarr: '\\u21C5',\n    udblac: '\\u0171',\n    udhar: '\\u296E',\n    ufisht: '\\u297E',\n    ufr: '\\uD835\\uDD32',\n    ugrave: '\\u00F9',\n    uharl: '\\u21BF',\n    uharr: '\\u21BE',\n    uhblk: '\\u2580',\n    ulcorn: '\\u231C',\n    ulcorner: '\\u231C',\n    ulcrop: '\\u230F',\n    ultri: '\\u25F8',\n    umacr: '\\u016B',\n    uml: '\\u00A8',\n    uogon: '\\u0173',\n    uopf: '\\uD835\\uDD66',\n    uparrow: '\\u2191',\n    updownarrow: '\\u2195',\n    upharpoonleft: '\\u21BF',\n    upharpoonright: '\\u21BE',\n    uplus: '\\u228E',\n    upsi: '\\u03C5',\n    upsih: '\\u03D2',\n    upsilon: '\\u03C5',\n    upuparrows: '\\u21C8',\n    urcorn: '\\u231D',\n    urcorner: '\\u231D',\n    urcrop: '\\u230E',\n    uring: '\\u016F',\n    urtri: '\\u25F9',\n    uscr: '\\uD835\\uDCCA',\n    utdot: '\\u22F0',\n    utilde: '\\u0169',\n    utri: '\\u25B5',\n    utrif: '\\u25B4',\n    uuarr: '\\u21C8',\n    uuml: '\\u00FC',\n    uwangle: '\\u29A7',\n    vArr: '\\u21D5',\n    vBar: '\\u2AE8',\n    vBarv: '\\u2AE9',\n    vDash: '\\u22A8',\n    vangrt: '\\u299C',\n    varepsilon: '\\u03F5',\n    varkappa: '\\u03F0',\n    varnothing: '\\u2205',\n    varphi: '\\u03D5',\n    varpi: '\\u03D6',\n    varpropto: '\\u221D',\n    varr: '\\u2195',\n    varrho: '\\u03F1',\n    varsigma: '\\u03C2',\n    varsubsetneq: '\\u228A\\uFE00',\n    varsubsetneqq: '\\u2ACB\\uFE00',\n    varsupsetneq: '\\u228B\\uFE00',\n    varsupsetneqq: '\\u2ACC\\uFE00',\n    vartheta: '\\u03D1',\n    vartriangleleft: '\\u22B2',\n    vartriangleright: '\\u22B3',\n    vcy: '\\u0432',\n    vdash: '\\u22A2',\n    vee: '\\u2228',\n    veebar: '\\u22BB',\n    veeeq: '\\u225A',\n    vellip: '\\u22EE',\n    verbar: '\\u007C',\n    vert: '\\u007C',\n    vfr: '\\uD835\\uDD33',\n    vltri: '\\u22B2',\n    vnsub: '\\u2282\\u20D2',\n    vnsup: '\\u2283\\u20D2',\n    vopf: '\\uD835\\uDD67',\n    vprop: '\\u221D',\n    vrtri: '\\u22B3',\n    vscr: '\\uD835\\uDCCB',\n    vsubnE: '\\u2ACB\\uFE00',\n    vsubne: '\\u228A\\uFE00',\n    vsupnE: '\\u2ACC\\uFE00',\n    vsupne: '\\u228B\\uFE00',\n    vzigzag: '\\u299A',\n    wcirc: '\\u0175',\n    wedbar: '\\u2A5F',\n    wedge: '\\u2227',\n    wedgeq: '\\u2259',\n    weierp: '\\u2118',\n    wfr: '\\uD835\\uDD34',\n    wopf: '\\uD835\\uDD68',\n    wp: '\\u2118',\n    wr: '\\u2240',\n    wreath: '\\u2240',\n    wscr: '\\uD835\\uDCCC',\n    xcap: '\\u22C2',\n    xcirc: '\\u25EF',\n    xcup: '\\u22C3',\n    xdtri: '\\u25BD',\n    xfr: '\\uD835\\uDD35',\n    xhArr: '\\u27FA',\n    xharr: '\\u27F7',\n    xi: '\\u03BE',\n    xlArr: '\\u27F8',\n    xlarr: '\\u27F5',\n    xmap: '\\u27FC',\n    xnis: '\\u22FB',\n    xodot: '\\u2A00',\n    xopf: '\\uD835\\uDD69',\n    xoplus: '\\u2A01',\n    xotime: '\\u2A02',\n    xrArr: '\\u27F9',\n    xrarr: '\\u27F6',\n    xscr: '\\uD835\\uDCCD',\n    xsqcup: '\\u2A06',\n    xuplus: '\\u2A04',\n    xutri: '\\u25B3',\n    xvee: '\\u22C1',\n    xwedge: '\\u22C0',\n    yacute: '\\u00FD',\n    yacy: '\\u044F',\n    ycirc: '\\u0177',\n    ycy: '\\u044B',\n    yen: '\\u00A5',\n    yfr: '\\uD835\\uDD36',\n    yicy: '\\u0457',\n    yopf: '\\uD835\\uDD6A',\n    yscr: '\\uD835\\uDCCE',\n    yucy: '\\u044E',\n    yuml: '\\u00FF',\n    zacute: '\\u017A',\n    zcaron: '\\u017E',\n    zcy: '\\u0437',\n    zdot: '\\u017C',\n    zeetrf: '\\u2128',\n    zeta: '\\u03B6',\n    zfr: '\\uD835\\uDD37',\n    zhcy: '\\u0436',\n    zigrarr: '\\u21DD',\n    zopf: '\\uD835\\uDD6B',\n    zscr: '\\uD835\\uDCCF',\n    zwj: '\\u200D',\n    zwnj: '\\u200C',\n};\nconst decodeMap = {\n    '0': 65533,\n    '128': 8364,\n    '130': 8218,\n    '131': 402,\n    '132': 8222,\n    '133': 8230,\n    '134': 8224,\n    '135': 8225,\n    '136': 710,\n    '137': 8240,\n    '138': 352,\n    '139': 8249,\n    '140': 338,\n    '142': 381,\n    '145': 8216,\n    '146': 8217,\n    '147': 8220,\n    '148': 8221,\n    '149': 8226,\n    '150': 8211,\n    '151': 8212,\n    '152': 732,\n    '153': 8482,\n    '154': 353,\n    '155': 8250,\n    '156': 339,\n    '158': 382,\n    '159': 376,\n};\nfunction decodeHTMLStrict(text) {\n    return text.replace(/&(?:[a-zA-Z]+|#[xX][\\da-fA-F]+|#\\d+);/g, (key) => {\n        if (key.charAt(1) === '#') {\n            const secondChar = key.charAt(2);\n            const codePoint = secondChar === 'X' || secondChar === 'x' ? parseInt(key.slice(3), 16) : parseInt(key.slice(2), 10);\n            return decodeCodePoint(codePoint);\n        }\n        return entities[key.slice(1, -1)] || key;\n    });\n}\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return '\\uFFFD';\n    }\n    if (codePoint in decodeMap) {\n        codePoint = decodeMap[codePoint];\n    }\n    return String.fromCodePoint(codePoint);\n}\n\nfunction scanJSXAttributeValue(parser, context) {\n    parser.startIndex = parser.tokenIndex = parser.index;\n    parser.startColumn = parser.tokenColumn = parser.column;\n    parser.startLine = parser.tokenLine = parser.line;\n    parser.setToken(CharTypes[parser.currentChar] & 8192\n        ? scanJSXString(parser, context)\n        : scanSingleToken(parser, context, 0));\n    return parser.getToken();\n}\nfunction scanJSXString(parser, context) {\n    const quote = parser.currentChar;\n    let char = advanceChar(parser);\n    const start = parser.index;\n    while (char !== quote) {\n        if (parser.index >= parser.end)\n            report(parser, 16);\n        char = advanceChar(parser);\n    }\n    if (char !== quote)\n        report(parser, 16);\n    parser.tokenValue = parser.source.slice(start, parser.index);\n    advanceChar(parser);\n    if (context & 128)\n        parser.tokenRaw = parser.source.slice(parser.tokenIndex, parser.index);\n    return 134283267;\n}\nfunction nextJSXToken(parser, context) {\n    parser.startIndex = parser.tokenIndex = parser.index;\n    parser.startColumn = parser.tokenColumn = parser.column;\n    parser.startLine = parser.tokenLine = parser.line;\n    if (parser.index >= parser.end) {\n        parser.setToken(1048576);\n        return;\n    }\n    if (parser.currentChar === 60) {\n        advanceChar(parser);\n        parser.setToken(8456256);\n        return;\n    }\n    if (parser.currentChar === 123) {\n        advanceChar(parser);\n        parser.setToken(2162700);\n        return;\n    }\n    let state = 0;\n    while (parser.index < parser.end) {\n        const type = CharTypes[parser.source.charCodeAt(parser.index)];\n        if (type & 1024) {\n            state |= 1 | 4;\n            scanNewLine(parser);\n        }\n        else if (type & 2048) {\n            consumeLineFeed(parser, state);\n            state = (state & -5) | 1;\n        }\n        else {\n            advanceChar(parser);\n        }\n        if (CharTypes[parser.currentChar] & 16384)\n            break;\n    }\n    if (parser.tokenIndex === parser.index)\n        report(parser, 0);\n    const raw = parser.source.slice(parser.tokenIndex, parser.index);\n    if (context & 128)\n        parser.tokenRaw = raw;\n    parser.tokenValue = decodeHTMLStrict(raw);\n    parser.setToken(137);\n}\nfunction rescanJSXIdentifier(parser) {\n    if ((parser.getToken() & 143360) === 143360) {\n        const { index } = parser;\n        let char = parser.currentChar;\n        while (CharTypes[char] & (32768 | 2)) {\n            char = advanceChar(parser);\n        }\n        parser.tokenValue += parser.source.slice(index, parser.index);\n        parser.setToken(208897, true);\n    }\n    return parser.getToken();\n}\n\nfunction matchOrInsertSemicolon(parser, context) {\n    if ((parser.flags & 1) === 0 && (parser.getToken() & 1048576) !== 1048576) {\n        report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    if (!consumeOpt(parser, context, 1074790417)) {\n        parser.options.onInsertedSemicolon?.(parser.startIndex);\n    }\n}\nfunction isValidStrictMode(parser, index, tokenIndex, tokenValue) {\n    if (index - tokenIndex < 13 && tokenValue === 'use strict') {\n        if ((parser.getToken() & 1048576) === 1048576 || parser.flags & 1) {\n            return 1;\n        }\n    }\n    return 0;\n}\nfunction optionalBit(parser, context, t) {\n    if (parser.getToken() !== t)\n        return 0;\n    nextToken(parser, context);\n    return 1;\n}\nfunction consumeOpt(parser, context, t) {\n    if (parser.getToken() !== t)\n        return false;\n    nextToken(parser, context);\n    return true;\n}\nfunction consume(parser, context, t) {\n    if (parser.getToken() !== t)\n        report(parser, 25, KeywordDescTable[t & 255]);\n    nextToken(parser, context);\n}\nfunction reinterpretToPattern(state, node) {\n    switch (node.type) {\n        case 'ArrayExpression': {\n            node.type = 'ArrayPattern';\n            const { elements } = node;\n            for (let i = 0, n = elements.length; i < n; ++i) {\n                const element = elements[i];\n                if (element)\n                    reinterpretToPattern(state, element);\n            }\n            return;\n        }\n        case 'ObjectExpression': {\n            node.type = 'ObjectPattern';\n            const { properties } = node;\n            for (let i = 0, n = properties.length; i < n; ++i) {\n                reinterpretToPattern(state, properties[i]);\n            }\n            return;\n        }\n        case 'AssignmentExpression':\n            node.type = 'AssignmentPattern';\n            if (node.operator !== '=')\n                report(state, 71);\n            delete node.operator;\n            reinterpretToPattern(state, node.left);\n            return;\n        case 'Property':\n            reinterpretToPattern(state, node.value);\n            return;\n        case 'SpreadElement':\n            node.type = 'RestElement';\n            reinterpretToPattern(state, node.argument);\n    }\n}\nfunction validateBindingIdentifier(parser, context, kind, t, skipEvalArgCheck) {\n    if (context & 256) {\n        if ((t & 36864) === 36864) {\n            report(parser, 118);\n        }\n        if (!skipEvalArgCheck && (t & 537079808) === 537079808) {\n            report(parser, 119);\n        }\n    }\n    if ((t & 20480) === 20480 || t === -2147483528) {\n        report(parser, 102);\n    }\n    if (kind & (8 | 16) && (t & 255) === (241737 & 255)) {\n        report(parser, 100);\n    }\n    if (context & (524288 | 512) && t === 209006) {\n        report(parser, 110);\n    }\n    if (context & (262144 | 256) && t === 241771) {\n        report(parser, 97, 'yield');\n    }\n}\nfunction validateFunctionName(parser, context, t) {\n    if (context & 256) {\n        if ((t & 36864) === 36864) {\n            report(parser, 118);\n        }\n        if ((t & 537079808) === 537079808) {\n            report(parser, 119);\n        }\n        if (t === -2147483527) {\n            report(parser, 95);\n        }\n        if (t === -2147483528) {\n            report(parser, 95);\n        }\n    }\n    if ((t & 20480) === 20480) {\n        report(parser, 102);\n    }\n    if (context & (524288 | 512) && t === 209006) {\n        report(parser, 110);\n    }\n    if (context & (262144 | 256) && t === 241771) {\n        report(parser, 97, 'yield');\n    }\n}\nfunction isStrictReservedWord(parser, context, t) {\n    if (t === 209006) {\n        if (context & (524288 | 512))\n            report(parser, 110);\n        parser.destructible |= 128;\n    }\n    if (t === 241771 && context & 262144)\n        report(parser, 97, 'yield');\n    return ((t & 20480) === 20480 ||\n        (t & 36864) === 36864 ||\n        t == -2147483527);\n}\nfunction isPropertyWithPrivateFieldKey(expr) {\n    return !expr.property ? false : expr.property.type === 'PrivateIdentifier';\n}\nfunction isValidLabel(parser, labels, name, isIterationStatement) {\n    while (labels) {\n        if (labels['$' + name]) {\n            if (isIterationStatement)\n                report(parser, 137);\n            return 1;\n        }\n        if (isIterationStatement && labels.loop)\n            isIterationStatement = 0;\n        labels = labels['$'];\n    }\n    return 0;\n}\nfunction validateAndDeclareLabel(parser, labels, name) {\n    let set = labels;\n    while (set) {\n        if (set['$' + name])\n            report(parser, 136, name);\n        set = set['$'];\n    }\n    labels['$' + name] = 1;\n}\nfunction isEqualTagName(elementName) {\n    switch (elementName.type) {\n        case 'JSXIdentifier':\n            return elementName.name;\n        case 'JSXNamespacedName':\n            return elementName.namespace + ':' + elementName.name;\n        case 'JSXMemberExpression':\n            return isEqualTagName(elementName.object) + '.' + isEqualTagName(elementName.property);\n    }\n}\nfunction createArrowHeadParsingScope(parser, context, value) {\n    const scope = addChildScope(createScope(), 1024);\n    addBlockName(parser, context, scope, value, 1, 0);\n    return scope;\n}\nfunction recordScopeError(parser, type, ...params) {\n    return {\n        type,\n        params,\n        start: parser.tokenStart,\n        end: parser.currentLocation,\n    };\n}\nfunction createScope() {\n    return {\n        parent: void 0,\n        type: 2,\n    };\n}\nfunction addChildScope(parent, type) {\n    return {\n        parent,\n        type,\n        scopeError: void 0,\n    };\n}\nfunction addChildPrivateScope(parent) {\n    return {\n        parent,\n        refs: Object.create(null),\n    };\n}\nfunction addVarOrBlock(parser, context, scope, name, kind, origin) {\n    if (kind & 4) {\n        addVarName(parser, context, scope, name, kind);\n    }\n    else {\n        addBlockName(parser, context, scope, name, kind, origin);\n    }\n    if (origin & 64) {\n        declareUnboundVariable(parser, name);\n    }\n}\nfunction addBlockName(parser, context, scope, name, kind, origin) {\n    const value = scope['#' + name];\n    if (value && (value & 2) === 0) {\n        if (kind & 1) {\n            scope.scopeError = recordScopeError(parser, 145, name);\n        }\n        else if (context & 64 &&\n            (context & 256) === 0 &&\n            origin & 2 &&\n            value === 64 &&\n            kind === 64) ;\n        else {\n            report(parser, 145, name);\n        }\n    }\n    if (scope.type & 128 &&\n        scope.parent['#' + name] &&\n        (scope.parent['#' + name] & 2) === 0) {\n        report(parser, 145, name);\n    }\n    if (scope.type & 1024 && value && (value & 2) === 0) {\n        if (kind & 1) {\n            scope.scopeError = recordScopeError(parser, 145, name);\n        }\n    }\n    if (scope.type & 64) {\n        if (scope.parent['#' + name] & 768)\n            report(parser, 159, name);\n    }\n    scope['#' + name] = kind;\n}\nfunction addVarName(parser, context, scope, name, kind) {\n    let currentScope = scope;\n    while (currentScope && (currentScope.type & 256) === 0) {\n        const value = currentScope['#' + name];\n        if (value & 248) {\n            if (context & 64 &&\n                (context & 256) === 0 &&\n                ((kind & 128 && value & 68) ||\n                    (value & 128 && kind & 68))) ;\n            else {\n                report(parser, 145, name);\n            }\n        }\n        if (currentScope === scope) {\n            if (value & 1 && kind & 1) {\n                currentScope.scopeError = recordScopeError(parser, 145, name);\n            }\n        }\n        if (value & 256 ||\n            (value & 512 && (context & 64) === 0)) {\n            report(parser, 145, name);\n        }\n        currentScope['#' + name] = kind;\n        currentScope = currentScope.parent;\n    }\n}\nfunction addPrivateIdentifier(parser, scope, name, kind) {\n    let focusKind = kind & (32 | 768);\n    if (!(focusKind & 768))\n        focusKind |= 768;\n    const value = scope['#' + name];\n    if (value !== undefined &&\n        ((value & 32) !== (focusKind & 32) || value & focusKind & 768)) {\n        report(parser, 146, name);\n    }\n    scope['#' + name] = value ? value | focusKind : focusKind;\n}\nfunction addPrivateIdentifierRef(parser, scope, name) {\n    scope.refs[name] ??= [];\n    scope.refs[name].push({\n        index: parser.tokenIndex,\n        line: parser.tokenLine,\n        column: parser.tokenColumn,\n    });\n}\nfunction isPrivateIdentifierDefined(name, scope) {\n    if (scope['#' + name])\n        return 1;\n    if (scope.parent)\n        return isPrivateIdentifierDefined(name, scope.parent);\n    return 0;\n}\nfunction validatePrivateIdentifierRefs(scope) {\n    for (const name in scope.refs) {\n        if (!isPrivateIdentifierDefined(name, scope)) {\n            const { index, line, column } = scope.refs[name][0];\n            throw new ParseError({ index, line, column }, { index: index + name.length, line, column: column + name.length }, 4, name);\n        }\n    }\n}\nfunction declareUnboundVariable(parser, name) {\n    if (parser.exportedNames !== void 0 && name !== '') {\n        if (parser.exportedNames['#' + name]) {\n            report(parser, 147, name);\n        }\n        parser.exportedNames['#' + name] = 1;\n    }\n}\nfunction addBindingToExports(parser, name) {\n    if (parser.exportedBindings !== void 0 && name !== '') {\n        parser.exportedBindings['#' + name] = 1;\n    }\n}\nfunction isValidIdentifier(context, t) {\n    if (context & (256 | 262144)) {\n        if (context & 512 && t === 209006)\n            return false;\n        if (context & 262144 && t === 241771)\n            return false;\n        return (t & 12288) === 12288;\n    }\n    return (t & 12288) === 12288 || (t & 36864) === 36864;\n}\nfunction classifyIdentifier(parser, context, t) {\n    if ((t & 537079808) === 537079808) {\n        if (context & 256)\n            report(parser, 119);\n        parser.flags |= 512;\n    }\n    if (!isValidIdentifier(context, t))\n        report(parser, 0);\n}\n\nclass Parser {\n    source;\n    options;\n    lastOnToken = null;\n    token = 1048576;\n    flags = 0;\n    index = 0;\n    line = 1;\n    column = 0;\n    startIndex = 0;\n    end = 0;\n    tokenIndex = 0;\n    startColumn = 0;\n    tokenColumn = 0;\n    tokenLine = 1;\n    startLine = 1;\n    tokenValue = '';\n    tokenRaw = '';\n    tokenRegExp = void 0;\n    currentChar = 0;\n    exportedNames = {};\n    exportedBindings = {};\n    assignable = 1;\n    destructible = 0;\n    leadingDecorators = { decorators: [] };\n    constructor(source, options = {}) {\n        this.source = source;\n        this.options = options;\n        this.end = source.length;\n        this.currentChar = source.charCodeAt(0);\n    }\n    getToken() {\n        return this.token;\n    }\n    setToken(value, replaceLast = false) {\n        this.token = value;\n        const { onToken } = this.options;\n        if (onToken) {\n            if (value !== 1048576) {\n                const loc = {\n                    start: {\n                        line: this.tokenLine,\n                        column: this.tokenColumn,\n                    },\n                    end: {\n                        line: this.line,\n                        column: this.column,\n                    },\n                };\n                if (!replaceLast && this.lastOnToken) {\n                    onToken(...this.lastOnToken);\n                }\n                this.lastOnToken = [convertTokenType(value), this.tokenIndex, this.index, loc];\n            }\n            else {\n                if (this.lastOnToken) {\n                    onToken(...this.lastOnToken);\n                    this.lastOnToken = null;\n                }\n            }\n        }\n        return value;\n    }\n    get tokenStart() {\n        return {\n            index: this.tokenIndex,\n            line: this.tokenLine,\n            column: this.tokenColumn,\n        };\n    }\n    get currentLocation() {\n        return { index: this.index, line: this.line, column: this.column };\n    }\n    finishNode(node, start, end) {\n        if (this.options.shouldAddRanges) {\n            node.start = start.index;\n            const endIndex = end ? end.index : this.startIndex;\n            node.end = endIndex;\n            node.range = [start.index, endIndex];\n        }\n        if (this.options.shouldAddLoc) {\n            node.loc = {\n                start: {\n                    line: start.line,\n                    column: start.column,\n                },\n                end: end ? { line: end.line, column: end.column } : { line: this.startLine, column: this.startColumn },\n            };\n            if (this.options.sourceFile) {\n                node.loc.source = this.options.sourceFile;\n            }\n        }\n        return node;\n    }\n}\nfunction pushComment(comments, options) {\n    return function (type, value, start, end, loc) {\n        const comment = {\n            type,\n            value,\n        };\n        if (options.shouldAddRanges) {\n            comment.start = start;\n            comment.end = end;\n            comment.range = [start, end];\n        }\n        if (options.shouldAddLoc) {\n            comment.loc = loc;\n        }\n        comments.push(comment);\n    };\n}\nfunction pushToken(tokens, options) {\n    return function (type, start, end, loc) {\n        const token = {\n            token: type,\n        };\n        if (options.shouldAddRanges) {\n            token.start = start;\n            token.end = end;\n            token.range = [start, end];\n        }\n        if (options.shouldAddLoc) {\n            token.loc = loc;\n        }\n        tokens.push(token);\n    };\n}\n\nfunction parseSource(source, options, context) {\n    if (options != null) {\n        if (options.module)\n            context |= 512 | 256;\n        if (options.next)\n            context |= 1;\n        if (options.loc)\n            context |= 4;\n        if (options.ranges)\n            context |= 2;\n        if (options.uniqueKeyInPattern)\n            context |= 134217728;\n        if (options.lexical)\n            context |= 16;\n        if (options.webcompat)\n            context |= 64;\n        if (options.globalReturn)\n            context |= 1048576;\n        if (options.raw)\n            context |= 128;\n        if (options.preserveParens)\n            context |= 32;\n        if (options.impliedStrict)\n            context |= 256;\n        if (options.jsx)\n            context |= 8;\n    }\n    const parserOptions = {\n        shouldAddLoc: Boolean(context & 4),\n        shouldAddRanges: Boolean(context & 2),\n    };\n    if (options != null) {\n        if (options.source)\n            parserOptions.sourceFile = options.source;\n        if (options.onComment != null) {\n            parserOptions.onComment = Array.isArray(options.onComment)\n                ? pushComment(options.onComment, parserOptions)\n                : options.onComment;\n        }\n        if (options.onInsertedSemicolon != null)\n            parserOptions.onInsertedSemicolon = options.onInsertedSemicolon;\n        if (options.onToken != null) {\n            parserOptions.onToken = Array.isArray(options.onToken)\n                ? pushToken(options.onToken, parserOptions)\n                : options.onToken;\n        }\n    }\n    const parser = new Parser(source, parserOptions);\n    skipHashBang(parser);\n    const scope = context & 16 ? createScope() : void 0;\n    let body = [];\n    let sourceType = 'script';\n    if (context & 512) {\n        sourceType = 'module';\n        body = parseModuleItemList(parser, context | 2048, scope);\n        if (scope) {\n            for (const key in parser.exportedBindings) {\n                if (key[0] === '#' && !scope[key])\n                    report(parser, 148, key.slice(1));\n            }\n        }\n    }\n    else {\n        body = parseStatementList(parser, context | 2048, scope);\n    }\n    return parser.finishNode({\n        type: 'Program',\n        sourceType,\n        body,\n    }, { index: 0, line: 1, column: 0 }, parser.currentLocation);\n}\nfunction parseStatementList(parser, context, scope) {\n    nextToken(parser, context | 8192 | 67108864);\n    const statements = [];\n    while (parser.getToken() === 134283267) {\n        const { index, tokenValue, tokenStart, tokenIndex } = parser;\n        const token = parser.getToken();\n        const expr = parseLiteral(parser, context);\n        if (isValidStrictMode(parser, index, tokenIndex, tokenValue)) {\n            context |= 256;\n            if (parser.flags & 64) {\n                reportMessageAt(parser.tokenStart, parser.currentLocation, 9);\n            }\n            if (parser.flags & 4096) {\n                reportMessageAt(parser.tokenStart, parser.currentLocation, 15);\n            }\n        }\n        statements.push(parseDirective(parser, context, expr, token, tokenStart));\n    }\n    while (parser.getToken() !== 1048576) {\n        statements.push(parseStatementListItem(parser, context, scope, undefined, 4, {}));\n    }\n    return statements;\n}\nfunction parseModuleItemList(parser, context, scope) {\n    nextToken(parser, context | 8192);\n    const statements = [];\n    while (parser.getToken() === 134283267) {\n        const { tokenStart } = parser;\n        const token = parser.getToken();\n        statements.push(parseDirective(parser, context, parseLiteral(parser, context), token, tokenStart));\n    }\n    while (parser.getToken() !== 1048576) {\n        statements.push(parseModuleItem(parser, context, scope));\n    }\n    return statements;\n}\nfunction parseModuleItem(parser, context, scope) {\n    if (parser.getToken() === 132) {\n        Object.assign(parser.leadingDecorators, {\n            start: parser.tokenStart,\n            decorators: parseDecorators(parser, context, undefined),\n        });\n    }\n    let moduleItem;\n    switch (parser.getToken()) {\n        case 20564:\n            moduleItem = parseExportDeclaration(parser, context, scope);\n            break;\n        case 86106:\n            moduleItem = parseImportDeclaration(parser, context, scope);\n            break;\n        default:\n            moduleItem = parseStatementListItem(parser, context, scope, undefined, 4, {});\n    }\n    if (parser.leadingDecorators?.decorators.length) {\n        report(parser, 170);\n    }\n    return moduleItem;\n}\nfunction parseStatementListItem(parser, context, scope, privateScope, origin, labels) {\n    const start = parser.tokenStart;\n    switch (parser.getToken()) {\n        case 86104:\n            return parseFunctionDeclaration(parser, context, scope, privateScope, origin, 1, 0, 0, start);\n        case 132:\n        case 86094:\n            return parseClassDeclaration(parser, context, scope, privateScope, 0);\n        case 86090:\n            return parseLexicalDeclaration(parser, context, scope, privateScope, 16, 0);\n        case 241737:\n            return parseLetIdentOrVarDeclarationStatement(parser, context, scope, privateScope, origin);\n        case 20564:\n            report(parser, 103, 'export');\n        case 86106:\n            nextToken(parser, context);\n            switch (parser.getToken()) {\n                case 67174411:\n                    return parseImportCallDeclaration(parser, context, privateScope, start);\n                case 67108877:\n                    return parseImportMetaDeclaration(parser, context, start);\n                default:\n                    report(parser, 103, 'import');\n            }\n        case 209005:\n            return parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, privateScope, origin, labels, 1);\n        default:\n            return parseStatement(parser, context, scope, privateScope, origin, labels, 1);\n    }\n}\nfunction parseStatement(parser, context, scope, privateScope, origin, labels, allowFuncDecl) {\n    switch (parser.getToken()) {\n        case 86088:\n            return parseVariableStatement(parser, context, scope, privateScope, 0);\n        case 20572:\n            return parseReturnStatement(parser, context, privateScope);\n        case 20569:\n            return parseIfStatement(parser, context, scope, privateScope, labels);\n        case 20567:\n            return parseForStatement(parser, context, scope, privateScope, labels);\n        case 20562:\n            return parseDoWhileStatement(parser, context, scope, privateScope, labels);\n        case 20578:\n            return parseWhileStatement(parser, context, scope, privateScope, labels);\n        case 86110:\n            return parseSwitchStatement(parser, context, scope, privateScope, labels);\n        case 1074790417:\n            return parseEmptyStatement(parser, context);\n        case 2162700:\n            return parseBlock(parser, context, scope ? addChildScope(scope, 2) : scope, privateScope, labels, parser.tokenStart);\n        case 86112:\n            return parseThrowStatement(parser, context, privateScope);\n        case 20555:\n            return parseBreakStatement(parser, context, labels);\n        case 20559:\n            return parseContinueStatement(parser, context, labels);\n        case 20577:\n            return parseTryStatement(parser, context, scope, privateScope, labels);\n        case 20579:\n            return parseWithStatement(parser, context, scope, privateScope, labels);\n        case 20560:\n            return parseDebuggerStatement(parser, context);\n        case 209005:\n            return parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, privateScope, origin, labels, 0);\n        case 20557:\n            report(parser, 162);\n        case 20566:\n            report(parser, 163);\n        case 86104:\n            report(parser, context & 256\n                ? 76\n                : (context & 64) === 0\n                    ? 78\n                    : 77);\n        case 86094:\n            report(parser, 79);\n        default:\n            return parseExpressionOrLabelledStatement(parser, context, scope, privateScope, origin, labels, allowFuncDecl);\n    }\n}\nfunction parseExpressionOrLabelledStatement(parser, context, scope, privateScope, origin, labels, allowFuncDecl) {\n    const { tokenValue, tokenStart } = parser;\n    const token = parser.getToken();\n    let expr;\n    switch (token) {\n        case 241737:\n            expr = parseIdentifier(parser, context);\n            if (context & 256)\n                report(parser, 85);\n            if (parser.getToken() === 69271571)\n                report(parser, 84);\n            break;\n        default:\n            expr = parsePrimaryExpression(parser, context, privateScope, 2, 0, 1, 0, 1, parser.tokenStart);\n    }\n    if (token & 143360 && parser.getToken() === 21) {\n        return parseLabelledStatement(parser, context, scope, privateScope, origin, labels, tokenValue, expr, token, allowFuncDecl, tokenStart);\n    }\n    expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, tokenStart);\n    expr = parseAssignmentExpression(parser, context, privateScope, 0, 0, tokenStart, expr);\n    if (parser.getToken() === 18) {\n        expr = parseSequenceExpression(parser, context, privateScope, 0, tokenStart, expr);\n    }\n    return parseExpressionStatement(parser, context, expr, tokenStart);\n}\nfunction parseBlock(parser, context, scope, privateScope, labels, start = parser.tokenStart, type = 'BlockStatement') {\n    const body = [];\n    consume(parser, context | 8192, 2162700);\n    while (parser.getToken() !== 1074790415) {\n        body.push(parseStatementListItem(parser, context, scope, privateScope, 2, { $: labels }));\n    }\n    consume(parser, context | 8192, 1074790415);\n    return parser.finishNode({\n        type,\n        body,\n    }, start);\n}\nfunction parseReturnStatement(parser, context, privateScope) {\n    if ((context & 1048576) === 0)\n        report(parser, 92);\n    const start = parser.tokenStart;\n    nextToken(parser, context | 8192);\n    const argument = parser.flags & 1 || parser.getToken() & 1048576\n        ? null\n        : parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    matchOrInsertSemicolon(parser, context | 8192);\n    return parser.finishNode({\n        type: 'ReturnStatement',\n        argument,\n    }, start);\n}\nfunction parseExpressionStatement(parser, context, expression, start) {\n    matchOrInsertSemicolon(parser, context | 8192);\n    return parser.finishNode({\n        type: 'ExpressionStatement',\n        expression,\n    }, start);\n}\nfunction parseLabelledStatement(parser, context, scope, privateScope, origin, labels, value, expr, token, allowFuncDecl, start) {\n    validateBindingIdentifier(parser, context, 0, token, 1);\n    validateAndDeclareLabel(parser, labels, value);\n    nextToken(parser, context | 8192);\n    const body = allowFuncDecl &&\n        (context & 256) === 0 &&\n        context & 64 &&\n        parser.getToken() === 86104\n        ? parseFunctionDeclaration(parser, context, addChildScope(scope, 2), privateScope, origin, 0, 0, 0, parser.tokenStart)\n        : parseStatement(parser, context, scope, privateScope, origin, labels, allowFuncDecl);\n    return parser.finishNode({\n        type: 'LabeledStatement',\n        label: expr,\n        body,\n    }, start);\n}\nfunction parseAsyncArrowOrAsyncFunctionDeclaration(parser, context, scope, privateScope, origin, labels, allowFuncDecl) {\n    const { tokenValue, tokenStart: start } = parser;\n    const token = parser.getToken();\n    let expr = parseIdentifier(parser, context);\n    if (parser.getToken() === 21) {\n        return parseLabelledStatement(parser, context, scope, privateScope, origin, labels, tokenValue, expr, token, 1, start);\n    }\n    const asyncNewLine = parser.flags & 1;\n    if (!asyncNewLine) {\n        if (parser.getToken() === 86104) {\n            if (!allowFuncDecl)\n                report(parser, 123);\n            return parseFunctionDeclaration(parser, context, scope, privateScope, origin, 1, 0, 1, start);\n        }\n        if (isValidIdentifier(context, parser.getToken())) {\n            expr = parseAsyncArrowAfterIdent(parser, context, privateScope, 1, start);\n            if (parser.getToken() === 18)\n                expr = parseSequenceExpression(parser, context, privateScope, 0, start, expr);\n            return parseExpressionStatement(parser, context, expr, start);\n        }\n    }\n    if (parser.getToken() === 67174411) {\n        expr = parseAsyncArrowOrCallExpression(parser, context, privateScope, expr, 1, 1, 0, asyncNewLine, start);\n    }\n    else {\n        if (parser.getToken() === 10) {\n            classifyIdentifier(parser, context, token);\n            if ((token & 36864) === 36864) {\n                parser.flags |= 256;\n            }\n            expr = parseArrowFromIdentifier(parser, context | 524288, privateScope, parser.tokenValue, expr, 0, 1, 0, start);\n        }\n        parser.assignable = 1;\n    }\n    expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, start);\n    expr = parseAssignmentExpression(parser, context, privateScope, 0, 0, start, expr);\n    parser.assignable = 1;\n    if (parser.getToken() === 18) {\n        expr = parseSequenceExpression(parser, context, privateScope, 0, start, expr);\n    }\n    return parseExpressionStatement(parser, context, expr, start);\n}\nfunction parseDirective(parser, context, expression, token, start) {\n    const endIndex = parser.startIndex;\n    if (token !== 1074790417) {\n        parser.assignable = 2;\n        expression = parseMemberOrUpdateExpression(parser, context, undefined, expression, 0, 0, start);\n        if (parser.getToken() !== 1074790417) {\n            expression = parseAssignmentExpression(parser, context, undefined, 0, 0, start, expression);\n            if (parser.getToken() === 18) {\n                expression = parseSequenceExpression(parser, context, undefined, 0, start, expression);\n            }\n        }\n        matchOrInsertSemicolon(parser, context | 8192);\n    }\n    const node = {\n        type: 'ExpressionStatement',\n        expression,\n    };\n    if (expression.type === 'Literal' && typeof expression.value === 'string') {\n        node.directive = parser.source.slice(start.index + 1, endIndex - 1);\n    }\n    return parser.finishNode(node, start);\n}\nfunction parseEmptyStatement(parser, context) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 8192);\n    return parser.finishNode({\n        type: 'EmptyStatement',\n    }, start);\n}\nfunction parseThrowStatement(parser, context, privateScope) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 8192);\n    if (parser.flags & 1)\n        report(parser, 90);\n    const argument = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    matchOrInsertSemicolon(parser, context | 8192);\n    return parser.finishNode({\n        type: 'ThrowStatement',\n        argument,\n    }, start);\n}\nfunction parseIfStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    consume(parser, context | 8192, 67174411);\n    parser.assignable = 1;\n    const test = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 8192, 16);\n    const consequent = parseConsequentOrAlternative(parser, context, scope, privateScope, labels);\n    let alternate = null;\n    if (parser.getToken() === 20563) {\n        nextToken(parser, context | 8192);\n        alternate = parseConsequentOrAlternative(parser, context, scope, privateScope, labels);\n    }\n    return parser.finishNode({\n        type: 'IfStatement',\n        test,\n        consequent,\n        alternate,\n    }, start);\n}\nfunction parseConsequentOrAlternative(parser, context, scope, privateScope, labels) {\n    const { tokenStart } = parser;\n    return context & 256 ||\n        (context & 64) === 0 ||\n        parser.getToken() !== 86104\n        ? parseStatement(parser, context, scope, privateScope, 0, { $: labels }, 0)\n        : parseFunctionDeclaration(parser, context, addChildScope(scope, 2), privateScope, 0, 0, 0, 0, tokenStart);\n}\nfunction parseSwitchStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    consume(parser, context | 8192, 67174411);\n    const discriminant = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context, 16);\n    consume(parser, context, 2162700);\n    const cases = [];\n    let seenDefault = 0;\n    if (scope)\n        scope = addChildScope(scope, 8);\n    while (parser.getToken() !== 1074790415) {\n        const { tokenStart } = parser;\n        let test = null;\n        const consequent = [];\n        if (consumeOpt(parser, context | 8192, 20556)) {\n            test = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n        }\n        else {\n            consume(parser, context | 8192, 20561);\n            if (seenDefault)\n                report(parser, 89);\n            seenDefault = 1;\n        }\n        consume(parser, context | 8192, 21);\n        while (parser.getToken() !== 20556 &&\n            parser.getToken() !== 1074790415 &&\n            parser.getToken() !== 20561) {\n            consequent.push(parseStatementListItem(parser, context | 1024, scope, privateScope, 2, {\n                $: labels,\n            }));\n        }\n        cases.push(parser.finishNode({\n            type: 'SwitchCase',\n            test,\n            consequent,\n        }, tokenStart));\n    }\n    consume(parser, context | 8192, 1074790415);\n    return parser.finishNode({\n        type: 'SwitchStatement',\n        discriminant,\n        cases,\n    }, start);\n}\nfunction parseWhileStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    consume(parser, context | 8192, 67174411);\n    const test = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 8192, 16);\n    const body = parseIterationStatementBody(parser, context, scope, privateScope, labels);\n    return parser.finishNode({\n        type: 'WhileStatement',\n        test,\n        body,\n    }, start);\n}\nfunction parseIterationStatementBody(parser, context, scope, privateScope, labels) {\n    return parseStatement(parser, ((context | 33554432) ^ 33554432) | 32768, scope, privateScope, 0, { loop: 1, $: labels }, 0);\n}\nfunction parseContinueStatement(parser, context, labels) {\n    if ((context & 32768) === 0)\n        report(parser, 68);\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    let label = null;\n    if ((parser.flags & 1) === 0 && parser.getToken() & 143360) {\n        const { tokenValue } = parser;\n        label = parseIdentifier(parser, context | 8192);\n        if (!isValidLabel(parser, labels, tokenValue, 1))\n            report(parser, 138, tokenValue);\n    }\n    matchOrInsertSemicolon(parser, context | 8192);\n    return parser.finishNode({\n        type: 'ContinueStatement',\n        label,\n    }, start);\n}\nfunction parseBreakStatement(parser, context, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 8192);\n    let label = null;\n    if ((parser.flags & 1) === 0 && parser.getToken() & 143360) {\n        const { tokenValue } = parser;\n        label = parseIdentifier(parser, context | 8192);\n        if (!isValidLabel(parser, labels, tokenValue, 0))\n            report(parser, 138, tokenValue);\n    }\n    else if ((context & (1024 | 32768)) === 0) {\n        report(parser, 69);\n    }\n    matchOrInsertSemicolon(parser, context | 8192);\n    return parser.finishNode({\n        type: 'BreakStatement',\n        label,\n    }, start);\n}\nfunction parseWithStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    if (context & 256)\n        report(parser, 91);\n    consume(parser, context | 8192, 67174411);\n    const object = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 8192, 16);\n    const body = parseStatement(parser, context, scope, privateScope, 2, labels, 0);\n    return parser.finishNode({\n        type: 'WithStatement',\n        object,\n        body,\n    }, start);\n}\nfunction parseDebuggerStatement(parser, context) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 8192);\n    matchOrInsertSemicolon(parser, context | 8192);\n    return parser.finishNode({\n        type: 'DebuggerStatement',\n    }, start);\n}\nfunction parseTryStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 8192);\n    const firstScope = scope ? addChildScope(scope, 32) : void 0;\n    const block = parseBlock(parser, context, firstScope, privateScope, { $: labels });\n    const { tokenStart } = parser;\n    const handler = consumeOpt(parser, context | 8192, 20557)\n        ? parseCatchBlock(parser, context, scope, privateScope, labels, tokenStart)\n        : null;\n    let finalizer = null;\n    if (parser.getToken() === 20566) {\n        nextToken(parser, context | 8192);\n        const finalizerScope = firstScope ? addChildScope(scope, 4) : void 0;\n        const block = parseBlock(parser, context, finalizerScope, privateScope, { $: labels });\n        finalizer = block;\n    }\n    if (!handler && !finalizer) {\n        report(parser, 88);\n    }\n    return parser.finishNode({\n        type: 'TryStatement',\n        block,\n        handler,\n        finalizer,\n    }, start);\n}\nfunction parseCatchBlock(parser, context, scope, privateScope, labels, start) {\n    let param = null;\n    let additionalScope = scope;\n    if (consumeOpt(parser, context, 67174411)) {\n        if (scope)\n            scope = addChildScope(scope, 4);\n        param = parseBindingPattern(parser, context, scope, privateScope, (parser.getToken() & 2097152) === 2097152\n            ? 256\n            : 512, 0);\n        if (parser.getToken() === 18) {\n            report(parser, 86);\n        }\n        else if (parser.getToken() === 1077936155) {\n            report(parser, 87);\n        }\n        consume(parser, context | 8192, 16);\n    }\n    if (scope)\n        additionalScope = addChildScope(scope, 64);\n    const body = parseBlock(parser, context, additionalScope, privateScope, { $: labels });\n    return parser.finishNode({\n        type: 'CatchClause',\n        param,\n        body,\n    }, start);\n}\nfunction parseStaticBlock(parser, context, scope, privateScope, start) {\n    if (scope)\n        scope = addChildScope(scope, 2);\n    const ctorContext = 131072 | 1048576 | 262144 | 1024 | 32768;\n    context =\n        ((context | ctorContext) ^ ctorContext) |\n            65536 |\n            524288 |\n            268435456 |\n            16777216;\n    return parseBlock(parser, context, scope, privateScope, {}, start, 'StaticBlock');\n}\nfunction parseDoWhileStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 8192);\n    const body = parseIterationStatementBody(parser, context, scope, privateScope, labels);\n    consume(parser, context, 20578);\n    consume(parser, context | 8192, 67174411);\n    const test = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 8192, 16);\n    consumeOpt(parser, context | 8192, 1074790417);\n    return parser.finishNode({\n        type: 'DoWhileStatement',\n        body,\n        test,\n    }, start);\n}\nfunction parseLetIdentOrVarDeclarationStatement(parser, context, scope, privateScope, origin) {\n    const { tokenValue, tokenStart } = parser;\n    const token = parser.getToken();\n    let expr = parseIdentifier(parser, context);\n    if (parser.getToken() & (143360 | 2097152)) {\n        const declarations = parseVariableDeclarationList(parser, context, scope, privateScope, 8, 0);\n        matchOrInsertSemicolon(parser, context | 8192);\n        return parser.finishNode({\n            type: 'VariableDeclaration',\n            kind: 'let',\n            declarations,\n        }, tokenStart);\n    }\n    parser.assignable = 1;\n    if (context & 256)\n        report(parser, 85);\n    if (parser.getToken() === 21) {\n        return parseLabelledStatement(parser, context, scope, privateScope, origin, {}, tokenValue, expr, token, 0, tokenStart);\n    }\n    if (parser.getToken() === 10) {\n        let scope = void 0;\n        if (context & 16)\n            scope = createArrowHeadParsingScope(parser, context, tokenValue);\n        parser.flags = (parser.flags | 128) ^ 128;\n        expr = parseArrowFunctionExpression(parser, context, scope, privateScope, [expr], 0, tokenStart);\n    }\n    else {\n        expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, tokenStart);\n        expr = parseAssignmentExpression(parser, context, privateScope, 0, 0, tokenStart, expr);\n    }\n    if (parser.getToken() === 18) {\n        expr = parseSequenceExpression(parser, context, privateScope, 0, tokenStart, expr);\n    }\n    return parseExpressionStatement(parser, context, expr, tokenStart);\n}\nfunction parseLexicalDeclaration(parser, context, scope, privateScope, kind, origin) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    const declarations = parseVariableDeclarationList(parser, context, scope, privateScope, kind, origin);\n    matchOrInsertSemicolon(parser, context | 8192);\n    return parser.finishNode({\n        type: 'VariableDeclaration',\n        kind: kind & 8 ? 'let' : 'const',\n        declarations,\n    }, start);\n}\nfunction parseVariableStatement(parser, context, scope, privateScope, origin) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    const declarations = parseVariableDeclarationList(parser, context, scope, privateScope, 4, origin);\n    matchOrInsertSemicolon(parser, context | 8192);\n    return parser.finishNode({\n        type: 'VariableDeclaration',\n        kind: 'var',\n        declarations,\n    }, start);\n}\nfunction parseVariableDeclarationList(parser, context, scope, privateScope, kind, origin) {\n    let bindingCount = 1;\n    const list = [\n        parseVariableDeclaration(parser, context, scope, privateScope, kind, origin),\n    ];\n    while (consumeOpt(parser, context, 18)) {\n        bindingCount++;\n        list.push(parseVariableDeclaration(parser, context, scope, privateScope, kind, origin));\n    }\n    if (bindingCount > 1 && origin & 32 && parser.getToken() & 262144) {\n        report(parser, 61, KeywordDescTable[parser.getToken() & 255]);\n    }\n    return list;\n}\nfunction parseVariableDeclaration(parser, context, scope, privateScope, kind, origin) {\n    const { tokenStart } = parser;\n    const token = parser.getToken();\n    let init = null;\n    const id = parseBindingPattern(parser, context, scope, privateScope, kind, origin);\n    if (parser.getToken() === 1077936155) {\n        nextToken(parser, context | 8192);\n        init = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n        if (origin & 32 || (token & 2097152) === 0) {\n            if (parser.getToken() === 471156 ||\n                (parser.getToken() === 8673330 &&\n                    (token & 2097152 || (kind & 4) === 0 || context & 256))) {\n                reportMessageAt(tokenStart, parser.currentLocation, 60, parser.getToken() === 471156 ? 'of' : 'in');\n            }\n        }\n    }\n    else if ((kind & 16 || (token & 2097152) > 0) &&\n        (parser.getToken() & 262144) !== 262144) {\n        report(parser, 59, kind & 16 ? 'const' : 'destructuring');\n    }\n    return parser.finishNode({\n        type: 'VariableDeclarator',\n        id,\n        init,\n    }, tokenStart);\n}\nfunction parseForStatement(parser, context, scope, privateScope, labels) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    const forAwait = ((context & 524288) > 0 || ((context & 512) > 0 && (context & 2048) > 0)) &&\n        consumeOpt(parser, context, 209006);\n    consume(parser, context | 8192, 67174411);\n    if (scope)\n        scope = addChildScope(scope, 1);\n    let test = null;\n    let update = null;\n    let destructible = 0;\n    let init = null;\n    let isVarDecl = parser.getToken() === 86088 ||\n        parser.getToken() === 241737 ||\n        parser.getToken() === 86090;\n    let right;\n    const { tokenStart } = parser;\n    const token = parser.getToken();\n    if (isVarDecl) {\n        if (token === 241737) {\n            init = parseIdentifier(parser, context);\n            if (parser.getToken() & (143360 | 2097152)) {\n                if (parser.getToken() === 8673330) {\n                    if (context & 256)\n                        report(parser, 67);\n                }\n                else {\n                    init = parser.finishNode({\n                        type: 'VariableDeclaration',\n                        kind: 'let',\n                        declarations: parseVariableDeclarationList(parser, context | 33554432, scope, privateScope, 8, 32),\n                    }, tokenStart);\n                }\n                parser.assignable = 1;\n            }\n            else if (context & 256) {\n                report(parser, 67);\n            }\n            else {\n                isVarDecl = false;\n                parser.assignable = 1;\n                init = parseMemberOrUpdateExpression(parser, context, privateScope, init, 0, 0, tokenStart);\n                if (parser.getToken() === 471156)\n                    report(parser, 115);\n            }\n        }\n        else {\n            nextToken(parser, context);\n            init = parser.finishNode(token === 86088\n                ? {\n                    type: 'VariableDeclaration',\n                    kind: 'var',\n                    declarations: parseVariableDeclarationList(parser, context | 33554432, scope, privateScope, 4, 32),\n                }\n                : {\n                    type: 'VariableDeclaration',\n                    kind: 'const',\n                    declarations: parseVariableDeclarationList(parser, context | 33554432, scope, privateScope, 16, 32),\n                }, tokenStart);\n            parser.assignable = 1;\n        }\n    }\n    else if (token === 1074790417) {\n        if (forAwait)\n            report(parser, 82);\n    }\n    else if ((token & 2097152) === 2097152) {\n        const patternStart = parser.tokenStart;\n        init =\n            token === 2162700\n                ? parseObjectLiteralOrPattern(parser, context, void 0, privateScope, 1, 0, 0, 2, 32)\n                : parseArrayExpressionOrPattern(parser, context, void 0, privateScope, 1, 0, 0, 2, 32);\n        destructible = parser.destructible;\n        if (destructible & 64) {\n            report(parser, 63);\n        }\n        parser.assignable =\n            destructible & 16 ? 2 : 1;\n        init = parseMemberOrUpdateExpression(parser, context | 33554432, privateScope, init, 0, 0, patternStart);\n    }\n    else {\n        init = parseLeftHandSideExpression(parser, context | 33554432, privateScope, 1, 0, 1);\n    }\n    if ((parser.getToken() & 262144) === 262144) {\n        if (parser.getToken() === 471156) {\n            if (parser.assignable & 2)\n                report(parser, 80, forAwait ? 'await' : 'of');\n            reinterpretToPattern(parser, init);\n            nextToken(parser, context | 8192);\n            right = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n            consume(parser, context | 8192, 16);\n            const body = parseIterationStatementBody(parser, context, scope, privateScope, labels);\n            return parser.finishNode({\n                type: 'ForOfStatement',\n                left: init,\n                right,\n                body,\n                await: forAwait,\n            }, start);\n        }\n        if (parser.assignable & 2)\n            report(parser, 80, 'in');\n        reinterpretToPattern(parser, init);\n        nextToken(parser, context | 8192);\n        if (forAwait)\n            report(parser, 82);\n        right = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n        consume(parser, context | 8192, 16);\n        const body = parseIterationStatementBody(parser, context, scope, privateScope, labels);\n        return parser.finishNode({\n            type: 'ForInStatement',\n            body,\n            left: init,\n            right,\n        }, start);\n    }\n    if (forAwait)\n        report(parser, 82);\n    if (!isVarDecl) {\n        if (destructible & 8 && parser.getToken() !== 1077936155) {\n            report(parser, 80, 'loop');\n        }\n        init = parseAssignmentExpression(parser, context | 33554432, privateScope, 0, 0, tokenStart, init);\n    }\n    if (parser.getToken() === 18)\n        init = parseSequenceExpression(parser, context, privateScope, 0, tokenStart, init);\n    consume(parser, context | 8192, 1074790417);\n    if (parser.getToken() !== 1074790417)\n        test = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 8192, 1074790417);\n    if (parser.getToken() !== 16)\n        update = parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart);\n    consume(parser, context | 8192, 16);\n    const body = parseIterationStatementBody(parser, context, scope, privateScope, labels);\n    return parser.finishNode({\n        type: 'ForStatement',\n        init,\n        test,\n        update,\n        body,\n    }, start);\n}\nfunction parseRestrictedIdentifier(parser, context, scope) {\n    if (!isValidIdentifier(context, parser.getToken()))\n        report(parser, 118);\n    if ((parser.getToken() & 537079808) === 537079808)\n        report(parser, 119);\n    if (scope)\n        addBlockName(parser, context, scope, parser.tokenValue, 8, 0);\n    return parseIdentifier(parser, context);\n}\nfunction parseImportDeclaration(parser, context, scope) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    let source = null;\n    const { tokenStart } = parser;\n    let specifiers = [];\n    if (parser.getToken() === 134283267) {\n        source = parseLiteral(parser, context);\n    }\n    else {\n        if (parser.getToken() & 143360) {\n            const local = parseRestrictedIdentifier(parser, context, scope);\n            specifiers = [\n                parser.finishNode({\n                    type: 'ImportDefaultSpecifier',\n                    local,\n                }, tokenStart),\n            ];\n            if (consumeOpt(parser, context, 18)) {\n                switch (parser.getToken()) {\n                    case 8391476:\n                        specifiers.push(parseImportNamespaceSpecifier(parser, context, scope));\n                        break;\n                    case 2162700:\n                        parseImportSpecifierOrNamedImports(parser, context, scope, specifiers);\n                        break;\n                    default:\n                        report(parser, 107);\n                }\n            }\n        }\n        else {\n            switch (parser.getToken()) {\n                case 8391476:\n                    specifiers = [parseImportNamespaceSpecifier(parser, context, scope)];\n                    break;\n                case 2162700:\n                    parseImportSpecifierOrNamedImports(parser, context, scope, specifiers);\n                    break;\n                case 67174411:\n                    return parseImportCallDeclaration(parser, context, undefined, start);\n                case 67108877:\n                    return parseImportMetaDeclaration(parser, context, start);\n                default:\n                    report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n            }\n        }\n        source = parseModuleSpecifier(parser, context);\n    }\n    const attributes = parseImportAttributes(parser, context, specifiers);\n    const node = {\n        type: 'ImportDeclaration',\n        specifiers,\n        source,\n        attributes,\n    };\n    matchOrInsertSemicolon(parser, context | 8192);\n    return parser.finishNode(node, start);\n}\nfunction parseImportNamespaceSpecifier(parser, context, scope) {\n    const { tokenStart } = parser;\n    nextToken(parser, context);\n    consume(parser, context, 77932);\n    if ((parser.getToken() & 134217728) === 134217728) {\n        reportMessageAt(tokenStart, parser.currentLocation, 30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    return parser.finishNode({\n        type: 'ImportNamespaceSpecifier',\n        local: parseRestrictedIdentifier(parser, context, scope),\n    }, tokenStart);\n}\nfunction parseModuleSpecifier(parser, context) {\n    consume(parser, context, 209011);\n    if (parser.getToken() !== 134283267)\n        report(parser, 105, 'Import');\n    return parseLiteral(parser, context);\n}\nfunction parseImportSpecifierOrNamedImports(parser, context, scope, specifiers) {\n    nextToken(parser, context);\n    while (parser.getToken() & 143360 || parser.getToken() === 134283267) {\n        let { tokenValue, tokenStart } = parser;\n        const token = parser.getToken();\n        const imported = parseModuleExportName(parser, context);\n        let local;\n        if (consumeOpt(parser, context, 77932)) {\n            if ((parser.getToken() & 134217728) === 134217728 ||\n                parser.getToken() === 18) {\n                report(parser, 106);\n            }\n            else {\n                validateBindingIdentifier(parser, context, 16, parser.getToken(), 0);\n            }\n            tokenValue = parser.tokenValue;\n            local = parseIdentifier(parser, context);\n        }\n        else if (imported.type === 'Identifier') {\n            validateBindingIdentifier(parser, context, 16, token, 0);\n            local = imported;\n        }\n        else {\n            report(parser, 25, KeywordDescTable[77932 & 255]);\n        }\n        if (scope)\n            addBlockName(parser, context, scope, tokenValue, 8, 0);\n        specifiers.push(parser.finishNode({\n            type: 'ImportSpecifier',\n            local,\n            imported,\n        }, tokenStart));\n        if (parser.getToken() !== 1074790415)\n            consume(parser, context, 18);\n    }\n    consume(parser, context, 1074790415);\n    return specifiers;\n}\nfunction parseImportMetaDeclaration(parser, context, start) {\n    let expr = parseImportMetaExpression(parser, context, parser.finishNode({\n        type: 'Identifier',\n        name: 'import',\n    }, start), start);\n    expr = parseMemberOrUpdateExpression(parser, context, undefined, expr, 0, 0, start);\n    expr = parseAssignmentExpression(parser, context, undefined, 0, 0, start, expr);\n    if (parser.getToken() === 18) {\n        expr = parseSequenceExpression(parser, context, undefined, 0, start, expr);\n    }\n    return parseExpressionStatement(parser, context, expr, start);\n}\nfunction parseImportCallDeclaration(parser, context, privateScope, start) {\n    let expr = parseImportExpression(parser, context, privateScope, 0, start);\n    expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, start);\n    if (parser.getToken() === 18) {\n        expr = parseSequenceExpression(parser, context, privateScope, 0, start, expr);\n    }\n    return parseExpressionStatement(parser, context, expr, start);\n}\nfunction parseExportDeclaration(parser, context, scope) {\n    const start = parser.leadingDecorators.decorators.length ? parser.leadingDecorators.start : parser.tokenStart;\n    nextToken(parser, context | 8192);\n    const specifiers = [];\n    let declaration = null;\n    let source = null;\n    let attributes = [];\n    if (consumeOpt(parser, context | 8192, 20561)) {\n        switch (parser.getToken()) {\n            case 86104: {\n                declaration = parseFunctionDeclaration(parser, context, scope, undefined, 4, 1, 1, 0, parser.tokenStart);\n                break;\n            }\n            case 132:\n            case 86094:\n                declaration = parseClassDeclaration(parser, context, scope, undefined, 1);\n                break;\n            case 209005: {\n                const { tokenStart } = parser;\n                declaration = parseIdentifier(parser, context);\n                const { flags } = parser;\n                if ((flags & 1) === 0) {\n                    if (parser.getToken() === 86104) {\n                        declaration = parseFunctionDeclaration(parser, context, scope, undefined, 4, 1, 1, 1, tokenStart);\n                    }\n                    else {\n                        if (parser.getToken() === 67174411) {\n                            declaration = parseAsyncArrowOrCallExpression(parser, context, undefined, declaration, 1, 1, 0, flags, tokenStart);\n                            declaration = parseMemberOrUpdateExpression(parser, context, undefined, declaration, 0, 0, tokenStart);\n                            declaration = parseAssignmentExpression(parser, context, undefined, 0, 0, tokenStart, declaration);\n                        }\n                        else if (parser.getToken() & 143360) {\n                            if (scope)\n                                scope = createArrowHeadParsingScope(parser, context, parser.tokenValue);\n                            declaration = parseIdentifier(parser, context);\n                            declaration = parseArrowFunctionExpression(parser, context, scope, undefined, [declaration], 1, tokenStart);\n                        }\n                    }\n                }\n                break;\n            }\n            default:\n                declaration = parseExpression(parser, context, undefined, 1, 0, parser.tokenStart);\n                matchOrInsertSemicolon(parser, context | 8192);\n        }\n        if (scope)\n            declareUnboundVariable(parser, 'default');\n        return parser.finishNode({\n            type: 'ExportDefaultDeclaration',\n            declaration,\n        }, start);\n    }\n    switch (parser.getToken()) {\n        case 8391476: {\n            nextToken(parser, context);\n            let exported = null;\n            const isNamedDeclaration = consumeOpt(parser, context, 77932);\n            if (isNamedDeclaration) {\n                if (scope)\n                    declareUnboundVariable(parser, parser.tokenValue);\n                exported = parseModuleExportName(parser, context);\n            }\n            consume(parser, context, 209011);\n            if (parser.getToken() !== 134283267)\n                report(parser, 105, 'Export');\n            source = parseLiteral(parser, context);\n            const attributes = parseImportAttributes(parser, context);\n            const node = {\n                type: 'ExportAllDeclaration',\n                source,\n                exported,\n                attributes,\n            };\n            matchOrInsertSemicolon(parser, context | 8192);\n            return parser.finishNode(node, start);\n        }\n        case 2162700: {\n            nextToken(parser, context);\n            const tmpExportedNames = [];\n            const tmpExportedBindings = [];\n            let hasLiteralLocal = 0;\n            while (parser.getToken() & 143360 || parser.getToken() === 134283267) {\n                const { tokenStart, tokenValue } = parser;\n                const local = parseModuleExportName(parser, context);\n                if (local.type === 'Literal') {\n                    hasLiteralLocal = 1;\n                }\n                let exported;\n                if (parser.getToken() === 77932) {\n                    nextToken(parser, context);\n                    if ((parser.getToken() & 143360) === 0 && parser.getToken() !== 134283267) {\n                        report(parser, 106);\n                    }\n                    if (scope) {\n                        tmpExportedNames.push(parser.tokenValue);\n                        tmpExportedBindings.push(tokenValue);\n                    }\n                    exported = parseModuleExportName(parser, context);\n                }\n                else {\n                    if (scope) {\n                        tmpExportedNames.push(parser.tokenValue);\n                        tmpExportedBindings.push(parser.tokenValue);\n                    }\n                    exported = local;\n                }\n                specifiers.push(parser.finishNode({\n                    type: 'ExportSpecifier',\n                    local,\n                    exported,\n                }, tokenStart));\n                if (parser.getToken() !== 1074790415)\n                    consume(parser, context, 18);\n            }\n            consume(parser, context, 1074790415);\n            if (consumeOpt(parser, context, 209011)) {\n                if (parser.getToken() !== 134283267)\n                    report(parser, 105, 'Export');\n                source = parseLiteral(parser, context);\n                attributes = parseImportAttributes(parser, context, specifiers);\n                if (scope) {\n                    tmpExportedNames.forEach((n) => declareUnboundVariable(parser, n));\n                }\n            }\n            else {\n                if (hasLiteralLocal) {\n                    report(parser, 172);\n                }\n                if (scope) {\n                    tmpExportedNames.forEach((n) => declareUnboundVariable(parser, n));\n                    tmpExportedBindings.forEach((b) => addBindingToExports(parser, b));\n                }\n            }\n            matchOrInsertSemicolon(parser, context | 8192);\n            break;\n        }\n        case 132:\n        case 86094:\n            declaration = parseClassDeclaration(parser, context, scope, undefined, 2);\n            break;\n        case 86104:\n            declaration = parseFunctionDeclaration(parser, context, scope, undefined, 4, 1, 2, 0, parser.tokenStart);\n            break;\n        case 241737:\n            declaration = parseLexicalDeclaration(parser, context, scope, undefined, 8, 64);\n            break;\n        case 86090:\n            declaration = parseLexicalDeclaration(parser, context, scope, undefined, 16, 64);\n            break;\n        case 86088:\n            declaration = parseVariableStatement(parser, context, scope, undefined, 64);\n            break;\n        case 209005: {\n            const { tokenStart } = parser;\n            nextToken(parser, context);\n            if ((parser.flags & 1) === 0 && parser.getToken() === 86104) {\n                declaration = parseFunctionDeclaration(parser, context, scope, undefined, 4, 1, 2, 1, tokenStart);\n                break;\n            }\n        }\n        default:\n            report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    const node = {\n        type: 'ExportNamedDeclaration',\n        declaration,\n        specifiers,\n        source,\n        attributes: attributes,\n    };\n    return parser.finishNode(node, start);\n}\nfunction parseExpression(parser, context, privateScope, canAssign, inGroup, start) {\n    let expr = parsePrimaryExpression(parser, context, privateScope, 2, 0, canAssign, inGroup, 1, start);\n    expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, inGroup, 0, start);\n    return parseAssignmentExpression(parser, context, privateScope, inGroup, 0, start, expr);\n}\nfunction parseSequenceExpression(parser, context, privateScope, inGroup, start, expr) {\n    const expressions = [expr];\n    while (consumeOpt(parser, context | 8192, 18)) {\n        expressions.push(parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart));\n    }\n    return parser.finishNode({\n        type: 'SequenceExpression',\n        expressions,\n    }, start);\n}\nfunction parseExpressions(parser, context, privateScope, inGroup, canAssign, start) {\n    const expr = parseExpression(parser, context, privateScope, canAssign, inGroup, start);\n    return parser.getToken() === 18\n        ? parseSequenceExpression(parser, context, privateScope, inGroup, start, expr)\n        : expr;\n}\nfunction parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, start, left) {\n    const token = parser.getToken();\n    if ((token & 4194304) === 4194304) {\n        if (parser.assignable & 2)\n            report(parser, 26);\n        if ((!isPattern && token === 1077936155 && left.type === 'ArrayExpression') ||\n            left.type === 'ObjectExpression') {\n            reinterpretToPattern(parser, left);\n        }\n        nextToken(parser, context | 8192);\n        const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n        parser.assignable = 2;\n        return parser.finishNode(isPattern\n            ? {\n                type: 'AssignmentPattern',\n                left,\n                right,\n            }\n            : {\n                type: 'AssignmentExpression',\n                left,\n                operator: KeywordDescTable[token & 255],\n                right,\n            }, start);\n    }\n    if ((token & 8388608) === 8388608) {\n        left = parseBinaryExpression(parser, context, privateScope, inGroup, start, 4, token, left);\n    }\n    if (consumeOpt(parser, context | 8192, 22)) {\n        left = parseConditionalExpression(parser, context, privateScope, left, start);\n    }\n    return left;\n}\nfunction parseAssignmentExpressionOrPattern(parser, context, privateScope, inGroup, isPattern, start, left) {\n    const token = parser.getToken();\n    nextToken(parser, context | 8192);\n    const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n    left = parser.finishNode(isPattern\n        ? {\n            type: 'AssignmentPattern',\n            left,\n            right,\n        }\n        : {\n            type: 'AssignmentExpression',\n            left,\n            operator: KeywordDescTable[token & 255],\n            right,\n        }, start);\n    parser.assignable = 2;\n    return left;\n}\nfunction parseConditionalExpression(parser, context, privateScope, test, start) {\n    const consequent = parseExpression(parser, (context | 33554432) ^ 33554432, privateScope, 1, 0, parser.tokenStart);\n    consume(parser, context | 8192, 21);\n    parser.assignable = 1;\n    const alternate = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'ConditionalExpression',\n        test,\n        consequent,\n        alternate,\n    }, start);\n}\nfunction parseBinaryExpression(parser, context, privateScope, inGroup, start, minPrecedence, operator, left) {\n    const bit = -((context & 33554432) > 0) & 8673330;\n    let t;\n    let precedence;\n    parser.assignable = 2;\n    while (parser.getToken() & 8388608) {\n        t = parser.getToken();\n        precedence = t & 3840;\n        if ((t & 524288 && operator & 268435456) || (operator & 524288 && t & 268435456)) {\n            report(parser, 165);\n        }\n        if (precedence + ((t === 8391735) << 8) - ((bit === t) << 12) <= minPrecedence)\n            break;\n        nextToken(parser, context | 8192);\n        left = parser.finishNode({\n            type: t & 524288 || t & 268435456 ? 'LogicalExpression' : 'BinaryExpression',\n            left,\n            right: parseBinaryExpression(parser, context, privateScope, inGroup, parser.tokenStart, precedence, t, parseLeftHandSideExpression(parser, context, privateScope, 0, inGroup, 1)),\n            operator: KeywordDescTable[t & 255],\n        }, start);\n    }\n    if (parser.getToken() === 1077936155)\n        report(parser, 26);\n    return left;\n}\nfunction parseUnaryExpression(parser, context, privateScope, isLHS, inGroup) {\n    if (!isLHS)\n        report(parser, 0);\n    const { tokenStart } = parser;\n    const unaryOperator = parser.getToken();\n    nextToken(parser, context | 8192);\n    const arg = parseLeftHandSideExpression(parser, context, privateScope, 0, inGroup, 1);\n    if (parser.getToken() === 8391735)\n        report(parser, 33);\n    if (context & 256 && unaryOperator === 16863276) {\n        if (arg.type === 'Identifier') {\n            report(parser, 121);\n        }\n        else if (isPropertyWithPrivateFieldKey(arg)) {\n            report(parser, 127);\n        }\n    }\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'UnaryExpression',\n        operator: KeywordDescTable[unaryOperator & 255],\n        argument: arg,\n        prefix: true,\n    }, tokenStart);\n}\nfunction parseAsyncExpression(parser, context, privateScope, inGroup, isLHS, canAssign, inNew, start) {\n    const token = parser.getToken();\n    const expr = parseIdentifier(parser, context);\n    const { flags } = parser;\n    if ((flags & 1) === 0) {\n        if (parser.getToken() === 86104) {\n            return parseFunctionExpression(parser, context, privateScope, 1, inGroup, start);\n        }\n        if (isValidIdentifier(context, parser.getToken())) {\n            if (!isLHS)\n                report(parser, 0);\n            if ((parser.getToken() & 36864) === 36864) {\n                parser.flags |= 256;\n            }\n            return parseAsyncArrowAfterIdent(parser, context, privateScope, canAssign, start);\n        }\n    }\n    if (!inNew && parser.getToken() === 67174411) {\n        return parseAsyncArrowOrCallExpression(parser, context, privateScope, expr, canAssign, 1, 0, flags, start);\n    }\n    if (parser.getToken() === 10) {\n        classifyIdentifier(parser, context, token);\n        if (inNew)\n            report(parser, 51);\n        if ((token & 36864) === 36864) {\n            parser.flags |= 256;\n        }\n        return parseArrowFromIdentifier(parser, context, privateScope, parser.tokenValue, expr, inNew, canAssign, 0, start);\n    }\n    parser.assignable = 1;\n    return expr;\n}\nfunction parseYieldExpressionOrIdentifier(parser, context, privateScope, inGroup, canAssign, start) {\n    if (inGroup)\n        parser.destructible |= 256;\n    if (context & 262144) {\n        nextToken(parser, context | 8192);\n        if (context & 2097152)\n            report(parser, 32);\n        if (!canAssign)\n            report(parser, 26);\n        if (parser.getToken() === 22)\n            report(parser, 124);\n        let argument = null;\n        let delegate = false;\n        if ((parser.flags & 1) === 0) {\n            delegate = consumeOpt(parser, context | 8192, 8391476);\n            if (parser.getToken() & (12288 | 65536) || delegate) {\n                argument = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n            }\n        }\n        else if (parser.getToken() === 8391476) {\n            report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n        }\n        parser.assignable = 2;\n        return parser.finishNode({\n            type: 'YieldExpression',\n            argument,\n            delegate,\n        }, start);\n    }\n    if (context & 256)\n        report(parser, 97, 'yield');\n    return parseIdentifierOrArrow(parser, context, privateScope);\n}\nfunction parseAwaitExpressionOrIdentifier(parser, context, privateScope, inNew, inGroup, start) {\n    if (inGroup)\n        parser.destructible |= 128;\n    if (context & 268435456)\n        report(parser, 177);\n    const possibleIdentifierOrArrowFunc = parseIdentifierOrArrow(parser, context, privateScope);\n    const isIdentifier = possibleIdentifierOrArrowFunc.type === 'ArrowFunctionExpression' ||\n        (parser.getToken() & 65536) === 0;\n    if (isIdentifier) {\n        if (context & 524288)\n            reportMessageAt(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 176);\n        if (context & 512)\n            reportMessageAt(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 110);\n        if (context & 2097152 && context & 524288)\n            reportMessageAt(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 110);\n        return possibleIdentifierOrArrowFunc;\n    }\n    if (context & 2097152) {\n        reportMessageAt(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 31);\n    }\n    if (context & 524288 || (context & 512 && context & 2048)) {\n        if (inNew)\n            reportMessageAt(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 0);\n        const argument = parseLeftHandSideExpression(parser, context, privateScope, 0, 0, 1);\n        if (parser.getToken() === 8391735)\n            report(parser, 33);\n        parser.assignable = 2;\n        return parser.finishNode({\n            type: 'AwaitExpression',\n            argument,\n        }, start);\n    }\n    if (context & 512)\n        reportMessageAt(start, { index: parser.startIndex, line: parser.startLine, column: parser.startColumn }, 98);\n    return possibleIdentifierOrArrowFunc;\n}\nfunction parseFunctionBody(parser, context, scope, privateScope, origin, funcNameToken, scopeError) {\n    const { tokenStart } = parser;\n    consume(parser, context | 8192, 2162700);\n    const body = [];\n    if (parser.getToken() !== 1074790415) {\n        while (parser.getToken() === 134283267) {\n            const { index, tokenStart, tokenIndex, tokenValue } = parser;\n            const token = parser.getToken();\n            const expr = parseLiteral(parser, context);\n            if (isValidStrictMode(parser, index, tokenIndex, tokenValue)) {\n                context |= 256;\n                if (parser.flags & 128) {\n                    reportMessageAt(tokenStart, parser.currentLocation, 66);\n                }\n                if (parser.flags & 64) {\n                    reportMessageAt(tokenStart, parser.currentLocation, 9);\n                }\n                if (parser.flags & 4096) {\n                    reportMessageAt(tokenStart, parser.currentLocation, 15);\n                }\n                if (scopeError)\n                    reportScopeError(scopeError);\n            }\n            body.push(parseDirective(parser, context, expr, token, tokenStart));\n        }\n        if (context & 256) {\n            if (funcNameToken) {\n                if ((funcNameToken & 537079808) === 537079808) {\n                    report(parser, 119);\n                }\n                if ((funcNameToken & 36864) === 36864) {\n                    report(parser, 40);\n                }\n            }\n            if (parser.flags & 512)\n                report(parser, 119);\n            if (parser.flags & 256)\n                report(parser, 118);\n        }\n    }\n    parser.flags =\n        (parser.flags | 512 | 256 | 64 | 4096) ^\n            (512 | 256 | 64 | 4096);\n    parser.destructible = (parser.destructible | 256) ^ 256;\n    while (parser.getToken() !== 1074790415) {\n        body.push(parseStatementListItem(parser, context, scope, privateScope, 4, {}));\n    }\n    consume(parser, origin & (16 | 8) ? context | 8192 : context, 1074790415);\n    parser.flags &= -4289;\n    if (parser.getToken() === 1077936155)\n        report(parser, 26);\n    return parser.finishNode({\n        type: 'BlockStatement',\n        body,\n    }, tokenStart);\n}\nfunction parseSuperExpression(parser, context) {\n    const { tokenStart } = parser;\n    nextToken(parser, context);\n    switch (parser.getToken()) {\n        case 67108990:\n            report(parser, 167);\n        case 67174411: {\n            if ((context & 131072) === 0)\n                report(parser, 28);\n            parser.assignable = 2;\n            break;\n        }\n        case 69271571:\n        case 67108877: {\n            if ((context & 65536) === 0)\n                report(parser, 29);\n            parser.assignable = 1;\n            break;\n        }\n        default:\n            report(parser, 30, 'super');\n    }\n    return parser.finishNode({ type: 'Super' }, tokenStart);\n}\nfunction parseLeftHandSideExpression(parser, context, privateScope, canAssign, inGroup, isLHS) {\n    const start = parser.tokenStart;\n    const expression = parsePrimaryExpression(parser, context, privateScope, 2, 0, canAssign, inGroup, isLHS, start);\n    return parseMemberOrUpdateExpression(parser, context, privateScope, expression, inGroup, 0, start);\n}\nfunction parseUpdateExpression(parser, context, expr, start) {\n    if (parser.assignable & 2)\n        report(parser, 55);\n    const token = parser.getToken();\n    nextToken(parser, context);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'UpdateExpression',\n        argument: expr,\n        operator: KeywordDescTable[token & 255],\n        prefix: false,\n    }, start);\n}\nfunction parseMemberOrUpdateExpression(parser, context, privateScope, expr, inGroup, inChain, start) {\n    if ((parser.getToken() & 33619968) === 33619968 && (parser.flags & 1) === 0) {\n        expr = parseUpdateExpression(parser, context, expr, start);\n    }\n    else if ((parser.getToken() & 67108864) === 67108864) {\n        context = (context | 33554432) ^ 33554432;\n        switch (parser.getToken()) {\n            case 67108877: {\n                nextToken(parser, (context | 67108864 | 2048) ^ 2048);\n                if (context & 4096 && parser.getToken() === 130 && parser.tokenValue === 'super') {\n                    report(parser, 173);\n                }\n                parser.assignable = 1;\n                const property = parsePropertyOrPrivatePropertyName(parser, context | 16384, privateScope);\n                expr = parser.finishNode({\n                    type: 'MemberExpression',\n                    object: expr,\n                    computed: false,\n                    property,\n                    optional: false,\n                }, start);\n                break;\n            }\n            case 69271571: {\n                let restoreHasOptionalChaining = false;\n                if ((parser.flags & 2048) === 2048) {\n                    restoreHasOptionalChaining = true;\n                    parser.flags = (parser.flags | 2048) ^ 2048;\n                }\n                nextToken(parser, context | 8192);\n                const { tokenStart } = parser;\n                const property = parseExpressions(parser, context, privateScope, inGroup, 1, tokenStart);\n                consume(parser, context, 20);\n                parser.assignable = 1;\n                expr = parser.finishNode({\n                    type: 'MemberExpression',\n                    object: expr,\n                    computed: true,\n                    property,\n                    optional: false,\n                }, start);\n                if (restoreHasOptionalChaining) {\n                    parser.flags |= 2048;\n                }\n                break;\n            }\n            case 67174411: {\n                if ((parser.flags & 1024) === 1024) {\n                    parser.flags = (parser.flags | 1024) ^ 1024;\n                    return expr;\n                }\n                let restoreHasOptionalChaining = false;\n                if ((parser.flags & 2048) === 2048) {\n                    restoreHasOptionalChaining = true;\n                    parser.flags = (parser.flags | 2048) ^ 2048;\n                }\n                const args = parseArguments(parser, context, privateScope, inGroup);\n                parser.assignable = 2;\n                expr = parser.finishNode({\n                    type: 'CallExpression',\n                    callee: expr,\n                    arguments: args,\n                    optional: false,\n                }, start);\n                if (restoreHasOptionalChaining) {\n                    parser.flags |= 2048;\n                }\n                break;\n            }\n            case 67108990: {\n                nextToken(parser, (context | 67108864 | 2048) ^ 2048);\n                parser.flags |= 2048;\n                parser.assignable = 2;\n                expr = parseOptionalChain(parser, context, privateScope, expr, start);\n                break;\n            }\n            default:\n                if ((parser.flags & 2048) === 2048) {\n                    report(parser, 166);\n                }\n                parser.assignable = 2;\n                expr = parser.finishNode({\n                    type: 'TaggedTemplateExpression',\n                    tag: expr,\n                    quasi: parser.getToken() === 67174408\n                        ? parseTemplate(parser, context | 16384, privateScope)\n                        : parseTemplateLiteral(parser, context),\n                }, start);\n        }\n        expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 1, start);\n    }\n    if (inChain === 0 && (parser.flags & 2048) === 2048) {\n        parser.flags = (parser.flags | 2048) ^ 2048;\n        expr = parser.finishNode({\n            type: 'ChainExpression',\n            expression: expr,\n        }, start);\n    }\n    return expr;\n}\nfunction parseOptionalChain(parser, context, privateScope, expr, start) {\n    let restoreHasOptionalChaining = false;\n    let node;\n    if (parser.getToken() === 69271571 || parser.getToken() === 67174411) {\n        if ((parser.flags & 2048) === 2048) {\n            restoreHasOptionalChaining = true;\n            parser.flags = (parser.flags | 2048) ^ 2048;\n        }\n    }\n    if (parser.getToken() === 69271571) {\n        nextToken(parser, context | 8192);\n        const { tokenStart } = parser;\n        const property = parseExpressions(parser, context, privateScope, 0, 1, tokenStart);\n        consume(parser, context, 20);\n        parser.assignable = 2;\n        node = parser.finishNode({\n            type: 'MemberExpression',\n            object: expr,\n            computed: true,\n            optional: true,\n            property,\n        }, start);\n    }\n    else if (parser.getToken() === 67174411) {\n        const args = parseArguments(parser, context, privateScope, 0);\n        parser.assignable = 2;\n        node = parser.finishNode({\n            type: 'CallExpression',\n            callee: expr,\n            arguments: args,\n            optional: true,\n        }, start);\n    }\n    else {\n        const property = parsePropertyOrPrivatePropertyName(parser, context, privateScope);\n        parser.assignable = 2;\n        node = parser.finishNode({\n            type: 'MemberExpression',\n            object: expr,\n            computed: false,\n            optional: true,\n            property,\n        }, start);\n    }\n    if (restoreHasOptionalChaining) {\n        parser.flags |= 2048;\n    }\n    return node;\n}\nfunction parsePropertyOrPrivatePropertyName(parser, context, privateScope) {\n    if ((parser.getToken() & 143360) === 0 &&\n        parser.getToken() !== -2147483528 &&\n        parser.getToken() !== -2147483527 &&\n        parser.getToken() !== 130) {\n        report(parser, 160);\n    }\n    return parser.getToken() === 130\n        ? parsePrivateIdentifier(parser, context, privateScope, 0)\n        : parseIdentifier(parser, context);\n}\nfunction parseUpdateExpressionPrefixed(parser, context, privateScope, inNew, isLHS, start) {\n    if (inNew)\n        report(parser, 56);\n    if (!isLHS)\n        report(parser, 0);\n    const token = parser.getToken();\n    nextToken(parser, context | 8192);\n    const arg = parseLeftHandSideExpression(parser, context, privateScope, 0, 0, 1);\n    if (parser.assignable & 2) {\n        report(parser, 55);\n    }\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'UpdateExpression',\n        argument: arg,\n        operator: KeywordDescTable[token & 255],\n        prefix: true,\n    }, start);\n}\nfunction parsePrimaryExpression(parser, context, privateScope, kind, inNew, canAssign, inGroup, isLHS, start) {\n    if ((parser.getToken() & 143360) === 143360) {\n        switch (parser.getToken()) {\n            case 209006:\n                return parseAwaitExpressionOrIdentifier(parser, context, privateScope, inNew, inGroup, start);\n            case 241771:\n                return parseYieldExpressionOrIdentifier(parser, context, privateScope, inGroup, canAssign, start);\n            case 209005:\n                return parseAsyncExpression(parser, context, privateScope, inGroup, isLHS, canAssign, inNew, start);\n        }\n        const { tokenValue } = parser;\n        const token = parser.getToken();\n        const expr = parseIdentifier(parser, context | 16384);\n        if (parser.getToken() === 10) {\n            if (!isLHS)\n                report(parser, 0);\n            classifyIdentifier(parser, context, token);\n            if ((token & 36864) === 36864) {\n                parser.flags |= 256;\n            }\n            return parseArrowFromIdentifier(parser, context, privateScope, tokenValue, expr, inNew, canAssign, 0, start);\n        }\n        if (context & 4096 &&\n            !(context & 8388608) &&\n            !(context & 2097152) &&\n            parser.tokenValue === 'arguments')\n            report(parser, 130);\n        if ((token & 255) === (241737 & 255)) {\n            if (context & 256)\n                report(parser, 113);\n            if (kind & (8 | 16))\n                report(parser, 100);\n        }\n        parser.assignable =\n            context & 256 && (token & 537079808) === 537079808\n                ? 2\n                : 1;\n        return expr;\n    }\n    if ((parser.getToken() & 134217728) === 134217728) {\n        return parseLiteral(parser, context);\n    }\n    switch (parser.getToken()) {\n        case 33619993:\n        case 33619994:\n            return parseUpdateExpressionPrefixed(parser, context, privateScope, inNew, isLHS, start);\n        case 16863276:\n        case 16842798:\n        case 16842799:\n        case 25233968:\n        case 25233969:\n        case 16863275:\n        case 16863277:\n            return parseUnaryExpression(parser, context, privateScope, isLHS, inGroup);\n        case 86104:\n            return parseFunctionExpression(parser, context, privateScope, 0, inGroup, start);\n        case 2162700:\n            return parseObjectLiteral(parser, context, privateScope, canAssign ? 0 : 1, inGroup);\n        case 69271571:\n            return parseArrayLiteral(parser, context, privateScope, canAssign ? 0 : 1, inGroup);\n        case 67174411:\n            return parseParenthesizedExpression(parser, context | 16384, privateScope, canAssign, 1, 0, start);\n        case 86021:\n        case 86022:\n        case 86023:\n            return parseNullOrTrueOrFalseLiteral(parser, context);\n        case 86111:\n            return parseThisExpression(parser, context);\n        case 65540:\n            return parseRegExpLiteral(parser, context);\n        case 132:\n        case 86094:\n            return parseClassExpression(parser, context, privateScope, inGroup, start);\n        case 86109:\n            return parseSuperExpression(parser, context);\n        case 67174409:\n            return parseTemplateLiteral(parser, context);\n        case 67174408:\n            return parseTemplate(parser, context, privateScope);\n        case 86107:\n            return parseNewExpression(parser, context, privateScope, inGroup);\n        case 134283388:\n            return parseBigIntLiteral(parser, context);\n        case 130:\n            return parsePrivateIdentifier(parser, context, privateScope, 0);\n        case 86106:\n            return parseImportCallOrMetaExpression(parser, context, privateScope, inNew, inGroup, start);\n        case 8456256:\n            if (context & 8)\n                return parseJSXRootElementOrFragment(parser, context, privateScope, 0, parser.tokenStart);\n        default:\n            if (isValidIdentifier(context, parser.getToken()))\n                return parseIdentifierOrArrow(parser, context, privateScope);\n            report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n    }\n}\nfunction parseImportCallOrMetaExpression(parser, context, privateScope, inNew, inGroup, start) {\n    let expr = parseIdentifier(parser, context);\n    if (parser.getToken() === 67108877) {\n        return parseImportMetaExpression(parser, context, expr, start);\n    }\n    if (inNew)\n        report(parser, 142);\n    expr = parseImportExpression(parser, context, privateScope, inGroup, start);\n    parser.assignable = 2;\n    return parseMemberOrUpdateExpression(parser, context, privateScope, expr, inGroup, 0, start);\n}\nfunction parseImportMetaExpression(parser, context, meta, start) {\n    if ((context & 512) === 0)\n        report(parser, 169);\n    nextToken(parser, context);\n    const token = parser.getToken();\n    if (token !== 209030 && parser.tokenValue !== 'meta') {\n        report(parser, 174);\n    }\n    else if (token & -2147483648) {\n        report(parser, 175);\n    }\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'MetaProperty',\n        meta,\n        property: parseIdentifier(parser, context),\n    }, start);\n}\nfunction parseImportExpression(parser, context, privateScope, inGroup, start) {\n    consume(parser, context | 8192, 67174411);\n    if (parser.getToken() === 14)\n        report(parser, 143);\n    const source = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n    let options = null;\n    if (parser.getToken() === 18) {\n        consume(parser, context, 18);\n        if (parser.getToken() !== 16) {\n            const expContext = (context | 33554432) ^ 33554432;\n            options = parseExpression(parser, expContext, privateScope, 1, inGroup, parser.tokenStart);\n        }\n        consumeOpt(parser, context, 18);\n    }\n    const node = {\n        type: 'ImportExpression',\n        source,\n        options,\n    };\n    consume(parser, context, 16);\n    return parser.finishNode(node, start);\n}\nfunction parseImportAttributes(parser, context, specifiers = null) {\n    if (!consumeOpt(parser, context, 20579))\n        return [];\n    consume(parser, context, 2162700);\n    const attributes = [];\n    const keysContent = new Set();\n    while (parser.getToken() !== 1074790415) {\n        const start = parser.tokenStart;\n        const key = parseIdentifierOrStringLiteral(parser, context);\n        consume(parser, context, 21);\n        const value = parseStringLiteral(parser, context);\n        const keyContent = key.type === 'Literal' ? key.value : key.name;\n        const isJSONImportAttribute = keyContent === 'type' && value.value === 'json';\n        if (isJSONImportAttribute) {\n            const validJSONImportAttributeBindings = specifiers === null ||\n                (specifiers.length === 1 &&\n                    (specifiers[0].type === 'ImportDefaultSpecifier' ||\n                        specifiers[0].type === 'ImportNamespaceSpecifier' ||\n                        (specifiers[0].type === 'ImportSpecifier' &&\n                            specifiers[0].imported.type === 'Identifier' &&\n                            specifiers[0].imported.name === 'default') ||\n                        (specifiers[0].type === 'ExportSpecifier' &&\n                            specifiers[0].local.type === 'Identifier' &&\n                            specifiers[0].local.name === 'default')));\n            if (!validJSONImportAttributeBindings)\n                report(parser, 140);\n        }\n        if (keysContent.has(keyContent)) {\n            report(parser, 145, `${keyContent}`);\n        }\n        keysContent.add(keyContent);\n        attributes.push(parser.finishNode({\n            type: 'ImportAttribute',\n            key,\n            value,\n        }, start));\n        if (parser.getToken() !== 1074790415) {\n            consume(parser, context, 18);\n        }\n    }\n    consume(parser, context, 1074790415);\n    return attributes;\n}\nfunction parseStringLiteral(parser, context) {\n    if (parser.getToken() === 134283267) {\n        return parseLiteral(parser, context);\n    }\n    else {\n        report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n    }\n}\nfunction parseIdentifierOrStringLiteral(parser, context) {\n    if (parser.getToken() === 134283267) {\n        return parseLiteral(parser, context);\n    }\n    else if (parser.getToken() & 143360) {\n        return parseIdentifier(parser, context);\n    }\n    else {\n        report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n    }\n}\nfunction validateStringWellFormed(parser, str) {\n    const len = str.length;\n    for (let i = 0; i < len; i++) {\n        const code = str.charCodeAt(i);\n        if ((code & 0xfc00) !== 55296)\n            continue;\n        if (code > 56319 || ++i >= len || (str.charCodeAt(i) & 0xfc00) !== 56320) {\n            report(parser, 171, JSON.stringify(str.charAt(i--)));\n        }\n    }\n}\nfunction parseModuleExportName(parser, context) {\n    if (parser.getToken() === 134283267) {\n        validateStringWellFormed(parser, parser.tokenValue);\n        return parseLiteral(parser, context);\n    }\n    else if (parser.getToken() & 143360) {\n        return parseIdentifier(parser, context);\n    }\n    else {\n        report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n    }\n}\nfunction parseBigIntLiteral(parser, context) {\n    const { tokenRaw, tokenValue, tokenStart } = parser;\n    nextToken(parser, context);\n    parser.assignable = 2;\n    const node = {\n        type: 'Literal',\n        value: tokenValue,\n        bigint: String(tokenValue),\n    };\n    if (context & 128) {\n        node.raw = tokenRaw;\n    }\n    return parser.finishNode(node, tokenStart);\n}\nfunction parseTemplateLiteral(parser, context) {\n    parser.assignable = 2;\n    const { tokenValue, tokenRaw, tokenStart } = parser;\n    consume(parser, context, 67174409);\n    const quasis = [parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenStart, true)];\n    return parser.finishNode({\n        type: 'TemplateLiteral',\n        expressions: [],\n        quasis,\n    }, tokenStart);\n}\nfunction parseTemplate(parser, context, privateScope) {\n    context = (context | 33554432) ^ 33554432;\n    const { tokenValue, tokenRaw, tokenStart } = parser;\n    consume(parser, (context & -16385) | 8192, 67174408);\n    const quasis = [parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenStart, false)];\n    const expressions = [\n        parseExpressions(parser, context & -16385, privateScope, 0, 1, parser.tokenStart),\n    ];\n    if (parser.getToken() !== 1074790415)\n        report(parser, 83);\n    while (parser.setToken(scanTemplateTail(parser, context), true) !== 67174409) {\n        const { tokenValue, tokenRaw, tokenStart } = parser;\n        consume(parser, (context & -16385) | 8192, 67174408);\n        quasis.push(parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenStart, false));\n        expressions.push(parseExpressions(parser, context, privateScope, 0, 1, parser.tokenStart));\n        if (parser.getToken() !== 1074790415)\n            report(parser, 83);\n    }\n    {\n        const { tokenValue, tokenRaw, tokenStart } = parser;\n        consume(parser, context, 67174409);\n        quasis.push(parseTemplateElement(parser, context, tokenValue, tokenRaw, tokenStart, true));\n    }\n    return parser.finishNode({\n        type: 'TemplateLiteral',\n        expressions,\n        quasis,\n    }, tokenStart);\n}\nfunction parseTemplateElement(parser, context, cooked, raw, start, tail) {\n    const node = parser.finishNode({\n        type: 'TemplateElement',\n        value: {\n            cooked,\n            raw,\n        },\n        tail,\n    }, start);\n    const tailSize = tail ? 1 : 2;\n    if (context & 2) {\n        node.start += 1;\n        node.range[0] += 1;\n        node.end -= tailSize;\n        node.range[1] -= tailSize;\n    }\n    if (context & 4) {\n        node.loc.start.column += 1;\n        node.loc.end.column -= tailSize;\n    }\n    return node;\n}\nfunction parseSpreadElement(parser, context, privateScope) {\n    const start = parser.tokenStart;\n    context = (context | 33554432) ^ 33554432;\n    consume(parser, context | 8192, 14);\n    const argument = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n    parser.assignable = 1;\n    return parser.finishNode({\n        type: 'SpreadElement',\n        argument,\n    }, start);\n}\nfunction parseArguments(parser, context, privateScope, inGroup) {\n    nextToken(parser, context | 8192);\n    const args = [];\n    if (parser.getToken() === 16) {\n        nextToken(parser, context | 16384);\n        return args;\n    }\n    while (parser.getToken() !== 16) {\n        if (parser.getToken() === 14) {\n            args.push(parseSpreadElement(parser, context, privateScope));\n        }\n        else {\n            args.push(parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart));\n        }\n        if (parser.getToken() !== 18)\n            break;\n        nextToken(parser, context | 8192);\n        if (parser.getToken() === 16)\n            break;\n    }\n    consume(parser, context | 16384, 16);\n    return args;\n}\nfunction parseIdentifier(parser, context) {\n    const { tokenValue, tokenStart } = parser;\n    const allowRegex = tokenValue === 'await' && (parser.getToken() & -2147483648) === 0;\n    nextToken(parser, context | (allowRegex ? 8192 : 0));\n    return parser.finishNode({\n        type: 'Identifier',\n        name: tokenValue,\n    }, tokenStart);\n}\nfunction parseLiteral(parser, context) {\n    const { tokenValue, tokenRaw, tokenStart } = parser;\n    if (parser.getToken() === 134283388) {\n        return parseBigIntLiteral(parser, context);\n    }\n    nextToken(parser, context);\n    parser.assignable = 2;\n    return parser.finishNode(context & 128\n        ? {\n            type: 'Literal',\n            value: tokenValue,\n            raw: tokenRaw,\n        }\n        : {\n            type: 'Literal',\n            value: tokenValue,\n        }, tokenStart);\n}\nfunction parseNullOrTrueOrFalseLiteral(parser, context) {\n    const start = parser.tokenStart;\n    const raw = KeywordDescTable[parser.getToken() & 255];\n    const value = parser.getToken() === 86023 ? null : raw === 'true';\n    nextToken(parser, context);\n    parser.assignable = 2;\n    return parser.finishNode(context & 128\n        ? {\n            type: 'Literal',\n            value,\n            raw,\n        }\n        : {\n            type: 'Literal',\n            value,\n        }, start);\n}\nfunction parseThisExpression(parser, context) {\n    const { tokenStart } = parser;\n    nextToken(parser, context);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'ThisExpression',\n    }, tokenStart);\n}\nfunction parseFunctionDeclaration(parser, context, scope, privateScope, origin, allowGen, flags, isAsync, start) {\n    nextToken(parser, context | 8192);\n    const isGenerator = allowGen ? optionalBit(parser, context, 8391476) : 0;\n    let id = null;\n    let funcNameToken;\n    let functionScope = scope ? createScope() : void 0;\n    if (parser.getToken() === 67174411) {\n        if ((flags & 1) === 0)\n            report(parser, 39, 'Function');\n    }\n    else {\n        const kind = origin & 4 && ((context & 2048) === 0 || (context & 512) === 0)\n            ? 4\n            : 64 | (isAsync ? 1024 : 0) | (isGenerator ? 1024 : 0);\n        validateFunctionName(parser, context, parser.getToken());\n        if (scope) {\n            if (kind & 4) {\n                addVarName(parser, context, scope, parser.tokenValue, kind);\n            }\n            else {\n                addBlockName(parser, context, scope, parser.tokenValue, kind, origin);\n            }\n            functionScope = addChildScope(functionScope, 256);\n            if (flags) {\n                if (flags & 2) {\n                    declareUnboundVariable(parser, parser.tokenValue);\n                }\n            }\n        }\n        funcNameToken = parser.getToken();\n        if (parser.getToken() & 143360) {\n            id = parseIdentifier(parser, context);\n        }\n        else {\n            report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n        }\n    }\n    {\n        const modifierFlags = 65536 |\n            131072 |\n            262144 |\n            524288 |\n            2097152 |\n            4194304;\n        context =\n            ((context | modifierFlags) ^ modifierFlags) |\n                16777216 |\n                (isAsync ? 524288 : 0) |\n                (isGenerator ? 262144 : 0) |\n                (isGenerator ? 0 : 67108864);\n    }\n    if (scope)\n        functionScope = addChildScope(functionScope, 512);\n    const params = parseFormalParametersOrFormalList(parser, (context | 2097152) & -268435457, functionScope, privateScope, 0, 1);\n    const modifierFlags = 2048 | 1024 | 32768 | 268435456;\n    const body = parseFunctionBody(parser, ((context | modifierFlags) ^ modifierFlags) | 8388608 | 1048576, scope ? addChildScope(functionScope, 128) : functionScope, privateScope, 8, funcNameToken, functionScope?.scopeError);\n    return parser.finishNode({\n        type: 'FunctionDeclaration',\n        id,\n        params,\n        body,\n        async: isAsync === 1,\n        generator: isGenerator === 1,\n    }, start);\n}\nfunction parseFunctionExpression(parser, context, privateScope, isAsync, inGroup, start) {\n    nextToken(parser, context | 8192);\n    const isGenerator = optionalBit(parser, context, 8391476);\n    const generatorAndAsyncFlags = (isAsync ? 524288 : 0) | (isGenerator ? 262144 : 0);\n    let id = null;\n    let funcNameToken;\n    let scope = context & 16 ? createScope() : void 0;\n    const modifierFlags = 65536 |\n        131072 |\n        262144 |\n        524288 |\n        2097152 |\n        4194304 |\n        268435456;\n    if (parser.getToken() & 143360) {\n        validateFunctionName(parser, ((context | modifierFlags) ^ modifierFlags) | generatorAndAsyncFlags, parser.getToken());\n        if (scope)\n            scope = addChildScope(scope, 256);\n        funcNameToken = parser.getToken();\n        id = parseIdentifier(parser, context);\n    }\n    context =\n        ((context | modifierFlags) ^ modifierFlags) |\n            16777216 |\n            generatorAndAsyncFlags |\n            (isGenerator ? 0 : 67108864);\n    if (scope)\n        scope = addChildScope(scope, 512);\n    const params = parseFormalParametersOrFormalList(parser, (context | 2097152) & -268435457, scope, privateScope, inGroup, 1);\n    const body = parseFunctionBody(parser, (context & -33594369) |\n        8388608 |\n        1048576, scope ? addChildScope(scope, 128) : scope, privateScope, 0, funcNameToken, scope?.scopeError);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'FunctionExpression',\n        id,\n        params,\n        body,\n        async: isAsync === 1,\n        generator: isGenerator === 1,\n    }, start);\n}\nfunction parseArrayLiteral(parser, context, privateScope, skipInitializer, inGroup) {\n    const expr = parseArrayExpressionOrPattern(parser, context, void 0, privateScope, skipInitializer, inGroup, 0, 2, 0);\n    if (parser.destructible & 64) {\n        report(parser, 63);\n    }\n    if (parser.destructible & 8) {\n        report(parser, 62);\n    }\n    return expr;\n}\nfunction parseArrayExpressionOrPattern(parser, context, scope, privateScope, skipInitializer, inGroup, isPattern, kind, origin) {\n    const { tokenStart: start } = parser;\n    nextToken(parser, context | 8192);\n    const elements = [];\n    let destructible = 0;\n    context = (context | 33554432) ^ 33554432;\n    while (parser.getToken() !== 20) {\n        if (consumeOpt(parser, context | 8192, 18)) {\n            elements.push(null);\n        }\n        else {\n            let left;\n            const { tokenStart, tokenValue } = parser;\n            const token = parser.getToken();\n            if (token & 143360) {\n                left = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, inGroup, 1, tokenStart);\n                if (parser.getToken() === 1077936155) {\n                    if (parser.assignable & 2)\n                        report(parser, 26);\n                    nextToken(parser, context | 8192);\n                    if (scope)\n                        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\n                    const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n                    left = parser.finishNode(isPattern\n                        ? {\n                            type: 'AssignmentPattern',\n                            left,\n                            right,\n                        }\n                        : {\n                            type: 'AssignmentExpression',\n                            operator: '=',\n                            left,\n                            right,\n                        }, tokenStart);\n                    destructible |=\n                        parser.destructible & 256\n                            ? 256\n                            : 0 | (parser.destructible & 128)\n                                ? 128\n                                : 0;\n                }\n                else if (parser.getToken() === 18 || parser.getToken() === 20) {\n                    if (parser.assignable & 2) {\n                        destructible |= 16;\n                    }\n                    else if (scope) {\n                        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\n                    }\n                    destructible |=\n                        parser.destructible & 256\n                            ? 256\n                            : 0 | (parser.destructible & 128)\n                                ? 128\n                                : 0;\n                }\n                else {\n                    destructible |=\n                        kind & 1\n                            ? 32\n                            : (kind & 2) === 0\n                                ? 16\n                                : 0;\n                    left = parseMemberOrUpdateExpression(parser, context, privateScope, left, inGroup, 0, tokenStart);\n                    if (parser.getToken() !== 18 && parser.getToken() !== 20) {\n                        if (parser.getToken() !== 1077936155)\n                            destructible |= 16;\n                        left = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, left);\n                    }\n                    else if (parser.getToken() !== 1077936155) {\n                        destructible |=\n                            parser.assignable & 2\n                                ? 16\n                                : 32;\n                    }\n                }\n            }\n            else if (token & 2097152) {\n                left =\n                    parser.getToken() === 2162700\n                        ? parseObjectLiteralOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin)\n                        : parseArrayExpressionOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin);\n                destructible |= parser.destructible;\n                parser.assignable =\n                    parser.destructible & 16\n                        ? 2\n                        : 1;\n                if (parser.getToken() === 18 || parser.getToken() === 20) {\n                    if (parser.assignable & 2) {\n                        destructible |= 16;\n                    }\n                }\n                else if (parser.destructible & 8) {\n                    report(parser, 71);\n                }\n                else {\n                    left = parseMemberOrUpdateExpression(parser, context, privateScope, left, inGroup, 0, tokenStart);\n                    destructible = parser.assignable & 2 ? 16 : 0;\n                    if (parser.getToken() !== 18 && parser.getToken() !== 20) {\n                        left = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, left);\n                    }\n                    else if (parser.getToken() !== 1077936155) {\n                        destructible |=\n                            parser.assignable & 2\n                                ? 16\n                                : 32;\n                    }\n                }\n            }\n            else if (token === 14) {\n                left = parseSpreadOrRestElement(parser, context, scope, privateScope, 20, kind, origin, 0, inGroup, isPattern);\n                destructible |= parser.destructible;\n                if (parser.getToken() !== 18 && parser.getToken() !== 20)\n                    report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n            }\n            else {\n                left = parseLeftHandSideExpression(parser, context, privateScope, 1, 0, 1);\n                if (parser.getToken() !== 18 && parser.getToken() !== 20) {\n                    left = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, left);\n                    if ((kind & (2 | 1)) === 0 && token === 67174411)\n                        destructible |= 16;\n                }\n                else if (parser.assignable & 2) {\n                    destructible |= 16;\n                }\n                else if (token === 67174411) {\n                    destructible |=\n                        parser.assignable & 1 && kind & (2 | 1)\n                            ? 32\n                            : 16;\n                }\n            }\n            elements.push(left);\n            if (consumeOpt(parser, context | 8192, 18)) {\n                if (parser.getToken() === 20)\n                    break;\n            }\n            else\n                break;\n        }\n    }\n    consume(parser, context, 20);\n    const node = parser.finishNode({\n        type: isPattern ? 'ArrayPattern' : 'ArrayExpression',\n        elements,\n    }, start);\n    if (!skipInitializer && parser.getToken() & 4194304) {\n        return parseArrayOrObjectAssignmentPattern(parser, context, privateScope, destructible, inGroup, isPattern, start, node);\n    }\n    parser.destructible = destructible;\n    return node;\n}\nfunction parseArrayOrObjectAssignmentPattern(parser, context, privateScope, destructible, inGroup, isPattern, start, node) {\n    if (parser.getToken() !== 1077936155)\n        report(parser, 26);\n    nextToken(parser, context | 8192);\n    if (destructible & 16)\n        report(parser, 26);\n    if (!isPattern)\n        reinterpretToPattern(parser, node);\n    const { tokenStart } = parser;\n    const right = parseExpression(parser, context, privateScope, 1, inGroup, tokenStart);\n    parser.destructible =\n        ((destructible | 64 | 8) ^\n            (8 | 64)) |\n            (parser.destructible & 128 ? 128 : 0) |\n            (parser.destructible & 256 ? 256 : 0);\n    return parser.finishNode(isPattern\n        ? {\n            type: 'AssignmentPattern',\n            left: node,\n            right,\n        }\n        : {\n            type: 'AssignmentExpression',\n            left: node,\n            operator: '=',\n            right,\n        }, start);\n}\nfunction parseSpreadOrRestElement(parser, context, scope, privateScope, closingToken, kind, origin, isAsync, inGroup, isPattern) {\n    const { tokenStart: start } = parser;\n    nextToken(parser, context | 8192);\n    let argument = null;\n    let destructible = 0;\n    const { tokenValue, tokenStart } = parser;\n    let token = parser.getToken();\n    if (token & 143360) {\n        parser.assignable = 1;\n        argument = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, inGroup, 1, tokenStart);\n        token = parser.getToken();\n        argument = parseMemberOrUpdateExpression(parser, context, privateScope, argument, inGroup, 0, tokenStart);\n        if (parser.getToken() !== 18 && parser.getToken() !== closingToken) {\n            if (parser.assignable & 2 && parser.getToken() === 1077936155)\n                report(parser, 71);\n            destructible |= 16;\n            argument = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, argument);\n        }\n        if (parser.assignable & 2) {\n            destructible |= 16;\n        }\n        else if (token === closingToken || token === 18) {\n            if (scope)\n                addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\n        }\n        else {\n            destructible |= 32;\n        }\n        destructible |= parser.destructible & 128 ? 128 : 0;\n    }\n    else if (token === closingToken) {\n        report(parser, 41);\n    }\n    else if (token & 2097152) {\n        argument =\n            parser.getToken() === 2162700\n                ? parseObjectLiteralOrPattern(parser, context, scope, privateScope, 1, inGroup, isPattern, kind, origin)\n                : parseArrayExpressionOrPattern(parser, context, scope, privateScope, 1, inGroup, isPattern, kind, origin);\n        token = parser.getToken();\n        if (token !== 1077936155 && token !== closingToken && token !== 18) {\n            if (parser.destructible & 8)\n                report(parser, 71);\n            argument = parseMemberOrUpdateExpression(parser, context, privateScope, argument, inGroup, 0, tokenStart);\n            destructible |= parser.assignable & 2 ? 16 : 0;\n            if ((parser.getToken() & 4194304) === 4194304) {\n                if (parser.getToken() !== 1077936155)\n                    destructible |= 16;\n                argument = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, argument);\n            }\n            else {\n                if ((parser.getToken() & 8388608) === 8388608) {\n                    argument = parseBinaryExpression(parser, context, privateScope, 1, tokenStart, 4, token, argument);\n                }\n                if (consumeOpt(parser, context | 8192, 22)) {\n                    argument = parseConditionalExpression(parser, context, privateScope, argument, tokenStart);\n                }\n                destructible |=\n                    parser.assignable & 2\n                        ? 16\n                        : 32;\n            }\n        }\n        else {\n            destructible |=\n                closingToken === 1074790415 && token !== 1077936155\n                    ? 16\n                    : parser.destructible;\n        }\n    }\n    else {\n        destructible |= 32;\n        argument = parseLeftHandSideExpression(parser, context, privateScope, 1, inGroup, 1);\n        const { tokenStart } = parser;\n        const token = parser.getToken();\n        if (token === 1077936155) {\n            if (parser.assignable & 2)\n                report(parser, 26);\n            argument = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, argument);\n            destructible |= 16;\n        }\n        else {\n            if (token === 18) {\n                destructible |= 16;\n            }\n            else if (token !== closingToken) {\n                argument = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, argument);\n            }\n            destructible |=\n                parser.assignable & 1 ? 32 : 16;\n        }\n        parser.destructible = destructible;\n        if (parser.getToken() !== closingToken && parser.getToken() !== 18)\n            report(parser, 161);\n        return parser.finishNode({\n            type: isPattern ? 'RestElement' : 'SpreadElement',\n            argument: argument,\n        }, start);\n    }\n    if (parser.getToken() !== closingToken) {\n        if (kind & 1)\n            destructible |= isAsync ? 16 : 32;\n        if (consumeOpt(parser, context | 8192, 1077936155)) {\n            if (destructible & 16)\n                report(parser, 26);\n            reinterpretToPattern(parser, argument);\n            const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n            argument = parser.finishNode(isPattern\n                ? {\n                    type: 'AssignmentPattern',\n                    left: argument,\n                    right,\n                }\n                : {\n                    type: 'AssignmentExpression',\n                    left: argument,\n                    operator: '=',\n                    right,\n                }, tokenStart);\n            destructible = 16;\n        }\n        else {\n            destructible |= 16;\n        }\n    }\n    parser.destructible = destructible;\n    return parser.finishNode({\n        type: isPattern ? 'RestElement' : 'SpreadElement',\n        argument: argument,\n    }, start);\n}\nfunction parseMethodDefinition(parser, context, privateScope, kind, inGroup, start) {\n    const modifierFlags = 262144 |\n        524288 |\n        2097152 |\n        ((kind & 64) === 0 ? 131072 | 4194304 : 0);\n    context =\n        ((context | modifierFlags) ^ modifierFlags) |\n            (kind & 8 ? 262144 : 0) |\n            (kind & 16 ? 524288 : 0) |\n            (kind & 64 ? 4194304 : 0) |\n            65536 |\n            8388608 |\n            16777216;\n    let scope = context & 16 ? addChildScope(createScope(), 512) : void 0;\n    const params = parseMethodFormals(parser, (context | 2097152) & -268435457, scope, privateScope, kind, 1, inGroup);\n    if (scope)\n        scope = addChildScope(scope, 128);\n    const body = parseFunctionBody(parser, (context & -301992961) |\n        8388608 |\n        1048576, scope, privateScope, 0, void 0, scope?.parent?.scopeError);\n    return parser.finishNode({\n        type: 'FunctionExpression',\n        params,\n        body,\n        async: (kind & 16) > 0,\n        generator: (kind & 8) > 0,\n        id: null,\n    }, start);\n}\nfunction parseObjectLiteral(parser, context, privateScope, skipInitializer, inGroup) {\n    const expr = parseObjectLiteralOrPattern(parser, context, void 0, privateScope, skipInitializer, inGroup, 0, 2, 0);\n    if (parser.destructible & 64) {\n        report(parser, 63);\n    }\n    if (parser.destructible & 8) {\n        report(parser, 62);\n    }\n    return expr;\n}\nfunction parseObjectLiteralOrPattern(parser, context, scope, privateScope, skipInitializer, inGroup, isPattern, kind, origin) {\n    const { tokenStart: start } = parser;\n    nextToken(parser, context);\n    const properties = [];\n    let destructible = 0;\n    let prototypeCount = 0;\n    context = (context | 33554432) ^ 33554432;\n    while (parser.getToken() !== 1074790415) {\n        const { tokenValue, tokenStart } = parser;\n        const token = parser.getToken();\n        if (token === 14) {\n            properties.push(parseSpreadOrRestElement(parser, context, scope, privateScope, 1074790415, kind, origin, 0, inGroup, isPattern));\n        }\n        else {\n            let state = 0;\n            let key = null;\n            let value;\n            if (parser.getToken() & 143360 ||\n                parser.getToken() === -2147483528 ||\n                parser.getToken() === -2147483527) {\n                if (parser.getToken() === -2147483527)\n                    destructible |= 16;\n                key = parseIdentifier(parser, context);\n                if (parser.getToken() === 18 ||\n                    parser.getToken() === 1074790415 ||\n                    parser.getToken() === 1077936155) {\n                    state |= 4;\n                    if (context & 256 && (token & 537079808) === 537079808) {\n                        destructible |= 16;\n                    }\n                    else {\n                        validateBindingIdentifier(parser, context, kind, token, 0);\n                    }\n                    if (scope)\n                        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\n                    if (consumeOpt(parser, context | 8192, 1077936155)) {\n                        destructible |= 8;\n                        const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n                        destructible |=\n                            parser.destructible & 256\n                                ? 256\n                                : 0 | (parser.destructible & 128)\n                                    ? 128\n                                    : 0;\n                        value = parser.finishNode({\n                            type: 'AssignmentPattern',\n                            left: context & 134217728 ? Object.assign({}, key) : key,\n                            right,\n                        }, tokenStart);\n                    }\n                    else {\n                        destructible |=\n                            (token === 209006 ? 128 : 0) |\n                                (token === -2147483528 ? 16 : 0);\n                        value = context & 134217728 ? Object.assign({}, key) : key;\n                    }\n                }\n                else if (consumeOpt(parser, context | 8192, 21)) {\n                    const { tokenStart } = parser;\n                    if (tokenValue === '__proto__')\n                        prototypeCount++;\n                    if (parser.getToken() & 143360) {\n                        const tokenAfterColon = parser.getToken();\n                        const valueAfterColon = parser.tokenValue;\n                        value = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, inGroup, 1, tokenStart);\n                        const token = parser.getToken();\n                        value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (token === 1077936155 || token === 1074790415 || token === 18) {\n                                destructible |= parser.destructible & 128 ? 128 : 0;\n                                if (parser.assignable & 2) {\n                                    destructible |= 16;\n                                }\n                                else if (scope && (tokenAfterColon & 143360) === 143360) {\n                                    addVarOrBlock(parser, context, scope, valueAfterColon, kind, origin);\n                                }\n                            }\n                            else {\n                                destructible |=\n                                    parser.assignable & 1\n                                        ? 32\n                                        : 16;\n                            }\n                        }\n                        else if ((parser.getToken() & 4194304) === 4194304) {\n                            if (parser.assignable & 2) {\n                                destructible |= 16;\n                            }\n                            else if (token !== 1077936155) {\n                                destructible |= 32;\n                            }\n                            else if (scope) {\n                                addVarOrBlock(parser, context, scope, valueAfterColon, kind, origin);\n                            }\n                            value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                        }\n                        else {\n                            destructible |= 16;\n                            if ((parser.getToken() & 8388608) === 8388608) {\n                                value = parseBinaryExpression(parser, context, privateScope, 1, tokenStart, 4, token, value);\n                            }\n                            if (consumeOpt(parser, context | 8192, 22)) {\n                                value = parseConditionalExpression(parser, context, privateScope, value, tokenStart);\n                            }\n                        }\n                    }\n                    else if ((parser.getToken() & 2097152) === 2097152) {\n                        value =\n                            parser.getToken() === 69271571\n                                ? parseArrayExpressionOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin)\n                                : parseObjectLiteralOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin);\n                        destructible = parser.destructible;\n                        parser.assignable =\n                            destructible & 16 ? 2 : 1;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2)\n                                destructible |= 16;\n                        }\n                        else if (parser.destructible & 8) {\n                            report(parser, 71);\n                        }\n                        else {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible = parser.assignable & 2 ? 16 : 0;\n                            if ((parser.getToken() & 4194304) === 4194304) {\n                                value = parseAssignmentExpressionOrPattern(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                            else {\n                                if ((parser.getToken() & 8388608) === 8388608) {\n                                    value = parseBinaryExpression(parser, context, privateScope, 1, tokenStart, 4, token, value);\n                                }\n                                if (consumeOpt(parser, context | 8192, 22)) {\n                                    value = parseConditionalExpression(parser, context, privateScope, value, tokenStart);\n                                }\n                                destructible |=\n                                    parser.assignable & 2\n                                        ? 16\n                                        : 32;\n                            }\n                        }\n                    }\n                    else {\n                        value = parseLeftHandSideExpression(parser, context, privateScope, 1, inGroup, 1);\n                        destructible |=\n                            parser.assignable & 1\n                                ? 32\n                                : 16;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2)\n                                destructible |= 16;\n                        }\n                        else {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible = parser.assignable & 2 ? 16 : 0;\n                            if (parser.getToken() !== 18 && token !== 1074790415) {\n                                if (parser.getToken() !== 1077936155)\n                                    destructible |= 16;\n                                value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                        }\n                    }\n                }\n                else if (parser.getToken() === 69271571) {\n                    destructible |= 16;\n                    if (token === 209005)\n                        state |= 16;\n                    state |=\n                        (token === 209008\n                            ? 256\n                            : token === 209009\n                                ? 512\n                                : 1) | 2;\n                    key = parseComputedPropertyName(parser, context, privateScope, inGroup);\n                    destructible |= parser.assignable;\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else if (parser.getToken() & 143360) {\n                    destructible |= 16;\n                    if (token === -2147483528)\n                        report(parser, 95);\n                    if (token === 209005) {\n                        if (parser.flags & 1)\n                            report(parser, 132);\n                        state |= 16 | 1;\n                    }\n                    else if (token === 209008) {\n                        state |= 256;\n                    }\n                    else if (token === 209009) {\n                        state |= 512;\n                    }\n                    else {\n                        report(parser, 0);\n                    }\n                    key = parseIdentifier(parser, context);\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else if (parser.getToken() === 67174411) {\n                    destructible |= 16;\n                    state |= 1;\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else if (parser.getToken() === 8391476) {\n                    destructible |= 16;\n                    if (token === 209008) {\n                        report(parser, 42);\n                    }\n                    else if (token === 209009) {\n                        report(parser, 43);\n                    }\n                    else if (token !== 209005) {\n                        report(parser, 30, KeywordDescTable[8391476 & 255]);\n                    }\n                    nextToken(parser, context);\n                    state |=\n                        8 | 1 | (token === 209005 ? 16 : 0);\n                    if (parser.getToken() & 143360) {\n                        key = parseIdentifier(parser, context);\n                    }\n                    else if ((parser.getToken() & 134217728) === 134217728) {\n                        key = parseLiteral(parser, context);\n                    }\n                    else if (parser.getToken() === 69271571) {\n                        state |= 2;\n                        key = parseComputedPropertyName(parser, context, privateScope, inGroup);\n                        destructible |= parser.assignable;\n                    }\n                    else {\n                        report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n                    }\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else if ((parser.getToken() & 134217728) === 134217728) {\n                    if (token === 209005)\n                        state |= 16;\n                    state |=\n                        token === 209008\n                            ? 256\n                            : token === 209009\n                                ? 512\n                                : 1;\n                    destructible |= 16;\n                    key = parseLiteral(parser, context);\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else {\n                    report(parser, 133);\n                }\n            }\n            else if ((parser.getToken() & 134217728) === 134217728) {\n                key = parseLiteral(parser, context);\n                if (parser.getToken() === 21) {\n                    consume(parser, context | 8192, 21);\n                    const { tokenStart } = parser;\n                    if (tokenValue === '__proto__')\n                        prototypeCount++;\n                    if (parser.getToken() & 143360) {\n                        value = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, inGroup, 1, tokenStart);\n                        const { tokenValue: valueAfterColon } = parser;\n                        const token = parser.getToken();\n                        value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (token === 1077936155 || token === 1074790415 || token === 18) {\n                                if (parser.assignable & 2) {\n                                    destructible |= 16;\n                                }\n                                else if (scope) {\n                                    addVarOrBlock(parser, context, scope, valueAfterColon, kind, origin);\n                                }\n                            }\n                            else {\n                                destructible |=\n                                    parser.assignable & 1\n                                        ? 32\n                                        : 16;\n                            }\n                        }\n                        else if (parser.getToken() === 1077936155) {\n                            if (parser.assignable & 2)\n                                destructible |= 16;\n                            value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                        }\n                        else {\n                            destructible |= 16;\n                            value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                        }\n                    }\n                    else if ((parser.getToken() & 2097152) === 2097152) {\n                        value =\n                            parser.getToken() === 69271571\n                                ? parseArrayExpressionOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin)\n                                : parseObjectLiteralOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin);\n                        destructible = parser.destructible;\n                        parser.assignable =\n                            destructible & 16 ? 2 : 1;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2) {\n                                destructible |= 16;\n                            }\n                        }\n                        else if ((parser.destructible & 8) !== 8) {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible = parser.assignable & 2 ? 16 : 0;\n                            if ((parser.getToken() & 4194304) === 4194304) {\n                                value = parseAssignmentExpressionOrPattern(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                            else {\n                                if ((parser.getToken() & 8388608) === 8388608) {\n                                    value = parseBinaryExpression(parser, context, privateScope, 1, tokenStart, 4, token, value);\n                                }\n                                if (consumeOpt(parser, context | 8192, 22)) {\n                                    value = parseConditionalExpression(parser, context, privateScope, value, tokenStart);\n                                }\n                                destructible |=\n                                    parser.assignable & 2\n                                        ? 16\n                                        : 32;\n                            }\n                        }\n                    }\n                    else {\n                        value = parseLeftHandSideExpression(parser, context, privateScope, 1, 0, 1);\n                        destructible |=\n                            parser.assignable & 1\n                                ? 32\n                                : 16;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2) {\n                                destructible |= 16;\n                            }\n                        }\n                        else {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible = parser.assignable & 1 ? 0 : 16;\n                            if (parser.getToken() !== 18 && parser.getToken() !== 1074790415) {\n                                if (parser.getToken() !== 1077936155)\n                                    destructible |= 16;\n                                value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                        }\n                    }\n                }\n                else if (parser.getToken() === 67174411) {\n                    state |= 1;\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                    destructible = parser.assignable | 16;\n                }\n                else {\n                    report(parser, 134);\n                }\n            }\n            else if (parser.getToken() === 69271571) {\n                key = parseComputedPropertyName(parser, context, privateScope, inGroup);\n                destructible |= parser.destructible & 256 ? 256 : 0;\n                state |= 2;\n                if (parser.getToken() === 21) {\n                    nextToken(parser, context | 8192);\n                    const { tokenStart, tokenValue } = parser;\n                    const tokenAfterColon = parser.getToken();\n                    if (parser.getToken() & 143360) {\n                        value = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, inGroup, 1, tokenStart);\n                        const token = parser.getToken();\n                        value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                        if ((parser.getToken() & 4194304) === 4194304) {\n                            destructible |=\n                                parser.assignable & 2\n                                    ? 16\n                                    : token === 1077936155\n                                        ? 0\n                                        : 32;\n                            value = parseAssignmentExpressionOrPattern(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                        }\n                        else if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (token === 1077936155 || token === 1074790415 || token === 18) {\n                                if (parser.assignable & 2) {\n                                    destructible |= 16;\n                                }\n                                else if (scope && (tokenAfterColon & 143360) === 143360) {\n                                    addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\n                                }\n                            }\n                            else {\n                                destructible |=\n                                    parser.assignable & 1\n                                        ? 32\n                                        : 16;\n                            }\n                        }\n                        else {\n                            destructible |= 16;\n                            value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                        }\n                    }\n                    else if ((parser.getToken() & 2097152) === 2097152) {\n                        value =\n                            parser.getToken() === 69271571\n                                ? parseArrayExpressionOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin)\n                                : parseObjectLiteralOrPattern(parser, context, scope, privateScope, 0, inGroup, isPattern, kind, origin);\n                        destructible = parser.destructible;\n                        parser.assignable =\n                            destructible & 16 ? 2 : 1;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2)\n                                destructible |= 16;\n                        }\n                        else if (destructible & 8) {\n                            report(parser, 62);\n                        }\n                        else {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible =\n                                parser.assignable & 2 ? destructible | 16 : 0;\n                            if ((parser.getToken() & 4194304) === 4194304) {\n                                if (parser.getToken() !== 1077936155)\n                                    destructible |= 16;\n                                value = parseAssignmentExpressionOrPattern(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                            else {\n                                if ((parser.getToken() & 8388608) === 8388608) {\n                                    value = parseBinaryExpression(parser, context, privateScope, 1, tokenStart, 4, token, value);\n                                }\n                                if (consumeOpt(parser, context | 8192, 22)) {\n                                    value = parseConditionalExpression(parser, context, privateScope, value, tokenStart);\n                                }\n                                destructible |=\n                                    parser.assignable & 2\n                                        ? 16\n                                        : 32;\n                            }\n                        }\n                    }\n                    else {\n                        value = parseLeftHandSideExpression(parser, context, privateScope, 1, 0, 1);\n                        destructible |=\n                            parser.assignable & 1\n                                ? 32\n                                : 16;\n                        if (parser.getToken() === 18 || parser.getToken() === 1074790415) {\n                            if (parser.assignable & 2)\n                                destructible |= 16;\n                        }\n                        else {\n                            value = parseMemberOrUpdateExpression(parser, context, privateScope, value, inGroup, 0, tokenStart);\n                            destructible = parser.assignable & 1 ? 0 : 16;\n                            if (parser.getToken() !== 18 && parser.getToken() !== 1074790415) {\n                                if (parser.getToken() !== 1077936155)\n                                    destructible |= 16;\n                                value = parseAssignmentExpression(parser, context, privateScope, inGroup, isPattern, tokenStart, value);\n                            }\n                        }\n                    }\n                }\n                else if (parser.getToken() === 67174411) {\n                    state |= 1;\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                    destructible = 16;\n                }\n                else {\n                    report(parser, 44);\n                }\n            }\n            else if (token === 8391476) {\n                consume(parser, context | 8192, 8391476);\n                state |= 8;\n                if (parser.getToken() & 143360) {\n                    const token = parser.getToken();\n                    key = parseIdentifier(parser, context);\n                    state |= 1;\n                    if (parser.getToken() === 67174411) {\n                        destructible |= 16;\n                        value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                    }\n                    else {\n                        reportMessageAt(parser.tokenStart, parser.currentLocation, token === 209005\n                            ? 46\n                            : token === 209008 || parser.getToken() === 209009\n                                ? 45\n                                : 47, KeywordDescTable[token & 255]);\n                    }\n                }\n                else if ((parser.getToken() & 134217728) === 134217728) {\n                    destructible |= 16;\n                    key = parseLiteral(parser, context);\n                    state |= 1;\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else if (parser.getToken() === 69271571) {\n                    destructible |= 16;\n                    state |= 2 | 1;\n                    key = parseComputedPropertyName(parser, context, privateScope, inGroup);\n                    value = parseMethodDefinition(parser, context, privateScope, state, inGroup, parser.tokenStart);\n                }\n                else {\n                    report(parser, 126);\n                }\n            }\n            else {\n                report(parser, 30, KeywordDescTable[token & 255]);\n            }\n            destructible |= parser.destructible & 128 ? 128 : 0;\n            parser.destructible = destructible;\n            properties.push(parser.finishNode({\n                type: 'Property',\n                key: key,\n                value,\n                kind: !(state & 768) ? 'init' : state & 512 ? 'set' : 'get',\n                computed: (state & 2) > 0,\n                method: (state & 1) > 0,\n                shorthand: (state & 4) > 0,\n            }, tokenStart));\n        }\n        destructible |= parser.destructible;\n        if (parser.getToken() !== 18)\n            break;\n        nextToken(parser, context);\n    }\n    consume(parser, context, 1074790415);\n    if (prototypeCount > 1)\n        destructible |= 64;\n    const node = parser.finishNode({\n        type: isPattern ? 'ObjectPattern' : 'ObjectExpression',\n        properties,\n    }, start);\n    if (!skipInitializer && parser.getToken() & 4194304) {\n        return parseArrayOrObjectAssignmentPattern(parser, context, privateScope, destructible, inGroup, isPattern, start, node);\n    }\n    parser.destructible = destructible;\n    return node;\n}\nfunction parseMethodFormals(parser, context, scope, privateScope, kind, type, inGroup) {\n    consume(parser, context, 67174411);\n    const params = [];\n    parser.flags = (parser.flags | 128) ^ 128;\n    if (parser.getToken() === 16) {\n        if (kind & 512) {\n            report(parser, 37, 'Setter', 'one', '');\n        }\n        nextToken(parser, context);\n        return params;\n    }\n    if (kind & 256) {\n        report(parser, 37, 'Getter', 'no', 's');\n    }\n    if (kind & 512 && parser.getToken() === 14) {\n        report(parser, 38);\n    }\n    context = (context | 33554432) ^ 33554432;\n    let setterArgs = 0;\n    let isNonSimpleParameterList = 0;\n    while (parser.getToken() !== 18) {\n        let left = null;\n        const { tokenStart } = parser;\n        if (parser.getToken() & 143360) {\n            if ((context & 256) === 0) {\n                if ((parser.getToken() & 36864) === 36864) {\n                    parser.flags |= 256;\n                }\n                if ((parser.getToken() & 537079808) === 537079808) {\n                    parser.flags |= 512;\n                }\n            }\n            left = parseAndClassifyIdentifier(parser, context, scope, kind | 1, 0);\n        }\n        else {\n            if (parser.getToken() === 2162700) {\n                left = parseObjectLiteralOrPattern(parser, context, scope, privateScope, 1, inGroup, 1, type, 0);\n            }\n            else if (parser.getToken() === 69271571) {\n                left = parseArrayExpressionOrPattern(parser, context, scope, privateScope, 1, inGroup, 1, type, 0);\n            }\n            else if (parser.getToken() === 14) {\n                left = parseSpreadOrRestElement(parser, context, scope, privateScope, 16, type, 0, 0, inGroup, 1);\n            }\n            isNonSimpleParameterList = 1;\n            if (parser.destructible & (32 | 16))\n                report(parser, 50);\n        }\n        if (parser.getToken() === 1077936155) {\n            nextToken(parser, context | 8192);\n            isNonSimpleParameterList = 1;\n            const right = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n            left = parser.finishNode({\n                type: 'AssignmentPattern',\n                left: left,\n                right,\n            }, tokenStart);\n        }\n        setterArgs++;\n        params.push(left);\n        if (!consumeOpt(parser, context, 18))\n            break;\n        if (parser.getToken() === 16) {\n            break;\n        }\n    }\n    if (kind & 512 && setterArgs !== 1) {\n        report(parser, 37, 'Setter', 'one', '');\n    }\n    if (scope && scope.scopeError)\n        reportScopeError(scope.scopeError);\n    if (isNonSimpleParameterList)\n        parser.flags |= 128;\n    consume(parser, context, 16);\n    return params;\n}\nfunction parseComputedPropertyName(parser, context, privateScope, inGroup) {\n    nextToken(parser, context | 8192);\n    const key = parseExpression(parser, (context | 33554432) ^ 33554432, privateScope, 1, inGroup, parser.tokenStart);\n    consume(parser, context, 20);\n    return key;\n}\nfunction parseParenthesizedExpression(parser, context, privateScope, canAssign, kind, origin, start) {\n    parser.flags = (parser.flags | 128) ^ 128;\n    const parenthesesStart = parser.tokenStart;\n    nextToken(parser, context | 8192 | 67108864);\n    const scope = context & 16 ? addChildScope(createScope(), 1024) : void 0;\n    context = (context | 33554432) ^ 33554432;\n    if (consumeOpt(parser, context, 16)) {\n        return parseParenthesizedArrow(parser, context, scope, privateScope, [], canAssign, 0, start);\n    }\n    let destructible = 0;\n    parser.destructible &= -385;\n    let expr;\n    let expressions = [];\n    let isSequence = 0;\n    let isNonSimpleParameterList = 0;\n    let hasStrictReserved = 0;\n    const tokenAfterParenthesesStart = parser.tokenStart;\n    parser.assignable = 1;\n    while (parser.getToken() !== 16) {\n        const { tokenStart } = parser;\n        const token = parser.getToken();\n        if (token & 143360) {\n            if (scope)\n                addBlockName(parser, context, scope, parser.tokenValue, 1, 0);\n            if ((token & 537079808) === 537079808) {\n                isNonSimpleParameterList = 1;\n            }\n            else if ((token & 36864) === 36864) {\n                hasStrictReserved = 1;\n            }\n            expr = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, 1, 1, tokenStart);\n            if (parser.getToken() === 16 || parser.getToken() === 18) {\n                if (parser.assignable & 2) {\n                    destructible |= 16;\n                    isNonSimpleParameterList = 1;\n                }\n            }\n            else {\n                if (parser.getToken() === 1077936155) {\n                    isNonSimpleParameterList = 1;\n                }\n                else {\n                    destructible |= 16;\n                }\n                expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 1, 0, tokenStart);\n                if (parser.getToken() !== 16 && parser.getToken() !== 18) {\n                    expr = parseAssignmentExpression(parser, context, privateScope, 1, 0, tokenStart, expr);\n                }\n            }\n        }\n        else if ((token & 2097152) === 2097152) {\n            expr =\n                token === 2162700\n                    ? parseObjectLiteralOrPattern(parser, context | 67108864, scope, privateScope, 0, 1, 0, kind, origin)\n                    : parseArrayExpressionOrPattern(parser, context | 67108864, scope, privateScope, 0, 1, 0, kind, origin);\n            destructible |= parser.destructible;\n            isNonSimpleParameterList = 1;\n            parser.assignable = 2;\n            if (parser.getToken() !== 16 && parser.getToken() !== 18) {\n                if (destructible & 8)\n                    report(parser, 122);\n                expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, tokenStart);\n                destructible |= 16;\n                if (parser.getToken() !== 16 && parser.getToken() !== 18) {\n                    expr = parseAssignmentExpression(parser, context, privateScope, 0, 0, tokenStart, expr);\n                }\n            }\n        }\n        else if (token === 14) {\n            expr = parseSpreadOrRestElement(parser, context, scope, privateScope, 16, kind, origin, 0, 1, 0);\n            if (parser.destructible & 16)\n                report(parser, 74);\n            isNonSimpleParameterList = 1;\n            if (isSequence && (parser.getToken() === 16 || parser.getToken() === 18)) {\n                expressions.push(expr);\n            }\n            destructible |= 8;\n            break;\n        }\n        else {\n            destructible |= 16;\n            expr = parseExpression(parser, context, privateScope, 1, 1, tokenStart);\n            if (isSequence && (parser.getToken() === 16 || parser.getToken() === 18)) {\n                expressions.push(expr);\n            }\n            if (parser.getToken() === 18) {\n                if (!isSequence) {\n                    isSequence = 1;\n                    expressions = [expr];\n                }\n            }\n            if (isSequence) {\n                while (consumeOpt(parser, context | 8192, 18)) {\n                    expressions.push(parseExpression(parser, context, privateScope, 1, 1, parser.tokenStart));\n                }\n                parser.assignable = 2;\n                expr = parser.finishNode({\n                    type: 'SequenceExpression',\n                    expressions,\n                }, tokenAfterParenthesesStart);\n            }\n            consume(parser, context, 16);\n            parser.destructible = destructible;\n            return context & 32\n                ? parser.finishNode({\n                    type: 'ParenthesizedExpression',\n                    expression: expr,\n                }, parenthesesStart)\n                : expr;\n        }\n        if (isSequence && (parser.getToken() === 16 || parser.getToken() === 18)) {\n            expressions.push(expr);\n        }\n        if (!consumeOpt(parser, context | 8192, 18))\n            break;\n        if (!isSequence) {\n            isSequence = 1;\n            expressions = [expr];\n        }\n        if (parser.getToken() === 16) {\n            destructible |= 8;\n            break;\n        }\n    }\n    if (isSequence) {\n        parser.assignable = 2;\n        expr = parser.finishNode({\n            type: 'SequenceExpression',\n            expressions,\n        }, tokenAfterParenthesesStart);\n    }\n    consume(parser, context, 16);\n    if (destructible & 16 && destructible & 8)\n        report(parser, 151);\n    destructible |=\n        parser.destructible & 256\n            ? 256\n            : 0 | (parser.destructible & 128)\n                ? 128\n                : 0;\n    if (parser.getToken() === 10) {\n        if (destructible & (32 | 16))\n            report(parser, 49);\n        if (context & (524288 | 512) && destructible & 128)\n            report(parser, 31);\n        if (context & (256 | 262144) && destructible & 256) {\n            report(parser, 32);\n        }\n        if (isNonSimpleParameterList)\n            parser.flags |= 128;\n        if (hasStrictReserved)\n            parser.flags |= 256;\n        return parseParenthesizedArrow(parser, context, scope, privateScope, isSequence ? expressions : [expr], canAssign, 0, start);\n    }\n    if (destructible & 64) {\n        report(parser, 63);\n    }\n    if (destructible & 8) {\n        report(parser, 144);\n    }\n    parser.destructible = ((parser.destructible | 256) ^ 256) | destructible;\n    return context & 32\n        ? parser.finishNode({\n            type: 'ParenthesizedExpression',\n            expression: expr,\n        }, parenthesesStart)\n        : expr;\n}\nfunction parseIdentifierOrArrow(parser, context, privateScope) {\n    const { tokenStart: start } = parser;\n    const { tokenValue } = parser;\n    let isNonSimpleParameterList = 0;\n    let hasStrictReserved = 0;\n    if ((parser.getToken() & 537079808) === 537079808) {\n        isNonSimpleParameterList = 1;\n    }\n    else if ((parser.getToken() & 36864) === 36864) {\n        hasStrictReserved = 1;\n    }\n    const expr = parseIdentifier(parser, context);\n    parser.assignable = 1;\n    if (parser.getToken() === 10) {\n        let scope = void 0;\n        if (context & 16)\n            scope = createArrowHeadParsingScope(parser, context, tokenValue);\n        if (isNonSimpleParameterList)\n            parser.flags |= 128;\n        if (hasStrictReserved)\n            parser.flags |= 256;\n        return parseArrowFunctionExpression(parser, context, scope, privateScope, [expr], 0, start);\n    }\n    return expr;\n}\nfunction parseArrowFromIdentifier(parser, context, privateScope, value, expr, inNew, canAssign, isAsync, start) {\n    if (!canAssign)\n        report(parser, 57);\n    if (inNew)\n        report(parser, 51);\n    parser.flags &= -129;\n    const scope = context & 16 ? createArrowHeadParsingScope(parser, context, value) : void 0;\n    return parseArrowFunctionExpression(parser, context, scope, privateScope, [expr], isAsync, start);\n}\nfunction parseParenthesizedArrow(parser, context, scope, privateScope, params, canAssign, isAsync, start) {\n    if (!canAssign)\n        report(parser, 57);\n    for (let i = 0; i < params.length; ++i)\n        reinterpretToPattern(parser, params[i]);\n    return parseArrowFunctionExpression(parser, context, scope, privateScope, params, isAsync, start);\n}\nfunction parseArrowFunctionExpression(parser, context, scope, privateScope, params, isAsync, start) {\n    if (parser.flags & 1)\n        report(parser, 48);\n    consume(parser, context | 8192, 10);\n    const modifierFlags = 262144 | 524288 | 2097152 | 268435456;\n    context = ((context | modifierFlags) ^ modifierFlags) | (isAsync ? 524288 : 0);\n    const expression = parser.getToken() !== 2162700;\n    let body;\n    if (scope && scope.scopeError)\n        reportScopeError(scope.scopeError);\n    if (expression) {\n        parser.flags =\n            (parser.flags | 512 | 256 | 64 | 4096) ^\n                (512 | 256 | 64 | 4096);\n        body = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n    }\n    else {\n        if (scope)\n            scope = addChildScope(scope, 128);\n        const modifierFlags = 1024 | 33554432 | 2048;\n        body = parseFunctionBody(parser, ((context | modifierFlags) ^ modifierFlags) | 1048576, scope, privateScope, 16, void 0, void 0);\n        switch (parser.getToken()) {\n            case 69271571:\n                if ((parser.flags & 1) === 0) {\n                    report(parser, 116);\n                }\n                break;\n            case 67108877:\n            case 67174409:\n            case 22:\n                report(parser, 117);\n            case 67174411:\n                if ((parser.flags & 1) === 0) {\n                    report(parser, 116);\n                }\n                parser.flags |= 1024;\n                break;\n        }\n        if ((parser.getToken() & 8388608) === 8388608 && (parser.flags & 1) === 0)\n            report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n        if ((parser.getToken() & 33619968) === 33619968)\n            report(parser, 125);\n    }\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'ArrowFunctionExpression',\n        params,\n        body,\n        async: isAsync === 1,\n        expression,\n        generator: false,\n    }, start);\n}\nfunction parseFormalParametersOrFormalList(parser, context, scope, privateScope, inGroup, kind) {\n    consume(parser, context, 67174411);\n    parser.flags = (parser.flags | 128) ^ 128;\n    const params = [];\n    if (consumeOpt(parser, context, 16))\n        return params;\n    context = (context | 33554432) ^ 33554432;\n    let isNonSimpleParameterList = 0;\n    while (parser.getToken() !== 18) {\n        let left;\n        const { tokenStart } = parser;\n        const token = parser.getToken();\n        if (token & 143360) {\n            if ((context & 256) === 0) {\n                if ((token & 36864) === 36864) {\n                    parser.flags |= 256;\n                }\n                if ((token & 537079808) === 537079808) {\n                    parser.flags |= 512;\n                }\n            }\n            left = parseAndClassifyIdentifier(parser, context, scope, kind | 1, 0);\n        }\n        else {\n            if (token === 2162700) {\n                left = parseObjectLiteralOrPattern(parser, context, scope, privateScope, 1, inGroup, 1, kind, 0);\n            }\n            else if (token === 69271571) {\n                left = parseArrayExpressionOrPattern(parser, context, scope, privateScope, 1, inGroup, 1, kind, 0);\n            }\n            else if (token === 14) {\n                left = parseSpreadOrRestElement(parser, context, scope, privateScope, 16, kind, 0, 0, inGroup, 1);\n            }\n            else {\n                report(parser, 30, KeywordDescTable[token & 255]);\n            }\n            isNonSimpleParameterList = 1;\n            if (parser.destructible & (32 | 16)) {\n                report(parser, 50);\n            }\n        }\n        if (parser.getToken() === 1077936155) {\n            nextToken(parser, context | 8192);\n            isNonSimpleParameterList = 1;\n            const right = parseExpression(parser, context, privateScope, 1, inGroup, parser.tokenStart);\n            left = parser.finishNode({\n                type: 'AssignmentPattern',\n                left,\n                right,\n            }, tokenStart);\n        }\n        params.push(left);\n        if (!consumeOpt(parser, context, 18))\n            break;\n        if (parser.getToken() === 16) {\n            break;\n        }\n    }\n    if (isNonSimpleParameterList)\n        parser.flags |= 128;\n    if (scope && (isNonSimpleParameterList || context & 256) && scope.scopeError) {\n        reportScopeError(scope.scopeError);\n    }\n    consume(parser, context, 16);\n    return params;\n}\nfunction parseMemberExpressionNoCall(parser, context, privateScope, expr, inGroup, start) {\n    const token = parser.getToken();\n    if (token & 67108864) {\n        if (token === 67108877) {\n            nextToken(parser, context | 67108864);\n            parser.assignable = 1;\n            const property = parsePropertyOrPrivatePropertyName(parser, context, privateScope);\n            return parseMemberExpressionNoCall(parser, context, privateScope, parser.finishNode({\n                type: 'MemberExpression',\n                object: expr,\n                computed: false,\n                property,\n                optional: false,\n            }, start), 0, start);\n        }\n        else if (token === 69271571) {\n            nextToken(parser, context | 8192);\n            const { tokenStart } = parser;\n            const property = parseExpressions(parser, context, privateScope, inGroup, 1, tokenStart);\n            consume(parser, context, 20);\n            parser.assignable = 1;\n            return parseMemberExpressionNoCall(parser, context, privateScope, parser.finishNode({\n                type: 'MemberExpression',\n                object: expr,\n                computed: true,\n                property,\n                optional: false,\n            }, start), 0, start);\n        }\n        else if (token === 67174408 || token === 67174409) {\n            parser.assignable = 2;\n            return parseMemberExpressionNoCall(parser, context, privateScope, parser.finishNode({\n                type: 'TaggedTemplateExpression',\n                tag: expr,\n                quasi: parser.getToken() === 67174408\n                    ? parseTemplate(parser, context | 16384, privateScope)\n                    : parseTemplateLiteral(parser, context | 16384),\n            }, start), 0, start);\n        }\n    }\n    return expr;\n}\nfunction parseNewExpression(parser, context, privateScope, inGroup) {\n    const { tokenStart: start } = parser;\n    const id = parseIdentifier(parser, context | 8192);\n    const { tokenStart } = parser;\n    if (consumeOpt(parser, context, 67108877)) {\n        if (context & 16777216 && parser.getToken() === 209029) {\n            parser.assignable = 2;\n            return parseMetaProperty(parser, context, id, start);\n        }\n        report(parser, 94);\n    }\n    parser.assignable = 2;\n    if ((parser.getToken() & 16842752) === 16842752) {\n        report(parser, 65, KeywordDescTable[parser.getToken() & 255]);\n    }\n    const expr = parsePrimaryExpression(parser, context, privateScope, 2, 1, 0, inGroup, 1, tokenStart);\n    context = (context | 33554432) ^ 33554432;\n    if (parser.getToken() === 67108990)\n        report(parser, 168);\n    const callee = parseMemberExpressionNoCall(parser, context, privateScope, expr, inGroup, tokenStart);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'NewExpression',\n        callee,\n        arguments: parser.getToken() === 67174411 ? parseArguments(parser, context, privateScope, inGroup) : [],\n    }, start);\n}\nfunction parseMetaProperty(parser, context, meta, start) {\n    const property = parseIdentifier(parser, context);\n    return parser.finishNode({\n        type: 'MetaProperty',\n        meta,\n        property,\n    }, start);\n}\nfunction parseAsyncArrowAfterIdent(parser, context, privateScope, canAssign, start) {\n    if (parser.getToken() === 209006)\n        report(parser, 31);\n    if (context & (256 | 262144) && parser.getToken() === 241771) {\n        report(parser, 32);\n    }\n    classifyIdentifier(parser, context, parser.getToken());\n    if ((parser.getToken() & 36864) === 36864) {\n        parser.flags |= 256;\n    }\n    return parseArrowFromIdentifier(parser, (context & -268435457) | 524288, privateScope, parser.tokenValue, parseIdentifier(parser, context), 0, canAssign, 1, start);\n}\nfunction parseAsyncArrowOrCallExpression(parser, context, privateScope, callee, canAssign, kind, origin, flags, start) {\n    nextToken(parser, context | 8192);\n    const scope = context & 16 ? addChildScope(createScope(), 1024) : void 0;\n    context = (context | 33554432) ^ 33554432;\n    if (consumeOpt(parser, context, 16)) {\n        if (parser.getToken() === 10) {\n            if (flags & 1)\n                report(parser, 48);\n            return parseParenthesizedArrow(parser, context, scope, privateScope, [], canAssign, 1, start);\n        }\n        return parser.finishNode({\n            type: 'CallExpression',\n            callee,\n            arguments: [],\n            optional: false,\n        }, start);\n    }\n    let destructible = 0;\n    let expr = null;\n    let isNonSimpleParameterList = 0;\n    parser.destructible =\n        (parser.destructible | 256 | 128) ^\n            (256 | 128);\n    const params = [];\n    while (parser.getToken() !== 16) {\n        const { tokenStart } = parser;\n        const token = parser.getToken();\n        if (token & 143360) {\n            if (scope)\n                addBlockName(parser, context, scope, parser.tokenValue, kind, 0);\n            if ((token & 537079808) === 537079808) {\n                parser.flags |= 512;\n            }\n            else if ((token & 36864) === 36864) {\n                parser.flags |= 256;\n            }\n            expr = parsePrimaryExpression(parser, context, privateScope, kind, 0, 1, 1, 1, tokenStart);\n            if (parser.getToken() === 16 || parser.getToken() === 18) {\n                if (parser.assignable & 2) {\n                    destructible |= 16;\n                    isNonSimpleParameterList = 1;\n                }\n            }\n            else {\n                if (parser.getToken() === 1077936155) {\n                    isNonSimpleParameterList = 1;\n                }\n                else {\n                    destructible |= 16;\n                }\n                expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 1, 0, tokenStart);\n                if (parser.getToken() !== 16 && parser.getToken() !== 18) {\n                    expr = parseAssignmentExpression(parser, context, privateScope, 1, 0, tokenStart, expr);\n                }\n            }\n        }\n        else if (token & 2097152) {\n            expr =\n                token === 2162700\n                    ? parseObjectLiteralOrPattern(parser, context, scope, privateScope, 0, 1, 0, kind, origin)\n                    : parseArrayExpressionOrPattern(parser, context, scope, privateScope, 0, 1, 0, kind, origin);\n            destructible |= parser.destructible;\n            isNonSimpleParameterList = 1;\n            if (parser.getToken() !== 16 && parser.getToken() !== 18) {\n                if (destructible & 8)\n                    report(parser, 122);\n                expr = parseMemberOrUpdateExpression(parser, context, privateScope, expr, 0, 0, tokenStart);\n                destructible |= 16;\n                if ((parser.getToken() & 8388608) === 8388608) {\n                    expr = parseBinaryExpression(parser, context, privateScope, 1, start, 4, token, expr);\n                }\n                if (consumeOpt(parser, context | 8192, 22)) {\n                    expr = parseConditionalExpression(parser, context, privateScope, expr, start);\n                }\n            }\n        }\n        else if (token === 14) {\n            expr = parseSpreadOrRestElement(parser, context, scope, privateScope, 16, kind, origin, 1, 1, 0);\n            destructible |=\n                (parser.getToken() === 16 ? 0 : 16) | parser.destructible;\n            isNonSimpleParameterList = 1;\n        }\n        else {\n            expr = parseExpression(parser, context, privateScope, 1, 0, tokenStart);\n            destructible = parser.assignable;\n            params.push(expr);\n            while (consumeOpt(parser, context | 8192, 18)) {\n                params.push(parseExpression(parser, context, privateScope, 1, 0, tokenStart));\n            }\n            destructible |= parser.assignable;\n            consume(parser, context, 16);\n            parser.destructible = destructible | 16;\n            parser.assignable = 2;\n            return parser.finishNode({\n                type: 'CallExpression',\n                callee,\n                arguments: params,\n                optional: false,\n            }, start);\n        }\n        params.push(expr);\n        if (!consumeOpt(parser, context | 8192, 18))\n            break;\n    }\n    consume(parser, context, 16);\n    destructible |=\n        parser.destructible & 256\n            ? 256\n            : 0 | (parser.destructible & 128)\n                ? 128\n                : 0;\n    if (parser.getToken() === 10) {\n        if (destructible & (32 | 16))\n            report(parser, 27);\n        if (parser.flags & 1 || flags & 1)\n            report(parser, 48);\n        if (destructible & 128)\n            report(parser, 31);\n        if (context & (256 | 262144) && destructible & 256)\n            report(parser, 32);\n        if (isNonSimpleParameterList)\n            parser.flags |= 128;\n        return parseParenthesizedArrow(parser, context | 524288, scope, privateScope, params, canAssign, 1, start);\n    }\n    if (destructible & 64) {\n        report(parser, 63);\n    }\n    if (destructible & 8) {\n        report(parser, 62);\n    }\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'CallExpression',\n        callee,\n        arguments: params,\n        optional: false,\n    }, start);\n}\nfunction parseRegExpLiteral(parser, context) {\n    const { tokenRaw, tokenRegExp, tokenValue, tokenStart } = parser;\n    nextToken(parser, context);\n    parser.assignable = 2;\n    const node = {\n        type: 'Literal',\n        value: tokenValue,\n        regex: tokenRegExp,\n    };\n    if (context & 128) {\n        node.raw = tokenRaw;\n    }\n    return parser.finishNode(node, tokenStart);\n}\nfunction parseClassDeclaration(parser, context, scope, privateScope, flags) {\n    let start;\n    let decorators;\n    if (parser.leadingDecorators.decorators.length) {\n        if (parser.getToken() === 132) {\n            report(parser, 30, '@');\n        }\n        start = parser.leadingDecorators.start;\n        decorators = [...parser.leadingDecorators.decorators];\n        parser.leadingDecorators.decorators.length = 0;\n    }\n    else {\n        start = parser.tokenStart;\n        decorators = parseDecorators(parser, context, privateScope);\n    }\n    context = (context | 4194304 | 256) ^ 4194304;\n    nextToken(parser, context);\n    let id = null;\n    let superClass = null;\n    const { tokenValue } = parser;\n    if (parser.getToken() & 4096 && parser.getToken() !== 20565) {\n        if (isStrictReservedWord(parser, context, parser.getToken())) {\n            report(parser, 118);\n        }\n        if ((parser.getToken() & 537079808) === 537079808) {\n            report(parser, 119);\n        }\n        if (scope) {\n            addBlockName(parser, context, scope, tokenValue, 32, 0);\n            if (flags) {\n                if (flags & 2) {\n                    declareUnboundVariable(parser, tokenValue);\n                }\n            }\n        }\n        id = parseIdentifier(parser, context);\n    }\n    else {\n        if ((flags & 1) === 0)\n            report(parser, 39, 'Class');\n    }\n    let inheritedContext = context;\n    if (consumeOpt(parser, context | 8192, 20565)) {\n        superClass = parseLeftHandSideExpression(parser, context, privateScope, 0, 0, 0);\n        inheritedContext |= 131072;\n    }\n    else {\n        inheritedContext = (inheritedContext | 131072) ^ 131072;\n    }\n    const body = parseClassBody(parser, inheritedContext, context, scope, privateScope, 2, 8, 0);\n    return parser.finishNode({\n        type: 'ClassDeclaration',\n        id,\n        superClass,\n        body,\n        ...(context & 1 ? { decorators } : null),\n    }, start);\n}\nfunction parseClassExpression(parser, context, privateScope, inGroup, start) {\n    let id = null;\n    let superClass = null;\n    const decorators = parseDecorators(parser, context, privateScope);\n    context = (context | 256 | 4194304) ^ 4194304;\n    nextToken(parser, context);\n    if (parser.getToken() & 4096 && parser.getToken() !== 20565) {\n        if (isStrictReservedWord(parser, context, parser.getToken()))\n            report(parser, 118);\n        if ((parser.getToken() & 537079808) === 537079808) {\n            report(parser, 119);\n        }\n        id = parseIdentifier(parser, context);\n    }\n    let inheritedContext = context;\n    if (consumeOpt(parser, context | 8192, 20565)) {\n        superClass = parseLeftHandSideExpression(parser, context, privateScope, 0, inGroup, 0);\n        inheritedContext |= 131072;\n    }\n    else {\n        inheritedContext = (inheritedContext | 131072) ^ 131072;\n    }\n    const body = parseClassBody(parser, inheritedContext, context, void 0, privateScope, 2, 0, inGroup);\n    parser.assignable = 2;\n    return parser.finishNode({\n        type: 'ClassExpression',\n        id,\n        superClass,\n        body,\n        ...(context & 1 ? { decorators } : null),\n    }, start);\n}\nfunction parseDecorators(parser, context, privateScope) {\n    const list = [];\n    if (context & 1) {\n        while (parser.getToken() === 132) {\n            list.push(parseDecoratorList(parser, context, privateScope));\n        }\n    }\n    return list;\n}\nfunction parseDecoratorList(parser, context, privateScope) {\n    const start = parser.tokenStart;\n    nextToken(parser, context | 8192);\n    let expression = parsePrimaryExpression(parser, context, privateScope, 2, 0, 1, 0, 1, start);\n    expression = parseMemberOrUpdateExpression(parser, context, privateScope, expression, 0, 0, parser.tokenStart);\n    return parser.finishNode({\n        type: 'Decorator',\n        expression,\n    }, start);\n}\nfunction parseClassBody(parser, context, inheritedContext, scope, parentScope, kind, origin, inGroup) {\n    const { tokenStart } = parser;\n    const privateScope = context & 16 ? addChildPrivateScope(parentScope) : undefined;\n    consume(parser, context | 8192, 2162700);\n    const modifierFlags = 33554432 | 268435456;\n    context = (context | modifierFlags) ^ modifierFlags;\n    const hasConstr = parser.flags & 32;\n    parser.flags = (parser.flags | 32) ^ 32;\n    const body = [];\n    let decorators;\n    const decoratorStart = parser.tokenStart;\n    while (parser.getToken() !== 1074790415) {\n        let length = 0;\n        decorators = parseDecorators(parser, context, privateScope);\n        length = decorators.length;\n        if (length > 0 && parser.tokenValue === 'constructor') {\n            report(parser, 109);\n        }\n        if (parser.getToken() === 1074790415)\n            report(parser, 108);\n        if (consumeOpt(parser, context, 1074790417)) {\n            if (length > 0)\n                report(parser, 120);\n            continue;\n        }\n        body.push(parseClassElementList(parser, context, scope, privateScope, inheritedContext, kind, decorators, 0, inGroup, length > 0 ? decoratorStart : parser.tokenStart));\n    }\n    consume(parser, origin & 8 ? context | 8192 : context, 1074790415);\n    if (privateScope)\n        validatePrivateIdentifierRefs(privateScope);\n    parser.flags = (parser.flags & -33) | hasConstr;\n    return parser.finishNode({\n        type: 'ClassBody',\n        body,\n    }, tokenStart);\n}\nfunction parseClassElementList(parser, context, scope, privateScope, inheritedContext, type, decorators, isStatic, inGroup, start) {\n    let kind = isStatic ? 32 : 0;\n    let key = null;\n    const token = parser.getToken();\n    if (token & (143360 | 36864) || token === -2147483528) {\n        key = parseIdentifier(parser, context);\n        switch (token) {\n            case 36970:\n                if (!isStatic &&\n                    parser.getToken() !== 67174411 &&\n                    (parser.getToken() & 1048576) !== 1048576 &&\n                    parser.getToken() !== 1077936155) {\n                    return parseClassElementList(parser, context, scope, privateScope, inheritedContext, type, decorators, 1, inGroup, start);\n                }\n                break;\n            case 209005:\n                if (parser.getToken() !== 67174411 && (parser.flags & 1) === 0) {\n                    if ((parser.getToken() & 1073741824) === 1073741824) {\n                        return parsePropertyDefinition(parser, context, privateScope, key, kind, decorators, start);\n                    }\n                    kind |= 16 | (optionalBit(parser, context, 8391476) ? 8 : 0);\n                }\n                break;\n            case 209008:\n                if (parser.getToken() !== 67174411) {\n                    if ((parser.getToken() & 1073741824) === 1073741824) {\n                        return parsePropertyDefinition(parser, context, privateScope, key, kind, decorators, start);\n                    }\n                    kind |= 256;\n                }\n                break;\n            case 209009:\n                if (parser.getToken() !== 67174411) {\n                    if ((parser.getToken() & 1073741824) === 1073741824) {\n                        return parsePropertyDefinition(parser, context, privateScope, key, kind, decorators, start);\n                    }\n                    kind |= 512;\n                }\n                break;\n            case 12402:\n                if (parser.getToken() !== 67174411 && (parser.flags & 1) === 0) {\n                    if ((parser.getToken() & 1073741824) === 1073741824) {\n                        return parsePropertyDefinition(parser, context, privateScope, key, kind, decorators, start);\n                    }\n                    if (context & 1)\n                        kind |= 1024;\n                }\n                break;\n        }\n    }\n    else if (token === 69271571) {\n        kind |= 2;\n        key = parseComputedPropertyName(parser, inheritedContext, privateScope, inGroup);\n    }\n    else if ((token & 134217728) === 134217728) {\n        key = parseLiteral(parser, context);\n    }\n    else if (token === 8391476) {\n        kind |= 8;\n        nextToken(parser, context);\n    }\n    else if (parser.getToken() === 130) {\n        kind |= 8192;\n        key = parsePrivateIdentifier(parser, context | 4096, privateScope, 768);\n    }\n    else if ((parser.getToken() & 1073741824) === 1073741824) {\n        kind |= 128;\n    }\n    else if (isStatic && token === 2162700) {\n        return parseStaticBlock(parser, context | 4096, scope, privateScope, start);\n    }\n    else if (token === -2147483527) {\n        key = parseIdentifier(parser, context);\n        if (parser.getToken() !== 67174411)\n            report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    else {\n        report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    if (kind & (8 | 16 | 768 | 1024)) {\n        if (parser.getToken() & 143360 ||\n            parser.getToken() === -2147483528 ||\n            parser.getToken() === -2147483527) {\n            key = parseIdentifier(parser, context);\n        }\n        else if ((parser.getToken() & 134217728) === 134217728) {\n            key = parseLiteral(parser, context);\n        }\n        else if (parser.getToken() === 69271571) {\n            kind |= 2;\n            key = parseComputedPropertyName(parser, context, privateScope, 0);\n        }\n        else if (parser.getToken() === 130) {\n            kind |= 8192;\n            key = parsePrivateIdentifier(parser, context, privateScope, kind);\n        }\n        else\n            report(parser, 135);\n    }\n    if ((kind & 2) === 0) {\n        if (parser.tokenValue === 'constructor') {\n            if ((parser.getToken() & 1073741824) === 1073741824) {\n                report(parser, 129);\n            }\n            else if ((kind & 32) === 0 && parser.getToken() === 67174411) {\n                if (kind & (768 | 16 | 128 | 8)) {\n                    report(parser, 53, 'accessor');\n                }\n                else if ((context & 131072) === 0) {\n                    if (parser.flags & 32)\n                        report(parser, 54);\n                    else\n                        parser.flags |= 32;\n                }\n            }\n            kind |= 64;\n        }\n        else if ((kind & 8192) === 0 &&\n            kind & 32 &&\n            parser.tokenValue === 'prototype') {\n            report(parser, 52);\n        }\n    }\n    if (kind & 1024 || (parser.getToken() !== 67174411 && (kind & 768) === 0)) {\n        return parsePropertyDefinition(parser, context, privateScope, key, kind, decorators, start);\n    }\n    const value = parseMethodDefinition(parser, context | 4096, privateScope, kind, inGroup, parser.tokenStart);\n    return parser.finishNode({\n        type: 'MethodDefinition',\n        kind: (kind & 32) === 0 && kind & 64\n            ? 'constructor'\n            : kind & 256\n                ? 'get'\n                : kind & 512\n                    ? 'set'\n                    : 'method',\n        static: (kind & 32) > 0,\n        computed: (kind & 2) > 0,\n        key,\n        value,\n        ...(context & 1 ? { decorators } : null),\n    }, start);\n}\nfunction parsePrivateIdentifier(parser, context, privateScope, kind) {\n    const { tokenStart } = parser;\n    nextToken(parser, context);\n    const { tokenValue } = parser;\n    if (tokenValue === 'constructor')\n        report(parser, 128);\n    if (context & 16) {\n        if (!privateScope)\n            report(parser, 4, tokenValue);\n        if (kind) {\n            addPrivateIdentifier(parser, privateScope, tokenValue, kind);\n        }\n        else {\n            addPrivateIdentifierRef(parser, privateScope, tokenValue);\n        }\n    }\n    nextToken(parser, context);\n    return parser.finishNode({\n        type: 'PrivateIdentifier',\n        name: tokenValue,\n    }, tokenStart);\n}\nfunction parsePropertyDefinition(parser, context, privateScope, key, state, decorators, start) {\n    let value = null;\n    if (state & 8)\n        report(parser, 0);\n    if (parser.getToken() === 1077936155) {\n        nextToken(parser, context | 8192);\n        const { tokenStart } = parser;\n        if (parser.getToken() === 537079927)\n            report(parser, 119);\n        const modifierFlags = 262144 |\n            524288 |\n            2097152 |\n            ((state & 64) === 0 ? 131072 | 4194304 : 0);\n        context =\n            ((context | modifierFlags) ^ modifierFlags) |\n                (state & 8 ? 262144 : 0) |\n                (state & 16 ? 524288 : 0) |\n                (state & 64 ? 4194304 : 0) |\n                65536 |\n                16777216;\n        value = parsePrimaryExpression(parser, context | 4096, privateScope, 2, 0, 1, 0, 1, tokenStart);\n        if ((parser.getToken() & 1073741824) !== 1073741824 ||\n            (parser.getToken() & 4194304) === 4194304) {\n            value = parseMemberOrUpdateExpression(parser, context | 4096, privateScope, value, 0, 0, tokenStart);\n            value = parseAssignmentExpression(parser, context | 4096, privateScope, 0, 0, tokenStart, value);\n        }\n    }\n    matchOrInsertSemicolon(parser, context);\n    return parser.finishNode({\n        type: state & 1024 ? 'AccessorProperty' : 'PropertyDefinition',\n        key,\n        value,\n        static: (state & 32) > 0,\n        computed: (state & 2) > 0,\n        ...(context & 1 ? { decorators } : null),\n    }, start);\n}\nfunction parseBindingPattern(parser, context, scope, privateScope, type, origin) {\n    if (parser.getToken() & 143360 ||\n        ((context & 256) === 0 && parser.getToken() === -2147483527))\n        return parseAndClassifyIdentifier(parser, context, scope, type, origin);\n    if ((parser.getToken() & 2097152) !== 2097152)\n        report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n    const left = parser.getToken() === 69271571\n        ? parseArrayExpressionOrPattern(parser, context, scope, privateScope, 1, 0, 1, type, origin)\n        : parseObjectLiteralOrPattern(parser, context, scope, privateScope, 1, 0, 1, type, origin);\n    if (parser.destructible & 16)\n        report(parser, 50);\n    if (parser.destructible & 32)\n        report(parser, 50);\n    return left;\n}\nfunction parseAndClassifyIdentifier(parser, context, scope, kind, origin) {\n    const token = parser.getToken();\n    if (context & 256) {\n        if ((token & 537079808) === 537079808) {\n            report(parser, 119);\n        }\n        else if ((token & 36864) === 36864 || token === -2147483527) {\n            report(parser, 118);\n        }\n    }\n    if ((token & 20480) === 20480) {\n        report(parser, 102);\n    }\n    if (token === 241771) {\n        if (context & 262144)\n            report(parser, 32);\n        if (context & 512)\n            report(parser, 111);\n    }\n    if ((token & 255) === (241737 & 255)) {\n        if (kind & (8 | 16))\n            report(parser, 100);\n    }\n    if (token === 209006) {\n        if (context & 524288)\n            report(parser, 176);\n        if (context & 512)\n            report(parser, 110);\n    }\n    const { tokenValue, tokenStart: start } = parser;\n    nextToken(parser, context);\n    if (scope)\n        addVarOrBlock(parser, context, scope, tokenValue, kind, origin);\n    return parser.finishNode({\n        type: 'Identifier',\n        name: tokenValue,\n    }, start);\n}\nfunction parseJSXRootElementOrFragment(parser, context, privateScope, inJSXChild, start) {\n    if (!inJSXChild)\n        consume(parser, context, 8456256);\n    if (parser.getToken() === 8390721) {\n        const openingFragment = parseJSXOpeningFragment(parser, context, start);\n        const [children, closingFragment] = parseJSXChildrenAndClosingFragment(parser, context, privateScope, inJSXChild);\n        return parser.finishNode({\n            type: 'JSXFragment',\n            openingFragment,\n            children,\n            closingFragment,\n        }, start);\n    }\n    if (parser.getToken() === 8457014)\n        report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n    let closingElement = null;\n    let children = [];\n    const openingElement = parseJSXOpeningElementOrSelfCloseElement(parser, context, privateScope, inJSXChild, start);\n    if (!openingElement.selfClosing) {\n        [children, closingElement] = parseJSXChildrenAndClosingElement(parser, context, privateScope, inJSXChild);\n        const close = isEqualTagName(closingElement.name);\n        if (isEqualTagName(openingElement.name) !== close)\n            report(parser, 155, close);\n    }\n    return parser.finishNode({\n        type: 'JSXElement',\n        children,\n        openingElement,\n        closingElement,\n    }, start);\n}\nfunction parseJSXOpeningFragment(parser, context, start) {\n    nextJSXToken(parser, context);\n    return parser.finishNode({\n        type: 'JSXOpeningFragment',\n    }, start);\n}\nfunction parseJSXClosingElement(parser, context, inJSXChild, start) {\n    consume(parser, context, 8457014);\n    const name = parseJSXElementName(parser, context);\n    if (parser.getToken() !== 8390721) {\n        report(parser, 25, KeywordDescTable[8390721 & 255]);\n    }\n    if (inJSXChild) {\n        nextJSXToken(parser, context);\n    }\n    else {\n        nextToken(parser, context);\n    }\n    return parser.finishNode({\n        type: 'JSXClosingElement',\n        name,\n    }, start);\n}\nfunction parseJSXClosingFragment(parser, context, inJSXChild, start) {\n    consume(parser, context, 8457014);\n    if (parser.getToken() !== 8390721) {\n        report(parser, 25, KeywordDescTable[8390721 & 255]);\n    }\n    if (inJSXChild) {\n        nextJSXToken(parser, context);\n    }\n    else {\n        nextToken(parser, context);\n    }\n    return parser.finishNode({\n        type: 'JSXClosingFragment',\n    }, start);\n}\nfunction parseJSXChildrenAndClosingElement(parser, context, privateScope, inJSXChild) {\n    const children = [];\n    while (true) {\n        const child = parseJSXChildOrClosingElement(parser, context, privateScope, inJSXChild);\n        if (child.type === 'JSXClosingElement') {\n            return [children, child];\n        }\n        children.push(child);\n    }\n}\nfunction parseJSXChildrenAndClosingFragment(parser, context, privateScope, inJSXChild) {\n    const children = [];\n    while (true) {\n        const child = parseJSXChildOrClosingFragment(parser, context, privateScope, inJSXChild);\n        if (child.type === 'JSXClosingFragment') {\n            return [children, child];\n        }\n        children.push(child);\n    }\n}\nfunction parseJSXChildOrClosingElement(parser, context, privateScope, inJSXChild) {\n    if (parser.getToken() === 137)\n        return parseJSXText(parser, context);\n    if (parser.getToken() === 2162700)\n        return parseJSXExpressionContainer(parser, context, privateScope, 1, 0);\n    if (parser.getToken() === 8456256) {\n        const { tokenStart } = parser;\n        nextToken(parser, context);\n        if (parser.getToken() === 8457014)\n            return parseJSXClosingElement(parser, context, inJSXChild, tokenStart);\n        return parseJSXRootElementOrFragment(parser, context, privateScope, 1, tokenStart);\n    }\n    report(parser, 0);\n}\nfunction parseJSXChildOrClosingFragment(parser, context, privateScope, inJSXChild) {\n    if (parser.getToken() === 137)\n        return parseJSXText(parser, context);\n    if (parser.getToken() === 2162700)\n        return parseJSXExpressionContainer(parser, context, privateScope, 1, 0);\n    if (parser.getToken() === 8456256) {\n        const { tokenStart } = parser;\n        nextToken(parser, context);\n        if (parser.getToken() === 8457014)\n            return parseJSXClosingFragment(parser, context, inJSXChild, tokenStart);\n        return parseJSXRootElementOrFragment(parser, context, privateScope, 1, tokenStart);\n    }\n    report(parser, 0);\n}\nfunction parseJSXText(parser, context) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    const node = {\n        type: 'JSXText',\n        value: parser.tokenValue,\n    };\n    if (context & 128) {\n        node.raw = parser.tokenRaw;\n    }\n    return parser.finishNode(node, start);\n}\nfunction parseJSXOpeningElementOrSelfCloseElement(parser, context, privateScope, inJSXChild, start) {\n    if ((parser.getToken() & 143360) !== 143360 &&\n        (parser.getToken() & 4096) !== 4096)\n        report(parser, 0);\n    const tagName = parseJSXElementName(parser, context);\n    const attributes = parseJSXAttributes(parser, context, privateScope);\n    const selfClosing = parser.getToken() === 8457014;\n    if (selfClosing)\n        consume(parser, context, 8457014);\n    if (parser.getToken() !== 8390721) {\n        report(parser, 25, KeywordDescTable[8390721 & 255]);\n    }\n    if (inJSXChild || !selfClosing) {\n        nextJSXToken(parser, context);\n    }\n    else {\n        nextToken(parser, context);\n    }\n    return parser.finishNode({\n        type: 'JSXOpeningElement',\n        name: tagName,\n        attributes,\n        selfClosing,\n    }, start);\n}\nfunction parseJSXElementName(parser, context) {\n    const { tokenStart } = parser;\n    rescanJSXIdentifier(parser);\n    let key = parseJSXIdentifier(parser, context);\n    if (parser.getToken() === 21)\n        return parseJSXNamespacedName(parser, context, key, tokenStart);\n    while (consumeOpt(parser, context, 67108877)) {\n        rescanJSXIdentifier(parser);\n        key = parseJSXMemberExpression(parser, context, key, tokenStart);\n    }\n    return key;\n}\nfunction parseJSXMemberExpression(parser, context, object, start) {\n    const property = parseJSXIdentifier(parser, context);\n    return parser.finishNode({\n        type: 'JSXMemberExpression',\n        object,\n        property,\n    }, start);\n}\nfunction parseJSXAttributes(parser, context, privateScope) {\n    const attributes = [];\n    while (parser.getToken() !== 8457014 &&\n        parser.getToken() !== 8390721 &&\n        parser.getToken() !== 1048576) {\n        attributes.push(parseJsxAttribute(parser, context, privateScope));\n    }\n    return attributes;\n}\nfunction parseJSXSpreadAttribute(parser, context, privateScope) {\n    const start = parser.tokenStart;\n    nextToken(parser, context);\n    consume(parser, context, 14);\n    const expression = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n    consume(parser, context, 1074790415);\n    return parser.finishNode({\n        type: 'JSXSpreadAttribute',\n        argument: expression,\n    }, start);\n}\nfunction parseJsxAttribute(parser, context, privateScope) {\n    const { tokenStart } = parser;\n    if (parser.getToken() === 2162700)\n        return parseJSXSpreadAttribute(parser, context, privateScope);\n    rescanJSXIdentifier(parser);\n    let value = null;\n    let name = parseJSXIdentifier(parser, context);\n    if (parser.getToken() === 21) {\n        name = parseJSXNamespacedName(parser, context, name, tokenStart);\n    }\n    if (parser.getToken() === 1077936155) {\n        const token = scanJSXAttributeValue(parser, context);\n        switch (token) {\n            case 134283267:\n                value = parseLiteral(parser, context);\n                break;\n            case 8456256:\n                value = parseJSXRootElementOrFragment(parser, context, privateScope, 0, parser.tokenStart);\n                break;\n            case 2162700:\n                value = parseJSXExpressionContainer(parser, context, privateScope, 0, 1);\n                break;\n            default:\n                report(parser, 154);\n        }\n    }\n    return parser.finishNode({\n        type: 'JSXAttribute',\n        value,\n        name,\n    }, tokenStart);\n}\nfunction parseJSXNamespacedName(parser, context, namespace, start) {\n    consume(parser, context, 21);\n    const name = parseJSXIdentifier(parser, context);\n    return parser.finishNode({\n        type: 'JSXNamespacedName',\n        namespace,\n        name,\n    }, start);\n}\nfunction parseJSXExpressionContainer(parser, context, privateScope, inJSXChild, isAttr) {\n    const { tokenStart: start } = parser;\n    nextToken(parser, context | 8192);\n    const { tokenStart } = parser;\n    if (parser.getToken() === 14)\n        return parseJSXSpreadChild(parser, context, privateScope, start);\n    let expression = null;\n    if (parser.getToken() === 1074790415) {\n        if (isAttr)\n            report(parser, 157);\n        expression = parseJSXEmptyExpression(parser, {\n            index: parser.startIndex,\n            line: parser.startLine,\n            column: parser.startColumn,\n        });\n    }\n    else {\n        expression = parseExpression(parser, context, privateScope, 1, 0, tokenStart);\n    }\n    if (parser.getToken() !== 1074790415) {\n        report(parser, 25, KeywordDescTable[1074790415 & 255]);\n    }\n    if (inJSXChild) {\n        nextJSXToken(parser, context);\n    }\n    else {\n        nextToken(parser, context);\n    }\n    return parser.finishNode({\n        type: 'JSXExpressionContainer',\n        expression,\n    }, start);\n}\nfunction parseJSXSpreadChild(parser, context, privateScope, start) {\n    consume(parser, context, 14);\n    const expression = parseExpression(parser, context, privateScope, 1, 0, parser.tokenStart);\n    consume(parser, context, 1074790415);\n    return parser.finishNode({\n        type: 'JSXSpreadChild',\n        expression,\n    }, start);\n}\nfunction parseJSXEmptyExpression(parser, start) {\n    return parser.finishNode({\n        type: 'JSXEmptyExpression',\n    }, start, parser.tokenStart);\n}\nfunction parseJSXIdentifier(parser, context) {\n    const start = parser.tokenStart;\n    if (!(parser.getToken() & 143360)) {\n        report(parser, 30, KeywordDescTable[parser.getToken() & 255]);\n    }\n    const { tokenValue } = parser;\n    nextToken(parser, context);\n    return parser.finishNode({\n        type: 'JSXIdentifier',\n        name: tokenValue,\n    }, start);\n}\n\nvar version$1 = \"6.1.3\";\n\nconst version = version$1;\nfunction parseScript(source, options) {\n    return parseSource(source, options, 0);\n}\nfunction parseModule(source, options) {\n    return parseSource(source, options, 256 | 512);\n}\nfunction parse(source, options) {\n    return parseSource(source, options, 0);\n}\n\nexport { parse, parseModule, parseScript, version };\n", "// Astring is a tiny and fast JavaScript code generator from an ESTree-compliant AST.\n//\n// Astring was written by David Bonnet and released under an MIT license.\n//\n// The Git repository for Astring is available at:\n// https://github.com/davidbonnet/astring.git\n//\n// Please use the GitHub bug tracker to report issues:\n// https://github.com/davidbonnet/astring/issues\n\nconst { stringify } = JSON\n\n/* c8 ignore if */\nif (!String.prototype.repeat) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\n/* c8 ignore if */\nif (!String.prototype.endsWith) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\nconst OPERATOR_PRECEDENCE = {\n  '||': 2,\n  '??': 3,\n  '&&': 4,\n  '|': 5,\n  '^': 6,\n  '&': 7,\n  '==': 8,\n  '!=': 8,\n  '===': 8,\n  '!==': 8,\n  '<': 9,\n  '>': 9,\n  '<=': 9,\n  '>=': 9,\n  in: 9,\n  instanceof: 9,\n  '<<': 10,\n  '>>': 10,\n  '>>>': 10,\n  '+': 11,\n  '-': 11,\n  '*': 12,\n  '%': 12,\n  '/': 12,\n  '**': 13,\n}\n\n// Enables parenthesis regardless of precedence\nexport const NEEDS_PARENTHESES = 17\n\nexport const EXPRESSIONS_PRECEDENCE = {\n  // Definitions\n  ArrayExpression: 20,\n  TaggedTemplateExpression: 20,\n  ThisExpression: 20,\n  Identifier: 20,\n  PrivateIdentifier: 20,\n  Literal: 18,\n  TemplateLiteral: 20,\n  Super: 20,\n  SequenceExpression: 20,\n  // Operations\n  MemberExpression: 19,\n  ChainExpression: 19,\n  CallExpression: 19,\n  NewExpression: 19,\n  // Other definitions\n  ArrowFunctionExpression: NEEDS_PARENTHESES,\n  ClassExpression: NEEDS_PARENTHESES,\n  FunctionExpression: NEEDS_PARENTHESES,\n  ObjectExpression: NEEDS_PARENTHESES,\n  // Other operations\n  UpdateExpression: 16,\n  UnaryExpression: 15,\n  AwaitExpression: 15,\n  BinaryExpression: 14,\n  LogicalExpression: 13,\n  ConditionalExpression: 4,\n  AssignmentExpression: 3,\n  YieldExpression: 2,\n  RestElement: 1,\n}\n\nfunction formatSequence(state, nodes) {\n  /*\n  Writes into `state` a sequence of `nodes`.\n  */\n  const { generator } = state\n  state.write('(')\n  if (nodes != null && nodes.length > 0) {\n    generator[nodes[0].type](nodes[0], state)\n    const { length } = nodes\n    for (let i = 1; i < length; i++) {\n      const param = nodes[i]\n      state.write(', ')\n      generator[param.type](param, state)\n    }\n  }\n  state.write(')')\n}\n\nfunction expressionNeedsParenthesis(state, node, parentNode, isRightHand) {\n  const nodePrecedence = state.expressionsPrecedence[node.type]\n  if (nodePrecedence === NEEDS_PARENTHESES) {\n    return true\n  }\n  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type]\n  if (nodePrecedence !== parentNodePrecedence) {\n    // Different node types\n    return (\n      (!isRightHand &&\n        nodePrecedence === 15 &&\n        parentNodePrecedence === 14 &&\n        parentNode.operator === '**') ||\n      nodePrecedence < parentNodePrecedence\n    )\n  }\n  if (nodePrecedence !== 13 && nodePrecedence !== 14) {\n    // Not a `LogicalExpression` or `BinaryExpression`\n    return false\n  }\n  if (node.operator === '**' && parentNode.operator === '**') {\n    // Exponentiation operator has right-to-left associativity\n    return !isRightHand\n  }\n  if (\n    nodePrecedence === 13 &&\n    parentNodePrecedence === 13 &&\n    (node.operator === '??' || parentNode.operator === '??')\n  ) {\n    // Nullish coalescing and boolean operators cannot be combined\n    return true\n  }\n  if (isRightHand) {\n    // Parenthesis are used if both operators have the same precedence\n    return (\n      OPERATOR_PRECEDENCE[node.operator] <=\n      OPERATOR_PRECEDENCE[parentNode.operator]\n    )\n  }\n  return (\n    OPERATOR_PRECEDENCE[node.operator] <\n    OPERATOR_PRECEDENCE[parentNode.operator]\n  )\n}\n\nfunction formatExpression(state, node, parentNode, isRightHand) {\n  /*\n  Writes into `state` the provided `node`, adding parenthesis around if the provided `parentNode` needs it. If `node` is a right-hand argument, the provided `isRightHand` parameter should be `true`.\n  */\n  const { generator } = state\n  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {\n    state.write('(')\n    generator[node.type](node, state)\n    state.write(')')\n  } else {\n    generator[node.type](node, state)\n  }\n}\n\nfunction reindent(state, text, indent, lineEnd) {\n  /*\n  Writes into `state` the `text` string reindented with the provided `indent`.\n  */\n  const lines = text.split('\\n')\n  const end = lines.length - 1\n  state.write(lines[0].trim())\n  if (end > 0) {\n    state.write(lineEnd)\n    for (let i = 1; i < end; i++) {\n      state.write(indent + lines[i].trim() + lineEnd)\n    }\n    state.write(indent + lines[end].trim())\n  }\n}\n\nfunction formatComments(state, comments, indent, lineEnd) {\n  /*\n  Writes into `state` the provided list of `comments`, with the given `indent` and `lineEnd` strings.\n  Line comments will end with `\"\\n\"` regardless of the value of `lineEnd`.\n  Expects to start on a new unindented line.\n  */\n  const { length } = comments\n  for (let i = 0; i < length; i++) {\n    const comment = comments[i]\n    state.write(indent)\n    if (comment.type[0] === 'L') {\n      // Line comment\n      state.write('// ' + comment.value.trim() + '\\n', comment)\n    } else {\n      // Block comment\n      state.write('/*')\n      reindent(state, comment.value, indent, lineEnd)\n      state.write('*/' + lineEnd)\n    }\n  }\n}\n\nfunction hasCallExpression(node) {\n  /*\n  Returns `true` if the provided `node` contains a call expression and `false` otherwise.\n  */\n  let currentNode = node\n  while (currentNode != null) {\n    const { type } = currentNode\n    if (type[0] === 'C' && type[1] === 'a') {\n      // Is CallExpression\n      return true\n    } else if (type[0] === 'M' && type[1] === 'e' && type[2] === 'm') {\n      // Is MemberExpression\n      currentNode = currentNode.object\n    } else {\n      return false\n    }\n  }\n}\n\nfunction formatVariableDeclaration(state, node) {\n  /*\n  Writes into `state` a variable declaration.\n  */\n  const { generator } = state\n  const { declarations } = node\n  state.write(node.kind + ' ')\n  const { length } = declarations\n  if (length > 0) {\n    generator.VariableDeclarator(declarations[0], state)\n    for (let i = 1; i < length; i++) {\n      state.write(', ')\n      generator.VariableDeclarator(declarations[i], state)\n    }\n  }\n}\n\nlet ForInStatement,\n  FunctionDeclaration,\n  RestElement,\n  BinaryExpression,\n  ArrayExpression,\n  BlockStatement\n\nexport const GENERATOR = {\n  /*\n  Default generator.\n  */\n  Program(node, state) {\n    const indent = state.indent.repeat(state.indentLevel)\n    const { lineEnd, writeComments } = state\n    if (writeComments && node.comments != null) {\n      formatComments(state, node.comments, indent, lineEnd)\n    }\n    const statements = node.body\n    const { length } = statements\n    for (let i = 0; i < length; i++) {\n      const statement = statements[i]\n      if (writeComments && statement.comments != null) {\n        formatComments(state, statement.comments, indent, lineEnd)\n      }\n      state.write(indent)\n      this[statement.type](statement, state)\n      state.write(lineEnd)\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, indent, lineEnd)\n    }\n  },\n  BlockStatement: (BlockStatement = function (node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const statementIndent = indent + state.indent\n    state.write('{')\n    const statements = node.body\n    if (statements != null && statements.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, statementIndent, lineEnd)\n      }\n      const { length } = statements\n      for (let i = 0; i < length; i++) {\n        const statement = statements[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n      state.write(indent)\n    } else {\n      if (writeComments && node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, statementIndent, lineEnd)\n        state.write(indent)\n      }\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, statementIndent, lineEnd)\n    }\n    state.write('}')\n    state.indentLevel--\n  }),\n  ClassBody: BlockStatement,\n  StaticBlock(node, state) {\n    state.write('static ')\n    this.BlockStatement(node, state)\n  },\n  EmptyStatement(node, state) {\n    state.write(';')\n  },\n  ExpressionStatement(node, state) {\n    const precedence = state.expressionsPrecedence[node.expression.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      (precedence === 3 && node.expression.left.type[0] === 'O')\n    ) {\n      // Should always have parentheses or is an AssignmentExpression to an ObjectPattern\n      state.write('(')\n      this[node.expression.type](node.expression, state)\n      state.write(')')\n    } else {\n      this[node.expression.type](node.expression, state)\n    }\n    state.write(';')\n  },\n  IfStatement(node, state) {\n    state.write('if (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.consequent.type](node.consequent, state)\n    if (node.alternate != null) {\n      state.write(' else ')\n      this[node.alternate.type](node.alternate, state)\n    }\n  },\n  LabeledStatement(node, state) {\n    this[node.label.type](node.label, state)\n    state.write(': ')\n    this[node.body.type](node.body, state)\n  },\n  BreakStatement(node, state) {\n    state.write('break')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  ContinueStatement(node, state) {\n    state.write('continue')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  WithStatement(node, state) {\n    state.write('with (')\n    this[node.object.type](node.object, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  SwitchStatement(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    state.indentLevel++\n    const caseIndent = indent + state.indent\n    const statementIndent = caseIndent + state.indent\n    state.write('switch (')\n    this[node.discriminant.type](node.discriminant, state)\n    state.write(') {' + lineEnd)\n    const { cases: occurences } = node\n    const { length: occurencesCount } = occurences\n    for (let i = 0; i < occurencesCount; i++) {\n      const occurence = occurences[i]\n      if (writeComments && occurence.comments != null) {\n        formatComments(state, occurence.comments, caseIndent, lineEnd)\n      }\n      if (occurence.test) {\n        state.write(caseIndent + 'case ')\n        this[occurence.test.type](occurence.test, state)\n        state.write(':' + lineEnd)\n      } else {\n        state.write(caseIndent + 'default:' + lineEnd)\n      }\n      const { consequent } = occurence\n      const { length: consequentCount } = consequent\n      for (let i = 0; i < consequentCount; i++) {\n        const statement = consequent[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n    }\n    state.indentLevel -= 2\n    state.write(indent + '}')\n  },\n  ReturnStatement(node, state) {\n    state.write('return')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n    state.write(';')\n  },\n  ThrowStatement(node, state) {\n    state.write('throw ')\n    this[node.argument.type](node.argument, state)\n    state.write(';')\n  },\n  TryStatement(node, state) {\n    state.write('try ')\n    this[node.block.type](node.block, state)\n    if (node.handler) {\n      const { handler } = node\n      if (handler.param == null) {\n        state.write(' catch ')\n      } else {\n        state.write(' catch (')\n        this[handler.param.type](handler.param, state)\n        state.write(') ')\n      }\n      this[handler.body.type](handler.body, state)\n    }\n    if (node.finalizer) {\n      state.write(' finally ')\n      this[node.finalizer.type](node.finalizer, state)\n    }\n  },\n  WhileStatement(node, state) {\n    state.write('while (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  DoWhileStatement(node, state) {\n    state.write('do ')\n    this[node.body.type](node.body, state)\n    state.write(' while (')\n    this[node.test.type](node.test, state)\n    state.write(');')\n  },\n  ForStatement(node, state) {\n    state.write('for (')\n    if (node.init != null) {\n      const { init } = node\n      if (init.type[0] === 'V') {\n        formatVariableDeclaration(state, init)\n      } else {\n        this[init.type](init, state)\n      }\n    }\n    state.write('; ')\n    if (node.test) {\n      this[node.test.type](node.test, state)\n    }\n    state.write('; ')\n    if (node.update) {\n      this[node.update.type](node.update, state)\n    }\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  ForInStatement: (ForInStatement = function (node, state) {\n    state.write(`for ${node.await ? 'await ' : ''}(`)\n    const { left } = node\n    if (left.type[0] === 'V') {\n      formatVariableDeclaration(state, left)\n    } else {\n      this[left.type](left, state)\n    }\n    // Identifying whether node.type is `ForInStatement` or `ForOfStatement`\n    state.write(node.type[3] === 'I' ? ' in ' : ' of ')\n    this[node.right.type](node.right, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  }),\n  ForOfStatement: ForInStatement,\n  DebuggerStatement(node, state) {\n    state.write('debugger;', node)\n  },\n  FunctionDeclaration: (FunctionDeclaration = function (node, state) {\n    state.write(\n      (node.async ? 'async ' : '') +\n        (node.generator ? 'function* ' : 'function ') +\n        (node.id ? node.id.name : ''),\n      node,\n    )\n    formatSequence(state, node.params)\n    state.write(' ')\n    this[node.body.type](node.body, state)\n  }),\n  FunctionExpression: FunctionDeclaration,\n  VariableDeclaration(node, state) {\n    formatVariableDeclaration(state, node)\n    state.write(';')\n  },\n  VariableDeclarator(node, state) {\n    this[node.id.type](node.id, state)\n    if (node.init != null) {\n      state.write(' = ')\n      this[node.init.type](node.init, state)\n    }\n  },\n  ClassDeclaration(node, state) {\n    state.write('class ' + (node.id ? `${node.id.name} ` : ''), node)\n    if (node.superClass) {\n      state.write('extends ')\n      const { superClass } = node\n      const { type } = superClass\n      const precedence = state.expressionsPrecedence[type]\n      if (\n        (type[0] !== 'C' || type[1] !== 'l' || type[5] !== 'E') &&\n        (precedence === NEEDS_PARENTHESES ||\n          precedence < state.expressionsPrecedence.ClassExpression)\n      ) {\n        // Not a ClassExpression that needs parentheses\n        state.write('(')\n        this[node.superClass.type](superClass, state)\n        state.write(')')\n      } else {\n        this[superClass.type](superClass, state)\n      }\n      state.write(' ')\n    }\n    this.ClassBody(node.body, state)\n  },\n  ImportDeclaration(node, state) {\n    state.write('import ')\n    const { specifiers, attributes } = node\n    const { length } = specifiers\n    // TODO: Once babili is fixed, put this after condition\n    // https://github.com/babel/babili/issues/430\n    let i = 0\n    if (length > 0) {\n      for (; i < length; ) {\n        if (i > 0) {\n          state.write(', ')\n        }\n        const specifier = specifiers[i]\n        const type = specifier.type[6]\n        if (type === 'D') {\n          // ImportDefaultSpecifier\n          state.write(specifier.local.name, specifier)\n          i++\n        } else if (type === 'N') {\n          // ImportNamespaceSpecifier\n          state.write('* as ' + specifier.local.name, specifier)\n          i++\n        } else {\n          // ImportSpecifier\n          break\n        }\n      }\n      if (i < length) {\n        state.write('{')\n        for (;;) {\n          const specifier = specifiers[i]\n          const { name } = specifier.imported\n          state.write(name, specifier)\n          if (name !== specifier.local.name) {\n            state.write(' as ' + specifier.local.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n        state.write('}')\n      }\n      state.write(' from ')\n    }\n    this.Literal(node.source, state)\n\n    if (attributes && attributes.length > 0) {\n      state.write(' with { ')\n      for (let i = 0; i < attributes.length; i++) {\n        this.ImportAttribute(attributes[i], state)\n        if (i < attributes.length - 1) state.write(', ')\n      }\n\n      state.write(' }')\n    }\n    state.write(';')\n  },\n  ImportAttribute(node, state) {\n    this.Identifier(node.key, state)\n    state.write(': ')\n    this.Literal(node.value, state)\n  },\n  ImportExpression(node, state) {\n    state.write('import(')\n    this[node.source.type](node.source, state)\n    state.write(')')\n  },\n  ExportDefaultDeclaration(node, state) {\n    state.write('export default ')\n    this[node.declaration.type](node.declaration, state)\n    if (\n      state.expressionsPrecedence[node.declaration.type] != null &&\n      node.declaration.type[0] !== 'F'\n    ) {\n      // All expression nodes except `FunctionExpression`\n      state.write(';')\n    }\n  },\n  ExportNamedDeclaration(node, state) {\n    state.write('export ')\n    if (node.declaration) {\n      this[node.declaration.type](node.declaration, state)\n    } else {\n      state.write('{')\n      const { specifiers } = node,\n        { length } = specifiers\n      if (length > 0) {\n        for (let i = 0; ; ) {\n          const specifier = specifiers[i]\n          const { name } = specifier.local\n          state.write(name, specifier)\n          if (name !== specifier.exported.name) {\n            state.write(' as ' + specifier.exported.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n      }\n      state.write('}')\n      if (node.source) {\n        state.write(' from ')\n        this.Literal(node.source, state)\n      }\n\n      if (node.attributes && node.attributes.length > 0) {\n        state.write(' with { ')\n        for (let i = 0; i < node.attributes.length; i++) {\n          this.ImportAttribute(node.attributes[i], state)\n          if (i < node.attributes.length - 1) state.write(', ')\n        }\n\n        state.write(' }')\n      }\n\n      state.write(';')\n    }\n  },\n  ExportAllDeclaration(node, state) {\n    if (node.exported != null) {\n      state.write('export * as ' + node.exported.name + ' from ')\n    } else {\n      state.write('export * from ')\n    }\n    this.Literal(node.source, state)\n\n    if (node.attributes && node.attributes.length > 0) {\n      state.write(' with { ')\n      for (let i = 0; i < node.attributes.length; i++) {\n        this.ImportAttribute(node.attributes[i], state)\n        if (i < node.attributes.length - 1) state.write(', ')\n      }\n\n      state.write(' }')\n    }\n\n    state.write(';')\n  },\n  MethodDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    const kind = node.kind[0]\n    if (kind === 'g' || kind === 's') {\n      // Getter or setter\n      state.write(node.kind + ' ')\n    }\n    if (node.value.async) {\n      state.write('async ')\n    }\n    if (node.value.generator) {\n      state.write('*')\n    }\n    if (node.computed) {\n      state.write('[')\n      this[node.key.type](node.key, state)\n      state.write(']')\n    } else {\n      this[node.key.type](node.key, state)\n    }\n    formatSequence(state, node.value.params)\n    state.write(' ')\n    this[node.value.body.type](node.value.body, state)\n  },\n  ClassExpression(node, state) {\n    this.ClassDeclaration(node, state)\n  },\n  ArrowFunctionExpression(node, state) {\n    state.write(node.async ? 'async ' : '', node)\n    const { params } = node\n    if (params != null) {\n      // Omit parenthesis if only one named parameter\n      if (params.length === 1 && params[0].type[0] === 'I') {\n        // If params[0].type[0] starts with 'I', it can't be `ImportDeclaration` nor `IfStatement` and thus is `Identifier`\n        state.write(params[0].name, params[0])\n      } else {\n        formatSequence(state, node.params)\n      }\n    }\n    state.write(' => ')\n    if (node.body.type[0] === 'O') {\n      // Body is an object expression\n      state.write('(')\n      this.ObjectExpression(node.body, state)\n      state.write(')')\n    } else {\n      this[node.body.type](node.body, state)\n    }\n  },\n  ThisExpression(node, state) {\n    state.write('this', node)\n  },\n  Super(node, state) {\n    state.write('super', node)\n  },\n  RestElement: (RestElement = function (node, state) {\n    state.write('...')\n    this[node.argument.type](node.argument, state)\n  }),\n  SpreadElement: RestElement,\n  YieldExpression(node, state) {\n    state.write(node.delegate ? 'yield*' : 'yield')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n  },\n  AwaitExpression(node, state) {\n    state.write('await ', node)\n    formatExpression(state, node.argument, node)\n  },\n  TemplateLiteral(node, state) {\n    const { quasis, expressions } = node\n    state.write('`')\n    const { length } = expressions\n    for (let i = 0; i < length; i++) {\n      const expression = expressions[i]\n      const quasi = quasis[i]\n      state.write(quasi.value.raw, quasi)\n      state.write('${')\n      this[expression.type](expression, state)\n      state.write('}')\n    }\n    const quasi = quasis[quasis.length - 1]\n    state.write(quasi.value.raw, quasi)\n    state.write('`')\n  },\n  TemplateElement(node, state) {\n    state.write(node.value.raw, node)\n  },\n  TaggedTemplateExpression(node, state) {\n    formatExpression(state, node.tag, node)\n    this[node.quasi.type](node.quasi, state)\n  },\n  ArrayExpression: (ArrayExpression = function (node, state) {\n    state.write('[')\n    if (node.elements.length > 0) {\n      const { elements } = node,\n        { length } = elements\n      for (let i = 0; ; ) {\n        const element = elements[i]\n        if (element != null) {\n          this[element.type](element, state)\n        }\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          if (element == null) {\n            state.write(', ')\n          }\n          break\n        }\n      }\n    }\n    state.write(']')\n  }),\n  ArrayPattern: ArrayExpression,\n  ObjectExpression(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const propertyIndent = indent + state.indent\n    state.write('{')\n    if (node.properties.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n      }\n      const comma = ',' + lineEnd\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        const property = properties[i]\n        if (writeComments && property.comments != null) {\n          formatComments(state, property.comments, propertyIndent, lineEnd)\n        }\n        state.write(propertyIndent)\n        this[property.type](property, state)\n        if (++i < length) {\n          state.write(comma)\n        } else {\n          break\n        }\n      }\n      state.write(lineEnd)\n      if (writeComments && node.trailingComments != null) {\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n      }\n      state.write(indent + '}')\n    } else if (writeComments) {\n      if (node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n        if (node.trailingComments != null) {\n          formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        }\n        state.write(indent + '}')\n      } else if (node.trailingComments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        state.write(indent + '}')\n      } else {\n        state.write('}')\n      }\n    } else {\n      state.write('}')\n    }\n    state.indentLevel--\n  },\n  Property(node, state) {\n    if (node.method || node.kind[0] !== 'i') {\n      // Either a method or of kind `set` or `get` (not `init`)\n      this.MethodDefinition(node, state)\n    } else {\n      if (!node.shorthand) {\n        if (node.computed) {\n          state.write('[')\n          this[node.key.type](node.key, state)\n          state.write(']')\n        } else {\n          this[node.key.type](node.key, state)\n        }\n        state.write(': ')\n      }\n      this[node.value.type](node.value, state)\n    }\n  },\n  PropertyDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    if (node.computed) {\n      state.write('[')\n    }\n    this[node.key.type](node.key, state)\n    if (node.computed) {\n      state.write(']')\n    }\n    if (node.value == null) {\n      if (node.key.type[0] !== 'F') {\n        state.write(';')\n      }\n      return\n    }\n    state.write(' = ')\n    this[node.value.type](node.value, state)\n    state.write(';')\n  },\n  ObjectPattern(node, state) {\n    state.write('{')\n    if (node.properties.length > 0) {\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        this[properties[i].type](properties[i], state)\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          break\n        }\n      }\n    }\n    state.write('}')\n  },\n  SequenceExpression(node, state) {\n    formatSequence(state, node.expressions)\n  },\n  UnaryExpression(node, state) {\n    if (node.prefix) {\n      const {\n        operator,\n        argument,\n        argument: { type },\n      } = node\n      state.write(operator)\n      const needsParentheses = expressionNeedsParenthesis(state, argument, node)\n      if (\n        !needsParentheses &&\n        (operator.length > 1 ||\n          (type[0] === 'U' &&\n            (type[1] === 'n' || type[1] === 'p') &&\n            argument.prefix &&\n            argument.operator[0] === operator &&\n            (operator === '+' || operator === '-')))\n      ) {\n        // Large operator or argument is UnaryExpression or UpdateExpression node\n        state.write(' ')\n      }\n      if (needsParentheses) {\n        state.write(operator.length > 1 ? ' (' : '(')\n        this[type](argument, state)\n        state.write(')')\n      } else {\n        this[type](argument, state)\n      }\n    } else {\n      // FIXME: This case never occurs\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  UpdateExpression(node, state) {\n    // Always applied to identifiers or members, no parenthesis check needed\n    if (node.prefix) {\n      state.write(node.operator)\n      this[node.argument.type](node.argument, state)\n    } else {\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  AssignmentExpression(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' ' + node.operator + ' ')\n    this[node.right.type](node.right, state)\n  },\n  AssignmentPattern(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' = ')\n    this[node.right.type](node.right, state)\n  },\n  BinaryExpression: (BinaryExpression = function (node, state) {\n    const isIn = node.operator === 'in'\n    if (isIn) {\n      // Avoids confusion in `for` loops initializers\n      state.write('(')\n    }\n    formatExpression(state, node.left, node, false)\n    state.write(' ' + node.operator + ' ')\n    formatExpression(state, node.right, node, true)\n    if (isIn) {\n      state.write(')')\n    }\n  }),\n  LogicalExpression: BinaryExpression,\n  ConditionalExpression(node, state) {\n    const { test } = node\n    const precedence = state.expressionsPrecedence[test.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence <= state.expressionsPrecedence.ConditionalExpression\n    ) {\n      state.write('(')\n      this[test.type](test, state)\n      state.write(')')\n    } else {\n      this[test.type](test, state)\n    }\n    state.write(' ? ')\n    this[node.consequent.type](node.consequent, state)\n    state.write(' : ')\n    this[node.alternate.type](node.alternate, state)\n  },\n  NewExpression(node, state) {\n    state.write('new ')\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression ||\n      hasCallExpression(node.callee)\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    formatSequence(state, node['arguments'])\n  },\n  CallExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    if (node.optional) {\n      state.write('?.')\n    }\n    formatSequence(state, node['arguments'])\n  },\n  ChainExpression(node, state) {\n    this[node.expression.type](node.expression, state)\n  },\n  MemberExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.object.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.MemberExpression\n    ) {\n      state.write('(')\n      this[node.object.type](node.object, state)\n      state.write(')')\n    } else {\n      this[node.object.type](node.object, state)\n    }\n    if (node.computed) {\n      if (node.optional) {\n        state.write('?.')\n      }\n      state.write('[')\n      this[node.property.type](node.property, state)\n      state.write(']')\n    } else {\n      if (node.optional) {\n        state.write('?.')\n      } else {\n        state.write('.')\n      }\n      this[node.property.type](node.property, state)\n    }\n  },\n  MetaProperty(node, state) {\n    state.write(node.meta.name + '.' + node.property.name, node)\n  },\n  Identifier(node, state) {\n    state.write(node.name, node)\n  },\n  PrivateIdentifier(node, state) {\n    state.write(`#${node.name}`, node)\n  },\n  Literal(node, state) {\n    if (node.raw != null) {\n      // Non-standard property\n      state.write(node.raw, node)\n    } else if (node.regex != null) {\n      this.RegExpLiteral(node, state)\n    } else if (node.bigint != null) {\n      state.write(node.bigint + 'n', node)\n    } else {\n      state.write(stringify(node.value), node)\n    }\n  },\n  RegExpLiteral(node, state) {\n    const { regex } = node\n    state.write(`/${regex.pattern}/${regex.flags}`, node)\n  },\n}\n\nconst EMPTY_OBJECT = {}\n\n/*\nDEPRECATED: Alternate export of `GENERATOR`.\n*/\nexport const baseGenerator = GENERATOR\n\nclass State {\n  constructor(options) {\n    const setup = options == null ? EMPTY_OBJECT : options\n    this.output = ''\n    // Functional options\n    if (setup.output != null) {\n      this.output = setup.output\n      this.write = this.writeToStream\n    } else {\n      this.output = ''\n    }\n    this.generator = setup.generator != null ? setup.generator : GENERATOR\n    this.expressionsPrecedence =\n      setup.expressionsPrecedence != null\n        ? setup.expressionsPrecedence\n        : EXPRESSIONS_PRECEDENCE\n    // Formating setup\n    this.indent = setup.indent != null ? setup.indent : '  '\n    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : '\\n'\n    this.indentLevel =\n      setup.startingIndentLevel != null ? setup.startingIndentLevel : 0\n    this.writeComments = setup.comments ? setup.comments : false\n    // Source map\n    if (setup.sourceMap != null) {\n      this.write =\n        setup.output == null ? this.writeAndMap : this.writeToStreamAndMap\n      this.sourceMap = setup.sourceMap\n      this.line = 1\n      this.column = 0\n      this.lineEndSize = this.lineEnd.split('\\n').length - 1\n      this.mapping = {\n        original: null,\n        // Uses the entire state to avoid generating ephemeral objects\n        generated: this,\n        name: undefined,\n        source: setup.sourceMap.file || setup.sourceMap._file,\n      }\n    }\n  }\n\n  write(code) {\n    this.output += code\n  }\n\n  writeToStream(code) {\n    this.output.write(code)\n  }\n\n  writeAndMap(code, node) {\n    this.output += code\n    this.map(code, node)\n  }\n\n  writeToStreamAndMap(code, node) {\n    this.output.write(code)\n    this.map(code, node)\n  }\n\n  map(code, node) {\n    if (node != null) {\n      const { type } = node\n      if (type[0] === 'L' && type[2] === 'n') {\n        // LineComment\n        this.column = 0\n        this.line++\n        return\n      }\n      if (node.loc != null) {\n        const { mapping } = this\n        mapping.original = node.loc.start\n        mapping.name = node.name\n        this.sourceMap.addMapping(mapping)\n      }\n      if (\n        (type[0] === 'T' && type[8] === 'E') ||\n        (type[0] === 'L' && type[1] === 'i' && typeof node.value === 'string')\n      ) {\n        // TemplateElement or Literal string node\n        const { length } = code\n        let { column, line } = this\n        for (let i = 0; i < length; i++) {\n          if (code[i] === '\\n') {\n            column = 0\n            line++\n          } else {\n            column++\n          }\n        }\n        this.column = column\n        this.line = line\n        return\n      }\n    }\n    const { length } = code\n    const { lineEnd } = this\n    if (length > 0) {\n      if (\n        this.lineEndSize > 0 &&\n        (lineEnd.length === 1\n          ? code[length - 1] === lineEnd\n          : code.endsWith(lineEnd))\n      ) {\n        this.line += this.lineEndSize\n        this.column = 0\n      } else {\n        this.column += length\n      }\n    }\n  }\n\n  toString() {\n    return this.output\n  }\n}\n\nexport function generate(node, options) {\n  /*\n  Returns a string representing the rendered code of the provided AST `node`.\n  The `options` are:\n\n  - `indent`: string to use for indentation (defaults to `\u2423\u2423`)\n  - `lineEnd`: string to use for line endings (defaults to `\\n`)\n  - `startingIndentLevel`: indent level to start from (defaults to `0`)\n  - `comments`: generate comments if `true` (defaults to `false`)\n  - `output`: output stream to write the rendered code to (defaults to `null`)\n  - `generator`: custom code generator (defaults to `GENERATOR`)\n  - `expressionsPrecedence`: custom map of node types and their precedence level (defaults to `EXPRESSIONS_PRECEDENCE`)\n  */\n  const state = new State(options)\n  // Travel through the AST node and generate the code\n  state.generator[node.type](node, state)\n  return state.output\n}\n", "import { parseScript } from \"meriyah\";\r\n// import { parse } from 'acorn-hammerhead';\r\nimport { generate } from \"astring\";\r\nimport EventEmitter from \"events\";\r\n\r\nclass JS extends EventEmitter {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t/*\r\n        this.parseOptions = { \r\n            allowReturnOutsideFunction: true, \r\n            allowImportExportEverywhere: true, \r\n            ecmaVersion: 2021, \r\n        };\r\n        */\r\n\t\tthis.parseOptions = {\r\n\t\t\tranges: true,\r\n\t\t\tmodule: true,\r\n\t\t\tglobalReturn: true,\r\n\t\t};\r\n\t\tthis.generationOptions = {\r\n\t\t\tformat: {\r\n\t\t\t\tquotes: \"double\",\r\n\t\t\t\tescapeless: true,\r\n\t\t\t\tcompact: true,\r\n\t\t\t},\r\n\t\t};\r\n\t\tthis.parse = parseScript /*parse*/;\r\n\t\tthis.generate = generate;\r\n\t}\r\n\trewrite(str, data = {}) {\r\n\t\treturn this.recast(str, data, \"rewrite\");\r\n\t}\r\n\tsource(str, data = {}) {\r\n\t\treturn this.recast(str, data, \"source\");\r\n\t}\r\n\trecast(str, data = {}, type = \"\") {\r\n\t\ttry {\r\n\t\t\tconst output = [];\r\n\t\t\tconst ast = this.parse(str, this.parseOptions);\r\n\t\t\tconst meta = {\r\n\t\t\t\tdata,\r\n\t\t\t\tchanges: [],\r\n\t\t\t\tinput: str,\r\n\t\t\t\tast,\r\n\t\t\t\tget slice() {\r\n\t\t\t\t\treturn slice;\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t\tlet slice = 0;\r\n\r\n\t\t\tthis.iterate(ast, (node, parent = null) => {\r\n\t\t\t\tif (parent && parent.inTransformer) node.isTransformer = true;\r\n\t\t\t\tnode.parent = parent;\r\n\r\n\t\t\t\tthis.emit(node.type, node, meta, type);\r\n\t\t\t});\r\n\r\n\t\t\tmeta.changes.sort((a, b) => a.start - b.start || a.end - b.end);\r\n\r\n\t\t\tfor (const change of meta.changes) {\r\n\t\t\t\tif (\"start\" in change && typeof change.start === \"number\")\r\n\t\t\t\t\toutput.push(str.slice(slice, change.start));\r\n\t\t\t\tif (change.node)\r\n\t\t\t\t\toutput.push(\r\n\t\t\t\t\t\ttypeof change.node === \"string\"\r\n\t\t\t\t\t\t\t? change.node\r\n\t\t\t\t\t\t\t: generate(change.node, this.generationOptions)\r\n\t\t\t\t\t);\r\n\t\t\t\tif (\"end\" in change && typeof change.end === \"number\")\r\n\t\t\t\t\tslice = change.end;\r\n\t\t\t}\r\n\t\t\toutput.push(str.slice(slice));\r\n\t\t\treturn output.join(\"\");\r\n\t\t} catch (e) {\r\n\t\t\treturn str;\r\n\t\t}\r\n\t}\r\n\titerate(ast, handler) {\r\n\t\tif (typeof ast != \"object\" || !handler) return;\r\n\t\twalk(ast, null, handler);\r\n\t\tfunction walk(node, parent, handler) {\r\n\t\t\tif (typeof node != \"object\" || !handler) return;\r\n\t\t\thandler(node, parent, handler);\r\n\t\t\tfor (const child in node) {\r\n\t\t\t\tif (child === \"parent\") continue;\r\n\t\t\t\tif (Array.isArray(node[child])) {\r\n\t\t\t\t\tnode[child].forEach((entry) => {\r\n\t\t\t\t\t\tif (entry) walk(entry, node, handler);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (node[child]) walk(node[child], node, handler);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (typeof node.iterateEnd === \"function\") node.iterateEnd();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default JS;\r\n", "import HTML from \"./html.js\";\r\nimport CSS from \"./css.js\";\r\nimport JS from \"./js.js\";\r\nimport setCookie from \"set-cookie-parser\";\r\nimport { xor, base64, plain } from \"./codecs.js\";\r\nimport {\r\n\tvalidateCookie,\r\n\tdb,\r\n\tgetCookies,\r\n\tsetCookies,\r\n\tserialize,\r\n} from \"./cookie.js\";\r\nimport {\r\n\tattributes,\r\n\tisUrl,\r\n\tisForbidden,\r\n\tisHtml,\r\n\tisSrcset,\r\n\tisStyle,\r\n\ttext,\r\n\tinjectHead,\r\n\tcreateHtmlInject,\r\n\tcreateJsInject,\r\n} from \"./rewrite.html.js\";\r\n//import { call, destructureDeclaration, dynamicImport, getProperty, importDeclaration, setProperty, sourceMethods, wrapEval, wrapIdentifier } from './rewrite.script.js';\r\nimport {\r\n\tdynamicImport,\r\n\timportMeta,\r\n\tidentifier,\r\n\timportDeclaration,\r\n\tproperty,\r\n\tunwrap,\r\n\twrapEval,\r\n} from \"./rewrite.script.js\";\r\nimport { openDB } from \"idb\";\r\nimport { BareClient } from \"@mercuryworkshop/bare-mux\";\r\nimport EventEmitter from \"events\";\r\n\r\n/**\r\n * @typedef {import('../uv.js').UVConfig} UVConfig\r\n */\r\n\r\nclass Ultraviolet {\r\n\t/**\r\n\t *\r\n\t * @param {UVConfig} [options]\r\n\t */\r\n\tconstructor(options = {}) {\r\n\t\tthis.prefix = options.prefix || \"/service/\";\r\n\t\t//this.urlRegex = /^(#|about:|data:|mailto:|javascript:)/;\r\n\t\tthis.urlRegex = /^(#|about:|data:|mailto:)/;\r\n\t\tthis.rewriteUrl = options.rewriteUrl || this.rewriteUrl;\r\n\t\tthis.rewriteImport = options.rewriteImport || this.rewriteImport;\r\n\t\tthis.sourceUrl = options.sourceUrl || this.sourceUrl;\r\n\t\tthis.encodeUrl = options.encodeUrl || this.encodeUrl;\r\n\t\tthis.decodeUrl = options.decodeUrl || this.decodeUrl;\r\n\t\tthis.vanilla = \"vanilla\" in options ? options.vanilla : false;\r\n\t\tthis.meta = options.meta || {};\r\n\t\tthis.meta.base ||= undefined;\r\n\t\tthis.meta.origin ||= \"\";\r\n\t\tthis.bundleScript = options.bundle || \"/uv.bundle.js\";\r\n\t\tthis.handlerScript = options.handler || \"/uv.handler.js\";\r\n\t\tthis.clientScript =\r\n\t\t\toptions.client ||\r\n\t\t\t(options.bundle &&\r\n\t\t\t\toptions.bundle.includes(\"uv.bundle.js\") &&\r\n\t\t\t\toptions.bundle.replace(\"uv.bundle.js\", \"uv.client.js\")) ||\r\n\t\t\t\"/uv.client.js\";\r\n\t\tthis.configScript = options.config || \"/uv.config.js\";\r\n\t\tthis.meta.url ||= this.meta.base || \"\";\r\n\t\tthis.codec = Ultraviolet.codec;\r\n\t\tthis.html = new HTML(this);\r\n\t\tthis.css = new CSS(this);\r\n\t\tthis.js = new JS(this);\r\n\t\tthis.openDB = this.constructor.openDB;\r\n\t\tthis.master = \"__uv\";\r\n\t\tthis.dataPrefix = \"__uv$\";\r\n\t\tthis.attributePrefix = \"__uv\";\r\n\t\tthis.createHtmlInject = createHtmlInject;\r\n\t\tthis.createJsInject = createJsInject;\r\n\t\tthis.attrs = {\r\n\t\t\tisUrl,\r\n\t\t\tisForbidden,\r\n\t\t\tisHtml,\r\n\t\t\tisSrcset,\r\n\t\t\tisStyle,\r\n\t\t};\r\n\t\tif (!this.vanilla) this.implementUVMiddleware();\r\n\t\tthis.cookie = {\r\n\t\t\tvalidateCookie,\r\n\t\t\tdb: () => {\r\n\t\t\t\treturn db(this.constructor.openDB);\r\n\t\t\t},\r\n\t\t\tgetCookies,\r\n\t\t\tsetCookies,\r\n\t\t\tserialize,\r\n\t\t\tsetCookie,\r\n\t\t};\r\n\t}\r\n\t/**\r\n\t *\r\n\t * @param {string} str Script being imported\r\n\t * @param {string} src Script that is importing\r\n\t * @param {*} meta\r\n\t */\r\n\trewriteImport(str, src, meta = this.meta) {\r\n\t\t// use importiing script as the base\r\n\t\treturn this.rewriteUrl(str, {\r\n\t\t\t...meta,\r\n\t\t\tbase: src,\r\n\t\t});\r\n\t}\r\n\trewriteUrl(str, meta = this.meta) {\r\n\t\tstr = new String(str).trim();\r\n\t\tif (!str || this.urlRegex.test(str)) return str;\r\n\r\n\t\tif (str.startsWith(\"javascript:\")) {\r\n\t\t\treturn \"javascript:\" + this.js.rewrite(str.slice(\"javascript:\".length));\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\treturn (\r\n\t\t\t\tmeta.origin + this.prefix + this.encodeUrl(new URL(str, meta.base).href)\r\n\t\t\t);\r\n\t\t} catch (e) {\r\n\t\t\treturn meta.origin + this.prefix + this.encodeUrl(str);\r\n\t\t}\r\n\t}\r\n\tsourceUrl(str, meta = this.meta) {\r\n\t\tif (!str || this.urlRegex.test(str)) return str;\r\n\t\ttry {\r\n\t\t\treturn new URL(\r\n\t\t\t\tthis.decodeUrl(str.slice(this.prefix.length + meta.origin.length)),\r\n\t\t\t\tmeta.base\r\n\t\t\t).href;\r\n\t\t} catch (e) {\r\n\t\t\treturn this.decodeUrl(str.slice(this.prefix.length + meta.origin.length));\r\n\t\t}\r\n\t}\r\n\tencodeUrl(str) {\r\n\t\treturn encodeURIComponent(str);\r\n\t}\r\n\tdecodeUrl(str) {\r\n\t\treturn decodeURIComponent(str);\r\n\t}\r\n\timplementUVMiddleware() {\r\n\t\t// HTML\r\n\t\tattributes(this);\r\n\t\ttext(this);\r\n\t\tinjectHead(this);\r\n\t\t// JS\r\n\t\timportDeclaration(this);\r\n\t\tdynamicImport(this);\r\n\t\timportMeta(this);\r\n\t\tproperty(this);\r\n\t\twrapEval(this);\r\n\t\tidentifier(this);\r\n\t\tunwrap(this);\r\n\t}\r\n\tget rewriteHtml() {\r\n\t\treturn this.html.rewrite.bind(this.html);\r\n\t}\r\n\tget sourceHtml() {\r\n\t\treturn this.html.source.bind(this.html);\r\n\t}\r\n\tget rewriteCSS() {\r\n\t\treturn this.css.rewrite.bind(this.css);\r\n\t}\r\n\tget sourceCSS() {\r\n\t\treturn this.css.source.bind(this.css);\r\n\t}\r\n\tget rewriteJS() {\r\n\t\treturn this.js.rewrite.bind(this.js);\r\n\t}\r\n\tget sourceJS() {\r\n\t\treturn this.js.source.bind(this.js);\r\n\t}\r\n\tstatic codec = { xor, base64, plain };\r\n\tstatic setCookie = setCookie;\r\n\tstatic openDB = openDB;\r\n\tstatic BareClient = BareClient;\r\n\tstatic EventEmitter = EventEmitter;\r\n}\r\n\r\nexport default Ultraviolet;\r\nif (typeof self === \"object\") self.Ultraviolet = Ultraviolet;\r\n", "// -------------------------------------------------------------\r\n// WARNING: this file is used by both the client and the server.\r\n// Do not use any browser or node-specific API!\r\n// -------------------------------------------------------------\r\nexport const none = {\r\n\tencode: (str) => str,\r\n\tdecode: (str) => str,\r\n};\r\n\r\nexport const plain = {\r\n\tencode(str) {\r\n\t\tif (!str) return str;\r\n\t\treturn encodeURIComponent(str);\r\n\t},\r\n\tdecode(str) {\r\n\t\tif (!str) return str;\r\n\t\treturn decodeURIComponent(str);\r\n\t},\r\n};\r\n\r\nexport const xor = {\r\n\tencode(str) {\r\n\t\tif (!str) return str;\r\n\t        let result = \"\";\r\n\t        let len = str.length;\r\n\t        for (let i = 0; i < len; i++) {\r\n\t            const char = str[i];\r\n\t            result += i % 2 ? String.fromCharCode(char.charCodeAt(0) ^ 2) : char;\r\n\t        }\r\n\t        return encodeURIComponent(result);\r\n\t},\r\n\tdecode(str) {\r\n\t        if (!str) return str;\r\n\t        str = decodeURIComponent(str);\r\n\t        let result = \"\";\r\n\t        let len = str.length;\r\n\t        for (let i = 0; i < len; i++) {\r\n\t            const char = str[i];\r\n\t            result += i % 2 ? String.fromCharCode(char.charCodeAt(0) ^ 2) : char;\r\n\t        }\r\n\t\treturn result;\r\n\t}\r\n};\r\n\r\nexport const base64 = {\r\n\tencode(str) {\r\n\t\tif (!str) return str;\r\n\t\tstr = str.toString();\r\n\r\n\t\treturn btoa(encodeURIComponent(str));\r\n\t},\r\n\tdecode(str) {\r\n\t\tif (!str) return str;\r\n\t\tstr = str.toString();\r\n\r\n\t\treturn decodeURIComponent(atob(str));\r\n\t},\r\n};\r\n", "// -------------------------------------------------------------\r\n// WARNING: this file is used by both the client and the server.\r\n// Do not use any browser or node-specific API!\r\n// -------------------------------------------------------------\r\nimport setCookie from \"set-cookie-parser\";\r\n\r\nfunction validateCookie(cookie, meta, js = false) {\r\n\tif (cookie.httpOnly && !!js) return false;\r\n\r\n\tif (cookie.domain.startsWith(\".\")) {\r\n\t\tif (!meta.url.hostname.endsWith(cookie.domain.slice(1))) return false;\r\n\t\treturn true;\r\n\t}\r\n\r\n\tif (cookie.domain !== meta.url.hostname) return false;\r\n\tif (cookie.secure && meta.url.protocol === \"http:\") return false;\r\n\tif (!meta.url.pathname.startsWith(cookie.path)) return false;\r\n\r\n\treturn true;\r\n}\r\n\r\nasync function db(openDB) {\r\n\tconst db = await openDB(\"__op\", 1, {\r\n\t\tupgrade(db) {\r\n\t\t\tconst store = db.createObjectStore(\"cookies\", {\r\n\t\t\t\tkeyPath: \"id\",\r\n\t\t\t});\r\n\t\t\tstore.createIndex(\"path\", \"path\");\r\n\t\t},\r\n\t});\r\n\tdb.transaction([\"cookies\"], \"readwrite\").store.index(\"path\");\r\n\treturn db;\r\n}\r\n\r\nfunction serialize(cookies = [], meta, js) {\r\n\tlet str = \"\";\r\n\tfor (const cookie of cookies) {\r\n\t\tif (!validateCookie(cookie, meta, js)) continue;\r\n\t\tif (str.length) str += \"; \";\r\n\t\tstr += cookie.name;\r\n\t\tstr += \"=\";\r\n\t\tstr += cookie.value;\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nasync function getCookies(db) {\r\n\tconst now = new Date();\r\n\treturn (await db.getAll(\"cookies\")).filter((cookie) => {\r\n\t\tlet expired = false;\r\n\t\tif (cookie.set) {\r\n\t\t\tif (cookie.maxAge) {\r\n\t\t\t\texpired = cookie.set.getTime() + cookie.maxAge * 1e3 < now;\r\n\t\t\t} else if (cookie.expires) {\r\n\t\t\t\texpired = new Date(cookie.expires.toLocaleString()) < now;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (expired) {\r\n\t\t\tdb.delete(\"cookies\", cookie.id);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t});\r\n}\r\n\r\nfunction setCookies(data, db, meta) {\r\n\tif (!db) return false;\r\n\r\n\tconst cookies = setCookie(data, {\r\n\t\tdecodeValues: false,\r\n\t});\r\n\r\n\tfor (const cookie of cookies) {\r\n\t\tif (!cookie.domain) cookie.domain = \".\" + meta.url.hostname;\r\n\t\tif (!cookie.path) cookie.path = \"/\";\r\n\r\n\t\tif (!cookie.domain.startsWith(\".\")) {\r\n\t\t\tcookie.domain = \".\" + cookie.domain;\r\n\t\t}\r\n\r\n\t\tdb.put(\"cookies\", {\r\n\t\t\t...cookie,\r\n\t\t\tid: `${cookie.domain}@${cookie.path}@${cookie.name}`,\r\n\t\t\tset: new Date(Date.now()),\r\n\t\t});\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nexport { validateCookie, getCookies, setCookies, db, serialize };\r\n", "/**\r\n * @typedef {import('./index').default} Ultraviolet\r\n */\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nexport function attributes(ctx, meta = ctx.meta) {\r\n\tconst { html, js, attributePrefix } = ctx;\r\n\tconst origPrefix = attributePrefix + \"-attr-\";\r\n\r\n\thtml.on(\"attr\", (attr, type) => {\r\n\t\tif (\r\n\t\t\tattr.node.tagName === \"base\" &&\r\n\t\t\tattr.name === \"href\" &&\r\n\t\t\tattr.options.document\r\n\t\t) {\r\n\t\t\tmeta.base = new URL(attr.value, meta.url);\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isUrl(attr.name, attr.tagName)) {\r\n\t\t\tattr.node.setAttribute(origPrefix + attr.name, attr.value);\r\n\t\t\tattr.value = ctx.rewriteUrl(attr.value, meta);\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isSrcset(attr.name)) {\r\n\t\t\tattr.node.setAttribute(origPrefix + attr.name, attr.value);\r\n\t\t\tattr.value = html.wrapSrcset(attr.value, meta);\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isHtml(attr.name)) {\r\n\t\t\tattr.node.setAttribute(origPrefix + attr.name, attr.value);\r\n\t\t\tattr.value = html.rewrite(attr.value, {\r\n\t\t\t\t...meta,\r\n\t\t\t\tdocument: true,\r\n\t\t\t\tinjectHead: attr.options.injectHead || [],\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isStyle(attr.name)) {\r\n\t\t\tattr.node.setAttribute(origPrefix + attr.name, attr.value);\r\n\t\t\tattr.value = ctx.rewriteCSS(attr.value, {\r\n\t\t\t\tcontext: \"declarationList\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isForbidden(attr.name)) {\r\n\t\t\tattr.name = origPrefix + attr.name;\r\n\t\t}\r\n\r\n\t\tif (type === \"rewrite\" && isEvent(attr.name)) {\r\n\t\t\tattr.node.setAttribute(origPrefix + attr.name, attr.value);\r\n\t\t\tattr.value = js.rewrite(attr.value, meta);\r\n\t\t}\r\n\r\n\t\tif (type === \"source\" && attr.name.startsWith(origPrefix)) {\r\n\t\t\tif (attr.node.hasAttribute(attr.name.slice(origPrefix.length)))\r\n\t\t\t\tattr.node.removeAttribute(attr.name.slice(origPrefix.length));\r\n\t\t\tattr.name = attr.name.slice(origPrefix.length);\r\n\t\t}\r\n\r\n\t\t/*\r\n        if (isHtml(attr.name)) {\r\n\r\n        };\r\n\r\n        if (isStyle(attr.name)) {\r\n\r\n        };\r\n\r\n        if (isSrcset(attr.name)) {\r\n\r\n        };\r\n        */\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nexport function text(ctx) {\r\n\tconst { html, js, css } = ctx;\r\n\r\n\thtml.on(\"text\", (text, type) => {\r\n\t\tif (text.element.tagName === \"script\") {\r\n\t\t\ttext.value =\r\n\t\t\t\ttype === \"rewrite\" ? js.rewrite(text.value) : js.source(text.value);\r\n\t\t}\r\n\r\n\t\tif (text.element.tagName === \"style\") {\r\n\t\t\ttext.value =\r\n\t\t\t\ttype === \"rewrite\" ? css.rewrite(text.value) : css.source(text.value);\r\n\t\t}\r\n\t});\r\n\treturn true;\r\n}\r\n\r\nexport function isUrl(name, tag) {\r\n\treturn (\r\n\t\t(tag === \"object\" && name === \"data\") ||\r\n\t\t[\r\n\t\t\t\"src\",\r\n\t\t\t\"href\",\r\n\t\t\t\"ping\",\r\n\t\t\t\"movie\",\r\n\t\t\t\"action\",\r\n\t\t\t\"poster\",\r\n\t\t\t\"profile\",\r\n\t\t\t\"background\",\r\n\t\t].indexOf(name) > -1\r\n\t);\r\n}\r\n\r\nexport function isEvent(name) {\r\n\treturn (\r\n\t\t[\r\n\t\t\t\"onafterprint\",\r\n\t\t\t\"onbeforeprint\",\r\n\t\t\t\"onbeforeunload\",\r\n\t\t\t\"onerror\",\r\n\t\t\t\"onhashchange\",\r\n\t\t\t\"onload\",\r\n\t\t\t\"onmessage\",\r\n\t\t\t\"onoffline\",\r\n\t\t\t\"ononline\",\r\n\t\t\t\"onpagehide\",\r\n\t\t\t\"onpopstate\",\r\n\t\t\t\"onstorage\",\r\n\t\t\t\"onunload\",\r\n\t\t\t\"onblur\",\r\n\t\t\t\"onchange\",\r\n\t\t\t\"oncontextmenu\",\r\n\t\t\t\"onfocus\",\r\n\t\t\t\"oninput\",\r\n\t\t\t\"oninvalid\",\r\n\t\t\t\"onreset\",\r\n\t\t\t\"onsearch\",\r\n\t\t\t\"onselect\",\r\n\t\t\t\"onsubmit\",\r\n\t\t\t\"onkeydown\",\r\n\t\t\t\"onkeypress\",\r\n\t\t\t\"onkeyup\",\r\n\t\t\t\"onclick\",\r\n\t\t\t\"ondblclick\",\r\n\t\t\t\"onmousedown\",\r\n\t\t\t\"onmousemove\",\r\n\t\t\t\"onmouseout\",\r\n\t\t\t\"onmouseover\",\r\n\t\t\t\"onmouseup\",\r\n\t\t\t\"onmousewheel\",\r\n\t\t\t\"onwheel\",\r\n\t\t\t\"ondrag\",\r\n\t\t\t\"ondragend\",\r\n\t\t\t\"ondragenter\",\r\n\t\t\t\"ondragleave\",\r\n\t\t\t\"ondragover\",\r\n\t\t\t\"ondragstart\",\r\n\t\t\t\"ondrop\",\r\n\t\t\t\"onscroll\",\r\n\t\t\t\"oncopy\",\r\n\t\t\t\"oncut\",\r\n\t\t\t\"onpaste\",\r\n\t\t\t\"onabort\",\r\n\t\t\t\"oncanplay\",\r\n\t\t\t\"oncanplaythrough\",\r\n\t\t\t\"oncuechange\",\r\n\t\t\t\"ondurationchange\",\r\n\t\t\t\"onemptied\",\r\n\t\t\t\"onended\",\r\n\t\t\t\"onerror\",\r\n\t\t\t\"onloadeddata\",\r\n\t\t\t\"onloadedmetadata\",\r\n\t\t\t\"onloadstart\",\r\n\t\t\t\"onpause\",\r\n\t\t\t\"onplay\",\r\n\t\t\t\"onplaying\",\r\n\t\t\t\"onprogress\",\r\n\t\t\t\"onratechange\",\r\n\t\t\t\"onseeked\",\r\n\t\t\t\"onseeking\",\r\n\t\t\t\"onstalled\",\r\n\t\t\t\"onsuspend\",\r\n\t\t\t\"ontimeupdate\",\r\n\t\t\t\"onvolumechange\",\r\n\t\t\t\"onwaiting\",\r\n\t\t].indexOf(name) > -1\r\n\t);\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nexport function injectHead(ctx) {\r\n\tconst { html } = ctx;\r\n\thtml.on(\"element\", (element, type) => {\r\n\t\tif (type !== \"rewrite\") return false;\r\n\t\tif (element.tagName !== \"head\") return false;\r\n\t\tif (!(\"injectHead\" in element.options)) return false;\r\n\r\n\t\telement.childNodes.unshift(...element.options.injectHead);\r\n\t});\r\n}\r\n\r\nexport function createJsInject(cookies = \"\", referrer = \"\") {\r\n\treturn (\r\n\t\t`self.__uv$cookies = ${JSON.stringify(cookies)};` +\r\n\t\t`self.__uv$referrer = ${JSON.stringify(referrer)};`\r\n\t);\r\n}\r\n\r\nexport function createHtmlInject(\r\n\thandlerScript,\r\n\tbundleScript,\r\n\tclientScript,\r\n\tconfigScript,\r\n\tcookies,\r\n\treferrer\r\n) {\r\n\treturn [\r\n\t\t{\r\n\t\t\ttagName: \"script\",\r\n\t\t\tnodeName: \"script\",\r\n\t\t\tchildNodes: [\r\n\t\t\t\t{\r\n\t\t\t\t\tnodeName: \"#text\",\r\n\t\t\t\t\tvalue: createJsInject(cookies, referrer),\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tattrs: [\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"__uv-script\",\r\n\t\t\t\t\tvalue: \"1\",\r\n\t\t\t\t\tskip: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t\tskip: true,\r\n\t\t},\r\n\t\t{\r\n\t\t\ttagName: \"script\",\r\n\t\t\tnodeName: \"script\",\r\n\t\t\tchildNodes: [],\r\n\t\t\tattrs: [\r\n\t\t\t\t{ name: \"src\", value: bundleScript, skip: true },\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"__uv-script\",\r\n\t\t\t\t\tvalue: \"1\",\r\n\t\t\t\t\tskip: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttagName: \"script\",\r\n\t\t\tnodeName: \"script\",\r\n\t\t\tchildNodes: [],\r\n\t\t\tattrs: [\r\n\t\t\t\t{ name: \"src\", value: clientScript, skip: true },\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"__uv-script\",\r\n\t\t\t\t\tvalue: \"1\",\r\n\t\t\t\t\tskip: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttagName: \"script\",\r\n\t\t\tnodeName: \"script\",\r\n\t\t\tchildNodes: [],\r\n\t\t\tattrs: [\r\n\t\t\t\t{ name: \"src\", value: configScript, skip: true },\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"__uv-script\",\r\n\t\t\t\t\tvalue: \"1\",\r\n\t\t\t\t\tskip: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\ttagName: \"script\",\r\n\t\t\tnodeName: \"script\",\r\n\t\t\tchildNodes: [],\r\n\t\t\tattrs: [\r\n\t\t\t\t{ name: \"src\", value: handlerScript, skip: true },\r\n\t\t\t\t{\r\n\t\t\t\t\tname: \"__uv-script\",\r\n\t\t\t\t\tvalue: \"1\",\r\n\t\t\t\t\tskip: true,\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n}\r\n\r\nexport function isForbidden(name) {\r\n\treturn (\r\n\t\t[\"http-equiv\", \"integrity\", \"sandbox\", \"nonce\", \"crossorigin\"].indexOf(\r\n\t\t\tname\r\n\t\t) > -1\r\n\t);\r\n}\r\n\r\nexport function isHtml(name) {\r\n\treturn name === \"srcdoc\";\r\n}\r\n\r\nexport function isStyle(name) {\r\n\treturn name === \"style\";\r\n}\r\n\r\nexport function isSrcset(name) {\r\n\treturn name === \"srcSet\" || name === \"srcset\" || name === \"imagesrcset\";\r\n}\r\n", "/**\r\n * @typedef {import('./index').default} Ultraviolet\r\n */\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction property(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"MemberExpression\", (node, data, type) => {\r\n\t\tif (node.object.type === \"Super\") return false;\r\n\r\n\t\tif (type === \"rewrite\" && computedProperty(node)) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tnode: \"__uv.$wrap((\",\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.start,\r\n\t\t\t});\r\n\t\t\tnode.iterateEnd = function () {\r\n\t\t\t\tdata.changes.push({\r\n\t\t\t\t\tnode: \"))\",\r\n\t\t\t\t\tstart: node.property.end,\r\n\t\t\t\t\tend: node.property.end,\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(!node.computed &&\r\n\t\t\t\tnode.property.name === \"location\" &&\r\n\t\t\t\ttype === \"rewrite\") ||\r\n\t\t\t(node.property.name === \"__uv$location\" && type === \"source\")\r\n\t\t) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.end,\r\n\t\t\t\tnode:\r\n\t\t\t\t\ttype === \"rewrite\"\r\n\t\t\t\t\t\t? \"__uv$setSource(__uv).__uv$location\"\r\n\t\t\t\t\t\t: \"location\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(!node.computed && node.property.name === \"top\" && type === \"rewrite\") ||\r\n\t\t\t(node.property.name === \"__uv$top\" && type === \"source\")\r\n\t\t) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.end,\r\n\t\t\t\tnode: type === \"rewrite\" ? \"__uv$setSource(__uv).__uv$top\" : \"top\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(!node.computed &&\r\n\t\t\t\tnode.property.name === \"parent\" &&\r\n\t\t\t\ttype === \"rewrite\") ||\r\n\t\t\t(node.property.name === \"__uv$parent\" && type === \"source\")\r\n\t\t) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.end,\r\n\t\t\t\tnode:\r\n\t\t\t\t\ttype === \"rewrite\" ? \"__uv$setSource(__uv).__uv$parent\" : \"parent\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!node.computed &&\r\n\t\t\tnode.property.name === \"postMessage\" &&\r\n\t\t\ttype === \"rewrite\"\r\n\t\t) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.end,\r\n\t\t\t\tnode: \"__uv$setSource(__uv).postMessage\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t(!node.computed && node.property.name === \"eval\" && type === \"rewrite\") ||\r\n\t\t\t(node.property.name === \"__uv$eval\" && type === \"source\")\r\n\t\t) {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: node.property.start,\r\n\t\t\t\tend: node.property.end,\r\n\t\t\t\tnode: type === \"rewrite\" ? \"__uv$setSource(__uv).__uv$eval\" : \"eval\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (\r\n\t\t\t!node.computed &&\r\n\t\t\tnode.property.name === \"__uv$setSource\" &&\r\n\t\t\ttype === \"source\" &&\r\n\t\t\tnode.parent.type === \"CallExpression\"\r\n\t\t) {\r\n\t\t\tconst { parent, property } = node;\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tstart: property.start - 1,\r\n\t\t\t\tend: parent.end,\r\n\t\t\t});\r\n\r\n\t\t\tnode.iterateEnd = function () {\r\n\t\t\t\tdata.changes.push({\r\n\t\t\t\t\tstart: property.start,\r\n\t\t\t\t\tend: parent.end,\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction identifier(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"Identifier\", (node, data, type) => {\r\n\t\tif (type !== \"rewrite\") return false;\r\n\t\tconst { parent } = node;\r\n\t\tif (![\"location\", \"eval\", \"parent\", \"top\"].includes(node.name))\r\n\t\t\treturn false;\r\n\t\tif (parent.type === \"VariableDeclarator\" && parent.id === node)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\t(parent.type === \"AssignmentExpression\" ||\r\n\t\t\t\tparent.type === \"AssignmentPattern\") &&\r\n\t\t\tparent.left === node\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\t(parent.type === \"FunctionExpression\" ||\r\n\t\t\t\tparent.type === \"FunctionDeclaration\") &&\r\n\t\t\tparent.id === node\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\tparent.type === \"MemberExpression\" &&\r\n\t\t\tparent.property === node &&\r\n\t\t\t!parent.computed\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\tnode.name === \"eval\" &&\r\n\t\t\tparent.type === \"CallExpression\" &&\r\n\t\t\tparent.callee === node\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (parent.type === \"Property\" && parent.key === node) return false;\r\n\t\tif (parent.type === \"Property\" && parent.value === node && parent.shorthand)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\tparent.type === \"UpdateExpression\" &&\r\n\t\t\t(parent.operator === \"++\" || parent.operator === \"--\")\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (\r\n\t\t\t(parent.type === \"FunctionExpression\" ||\r\n\t\t\t\tparent.type === \"FunctionDeclaration\" ||\r\n\t\t\t\tparent.type === \"ArrowFunctionExpression\") &&\r\n\t\t\tparent.params.indexOf(node) !== -1\r\n\t\t)\r\n\t\t\treturn false;\r\n\t\tif (parent.type === \"MethodDefinition\") return false;\r\n\t\tif (parent.type === \"ClassDeclaration\") return false;\r\n\t\tif (parent.type === \"RestElement\") return false;\r\n\t\tif (parent.type === \"ExportSpecifier\") return false;\r\n\t\tif (parent.type === \"ImportSpecifier\") return false;\r\n\r\n\t\tdata.changes.push({\r\n\t\t\tstart: node.start,\r\n\t\t\tend: node.end,\r\n\t\t\tnode: \"__uv.$get(\" + node.name + \")\",\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction wrapEval(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"CallExpression\", (node, data, type) => {\r\n\t\tif (type !== \"rewrite\") return false;\r\n\t\tif (!node.arguments.length) return false;\r\n\t\tif (node.callee.type !== \"Identifier\") return false;\r\n\t\tif (node.callee.name !== \"eval\") return false;\r\n\r\n\t\tconst [script] = node.arguments;\r\n\r\n\t\tdata.changes.push({\r\n\t\t\tnode: \"__uv.js.rewrite(\",\r\n\t\t\tstart: script.start,\r\n\t\t\tend: script.start,\r\n\t\t});\r\n\t\tnode.iterateEnd = function () {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tnode: \")\",\r\n\t\t\t\tstart: script.end,\r\n\t\t\t\tend: script.end,\r\n\t\t\t});\r\n\t\t};\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction importDeclaration(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"Literal\", (node, data, type) => {\r\n\t\tif (\r\n\t\t\t!(\r\n\t\t\t\t(node.parent.type === \"ImportDeclaration\" ||\r\n\t\t\t\t\tnode.parent.type === \"ExportAllDeclaration\" ||\r\n\t\t\t\t\tnode.parent.type === \"ExportNamedDeclaration\") &&\r\n\t\t\t\tnode.parent.source === node\r\n\t\t\t)\r\n\t\t)\r\n\t\t\treturn false;\r\n\r\n\t\tdata.changes.push({\r\n\t\t\tstart: node.start + 1,\r\n\t\t\tend: node.end - 1,\r\n\t\t\tnode:\r\n\t\t\t\ttype === \"rewrite\"\r\n\t\t\t\t\t? ctx.rewriteUrl(node.value)\r\n\t\t\t\t\t: ctx.sourceUrl(node.value),\r\n\t\t});\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction dynamicImport(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"ImportExpression\", (node, data, type) => {\r\n\t\tif (type !== \"rewrite\") return false;\r\n\t\tdata.changes.push({\r\n\t\t\t// pass script URL to dynamicImport\r\n\t\t\t// import() is always relative to script URL\r\n\t\t\tnode: `__uv.rewriteImport(${JSON.stringify(ctx.meta.url)},`,\r\n\t\t\tstart: node.source.start,\r\n\t\t\tend: node.source.start,\r\n\t\t});\r\n\t\tnode.iterateEnd = function () {\r\n\t\t\tdata.changes.push({\r\n\t\t\t\tnode: \")\",\r\n\t\t\t\tstart: node.source.end,\r\n\t\t\t\tend: node.source.end,\r\n\t\t\t});\r\n\t\t};\r\n\t});\r\n}\r\n\r\n/**\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction importMeta(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"MemberExpression\", (node, data, type) => {\r\n\t\tif (\r\n\t\t\tnode.object.type == \"MetaProperty\" &&\r\n\t\t\tnode.property.type === \"Identifier\" &&\r\n\t\t\tnode.property.name === \"url\"\r\n\t\t) {\r\n\t\t\tif (type === \"rewrite\") {\r\n\t\t\t\tdata.changes.push({\r\n\t\t\t\t\tstart: node.start,\r\n\t\t\t\t\tend: node.end,\r\n\t\t\t\t\tnode: `__uv.sourceUrl(import.meta.url)`,\r\n\t\t\t\t});\r\n\t\t\t} else if (type === \"source\") {\r\n\t\t\t\tdata.changes.push({\r\n\t\t\t\t\tstart: node.start,\r\n\t\t\t\t\tend: node.end,\r\n\t\t\t\t\tnode: `import.meta.url`,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n *\r\n * @param {Ultraviolet} ctx\r\n */\r\nfunction unwrap(ctx) {\r\n\tconst { js } = ctx;\r\n\tjs.on(\"CallExpression\", (node, data, type) => {\r\n\t\tif (type !== \"source\") return false;\r\n\t\tif (!isWrapped(node.callee)) return false;\r\n\r\n\t\tswitch (node.callee.property.name) {\r\n\t\t\tcase \"$wrap\":\r\n\t\t\t\t{\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t!node.arguments ||\r\n\t\t\t\t\t\tnode.parent.type !== \"MemberExpression\" ||\r\n\t\t\t\t\t\tnode.parent.property !== node\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\tconst [property] = node.arguments;\r\n\r\n\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\tstart: node.callee.start,\r\n\t\t\t\t\t\tend: property.start,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tnode.iterateEnd = function () {\r\n\t\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\t\tstart: node.end - 2,\r\n\t\t\t\t\t\t\tend: node.end,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"$get\":\r\n\t\t\tcase \"rewriteUrl\":\r\n\t\t\t\t{\r\n\t\t\t\t\tconst [arg] = node.arguments;\r\n\r\n\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\tstart: node.callee.start,\r\n\t\t\t\t\t\tend: arg.start,\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tnode.iterateEnd = function () {\r\n\t\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\t\tstart: node.end - 1,\r\n\t\t\t\t\t\t\tend: node.end,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"rewrite\":\r\n\t\t\t\t{\r\n\t\t\t\t\tconst [script] = node.arguments;\r\n\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\tstart: node.callee.start,\r\n\t\t\t\t\t\tend: script.start,\r\n\t\t\t\t\t});\r\n\t\t\t\t\tnode.iterateEnd = function () {\r\n\t\t\t\t\t\tdata.changes.push({\r\n\t\t\t\t\t\t\tstart: node.end - 1,\r\n\t\t\t\t\t\t\tend: node.end,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction isWrapped(node) {\r\n\tif (node.type !== \"MemberExpression\") return false;\r\n\tif (node.property.name === \"rewrite\" && isWrapped(node.object)) return true;\r\n\tif (node.object.type !== \"Identifier\" || node.object.name !== \"__uv\")\r\n\t\treturn false;\r\n\tif (![\"js\", \"$get\", \"$wrap\", \"rewriteUrl\"].includes(node.property.name))\r\n\t\treturn false;\r\n\treturn true;\r\n}\r\n\r\nfunction computedProperty(parent) {\r\n\tif (!parent.computed) return false;\r\n\tconst { property: node } = parent;\r\n\tif (node.type === \"Literal\" && ![\"location\", \"top\", \"parent\"]) return false;\r\n\treturn true;\r\n}\r\n\r\nexport {\r\n\tproperty,\r\n\twrapEval,\r\n\tdynamicImport,\r\n\timportDeclaration,\r\n\timportMeta,\r\n\tidentifier,\r\n\tunwrap,\r\n};\r\n", "const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst transactionDoneMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    // This mapping exists in reverseTransformCache but doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(this.request);\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nconst advanceMethodProps = ['continue', 'continuePrimaryKey', 'advance'];\nconst methodMap = {};\nconst advanceResults = new WeakMap();\nconst ittrProxiedCursorToOriginalProxy = new WeakMap();\nconst cursorIteratorTraps = {\n    get(target, prop) {\n        if (!advanceMethodProps.includes(prop))\n            return target[prop];\n        let cachedFunc = methodMap[prop];\n        if (!cachedFunc) {\n            cachedFunc = methodMap[prop] = function (...args) {\n                advanceResults.set(this, ittrProxiedCursorToOriginalProxy.get(this)[prop](...args));\n            };\n        }\n        return cachedFunc;\n    },\n};\nasync function* iterate(...args) {\n    // tslint:disable-next-line:no-this-assignment\n    let cursor = this;\n    if (!(cursor instanceof IDBCursor)) {\n        cursor = await cursor.openCursor(...args);\n    }\n    if (!cursor)\n        return;\n    cursor = cursor;\n    const proxiedCursor = new Proxy(cursor, cursorIteratorTraps);\n    ittrProxiedCursorToOriginalProxy.set(proxiedCursor, cursor);\n    // Map this double-proxy back to the original, so other cursor methods work.\n    reverseTransformCache.set(proxiedCursor, unwrap(cursor));\n    while (cursor) {\n        yield proxiedCursor;\n        // If one of the advancing methods was not called, call continue().\n        cursor = await (advanceResults.get(proxiedCursor) || cursor.continue());\n        advanceResults.delete(proxiedCursor);\n    }\n}\nfunction isIteratorProp(target, prop) {\n    return ((prop === Symbol.asyncIterator &&\n        instanceOfAny(target, [IDBIndex, IDBObjectStore, IDBCursor])) ||\n        (prop === 'iterate' && instanceOfAny(target, [IDBIndex, IDBObjectStore])));\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get(target, prop, receiver) {\n        if (isIteratorProp(target, prop))\n            return iterate;\n        return oldTraps.get(target, prop, receiver);\n    },\n    has(target, prop) {\n        return isIteratorProp(target, prop) || oldTraps.has(target, prop);\n    },\n}));\n\nexport { deleteDB, openDB, unwrap, wrap };\n", "const e=20,t=globalThis.fetch,r=globalThis.SharedWorker,a=globalThis.localStorage,s=globalThis.navigator.serviceWorker,o=MessagePort.prototype.postMessage,n={prototype:{send:WebSocket.prototype.send},CLOSED:WebSocket.CLOSED,CLOSING:WebSocket.CLOSING,CONNECTING:WebSocket.CONNECTING,OPEN:WebSocket.OPEN};async function c(){const e=(await self.clients.matchAll({type:\"window\",includeUncontrolled:!0})).map((async e=>{const t=await function(e){let t=new MessageChannel;return new Promise((r=>{e.postMessage({type:\"getPort\",port:t.port2},[t.port2]),t.port1.onmessage=e=>{r(e.data)}}))}(e);return await i(t),t})),t=Promise.race([Promise.any(e),new Promise(((e,t)=>setTimeout(t,1e3,new TypeError(\"timeout\"))))]);try{return await t}catch(e){if(e instanceof AggregateError)throw console.error(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort as all clients returned an invalid MessagePort.\"),new Error(\"All clients returned an invalid MessagePort.\");return console.warn(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort within 1s, retrying\"),await c()}}function i(e){const t=new MessageChannel,r=new Promise(((e,r)=>{t.port1.onmessage=t=>{\"pong\"===t.data.type&&e()},setTimeout(r,1500)}));return o.call(e,{message:{type:\"ping\"},port:t.port2},[t.port2]),r}function l(e,t){const a=new r(e,\"bare-mux-worker\");return t&&s.addEventListener(\"message\",(t=>{if(\"getPort\"===t.data.type&&t.data.port){console.debug(\"bare-mux: recieved request for port from sw\");const a=new r(e,\"bare-mux-worker\");o.call(t.data.port,a.port,[a.port])}})),a.port}let h=null;function d(){if(null===h){const e=new MessageChannel,t=new ReadableStream;let r;try{o.call(e.port1,t,[t]),r=!0}catch(e){r=!1}return h=r,r}return h}class p{constructor(e){this.channel=new BroadcastChannel(\"bare-mux\"),e instanceof MessagePort||e instanceof Promise?this.port=e:this.createChannel(e,!0)}createChannel(e,t){if(self.clients)this.port=c(),this.channel.onmessage=e=>{\"refreshPort\"===e.data.type&&(this.port=c())};else if(e&&SharedWorker){if(!e.startsWith(\"/\")&&!e.includes(\"://\"))throw new Error(\"Invalid URL. Must be absolute or start at the root.\");this.port=l(e,t),console.debug(\"bare-mux: setting localStorage bare-mux-path to\",e),a[\"bare-mux-path\"]=e}else{if(!SharedWorker)throw new Error(\"Unable to get a channel to the SharedWorker.\");{const e=a[\"bare-mux-path\"];if(console.debug(\"bare-mux: got localStorage bare-mux-path:\",e),!e)throw new Error(\"Unable to get bare-mux workerPath from localStorage.\");this.port=l(e,t)}}}async sendMessage(e,t){this.port instanceof Promise&&(this.port=await this.port);try{await i(this.port)}catch{return console.warn(\"bare-mux: Failed to get a ping response from the worker within 1.5s. Assuming port is dead.\"),this.createChannel(),await this.sendMessage(e,t)}const r=new MessageChannel,a=[r.port2,...t||[]],s=new Promise(((e,t)=>{r.port1.onmessage=r=>{const a=r.data;\"error\"===a.type?t(a.error):e(a)}}));return o.call(this.port,{message:e,port:r.port2},a),await s}}class w extends EventTarget{constructor(e,t=[],r,a){super(),this.protocols=t,this.readyState=n.CONNECTING,this.url=e.toString(),this.protocols=t;const s=e=>{this.protocols=e,this.readyState=n.OPEN;const t=new Event(\"open\");this.dispatchEvent(t)},o=async e=>{const t=new MessageEvent(\"message\",{data:e});this.dispatchEvent(t)},c=(e,t)=>{this.readyState=n.CLOSED;const r=new CloseEvent(\"close\",{code:e,reason:t});this.dispatchEvent(r)},i=()=>{this.readyState=n.CLOSED;const e=new Event(\"error\");this.dispatchEvent(e)};this.channel=new MessageChannel,this.channel.port1.onmessage=e=>{\"open\"===e.data.type?s(e.data.args[0]):\"message\"===e.data.type?o(e.data.args[0]):\"close\"===e.data.type?c(e.data.args[0],e.data.args[1]):\"error\"===e.data.type&&i()},r.sendMessage({type:\"websocket\",websocket:{url:e.toString(),protocols:t,requestHeaders:a,channel:this.channel.port2}},[this.channel.port2])}send(...e){if(this.readyState===n.CONNECTING)throw new DOMException(\"Failed to execute 'send' on 'WebSocket': Still in CONNECTING state.\");let t=e[0];t.buffer&&(t=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)),o.call(this.channel.port1,{type:\"data\",data:t},t instanceof ArrayBuffer?[t]:[])}close(e,t){o.call(this.channel.port1,{type:\"close\",closeCode:e,closeReason:t})}}function u(e,t,r){console.error(`error while processing '${r}': `,t),e.postMessage({type:\"error\",error:t})}function g(e){for(let t=0;t<e.length;t++){const r=e[t];if(!\"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\".includes(r))return!1}return!0}const f=[\"ws:\",\"wss:\"],y=[101,204,205,304],b=[301,302,303,307,308];class m{constructor(e){this.worker=new p(e)}async getTransport(){return(await this.worker.sendMessage({type:\"get\"})).name}async setTransport(e,t,r){await this.setManualTransport(`\\n\\t\\t\\tconst { default: BareTransport } = await import(\"${e}\");\\n\\t\\t\\treturn [BareTransport, \"${e}\"];\\n\\t\\t`,t,r)}async setManualTransport(e,t,r){if(\"bare-mux-remote\"===e)throw new Error(\"Use setRemoteTransport.\");await this.worker.sendMessage({type:\"set\",client:{function:e,args:t}},r)}async setRemoteTransport(e,t){const r=new MessageChannel;r.port1.onmessage=async t=>{const r=t.data.port,a=t.data.message;if(\"fetch\"===a.type)try{e.ready||await e.init(),await async function(e,t,r){const a=await r.request(new URL(e.fetch.remote),e.fetch.method,e.fetch.body,e.fetch.headers,null);if(!d()&&a.body instanceof ReadableStream){const e=new Response(a.body);a.body=await e.arrayBuffer()}a.body instanceof ReadableStream||a.body instanceof ArrayBuffer?o.call(t,{type:\"fetch\",fetch:a},[a.body]):o.call(t,{type:\"fetch\",fetch:a})}(a,r,e)}catch(e){u(r,e,\"fetch\")}else if(\"websocket\"===a.type)try{e.ready||await e.init(),await async function(e,t,r){const[a,s]=r.connect(new URL(e.websocket.url),e.websocket.protocols,e.websocket.requestHeaders,(t=>{o.call(e.websocket.channel,{type:\"open\",args:[t]})}),(t=>{t instanceof ArrayBuffer?o.call(e.websocket.channel,{type:\"message\",args:[t]},[t]):o.call(e.websocket.channel,{type:\"message\",args:[t]})}),((t,r)=>{o.call(e.websocket.channel,{type:\"close\",args:[t,r]})}),(t=>{o.call(e.websocket.channel,{type:\"error\",args:[t]})}));e.websocket.channel.onmessage=e=>{\"data\"===e.data.type?a(e.data.data):\"close\"===e.data.type&&s(e.data.closeCode,e.data.closeReason)},o.call(t,{type:\"websocket\"})}(a,r,e)}catch(e){u(r,e,\"websocket\")}},await this.worker.sendMessage({type:\"set\",client:{function:\"bare-mux-remote\",args:[r.port2,t]}},[r.port2])}getInnerPort(){return this.worker.port}}class k{constructor(e){this.worker=new p(e)}createWebSocket(e,t=[],r,a){try{e=new URL(e)}catch(t){throw new DOMException(`Faiiled to construct 'WebSocket': The URL '${e}' is invalid.`)}if(!f.includes(e.protocol))throw new DOMException(`Failed to construct 'WebSocket': The URL's scheme must be either 'ws' or 'wss'. '${e.protocol}' is not allowed.`);Array.isArray(t)||(t=[t]),t=t.map(String);for(const e of t)if(!g(e))throw new DOMException(`Failed to construct 'WebSocket': The subprotocol '${e}' is invalid.`);a=a||{};return new w(e,t,this.worker,a)}async fetch(e,r){const a=new Request(e,r),s=r?.headers||a.headers,o=s instanceof Headers?Object.fromEntries(s):s,n=a.body;let c=new URL(a.url);if(c.protocol.startsWith(\"blob:\")){const e=await t(c),r=new Response(e.body,e);return r.rawHeaders=Object.fromEntries(e.headers),r}for(let e=0;;e++){let t=(await this.worker.sendMessage({type:\"fetch\",fetch:{remote:c.toString(),method:a.method,headers:o,body:n||void 0}},n?[n]:[])).fetch,s=new Response(y.includes(t.status)?void 0:t.body,{headers:new Headers(t.headers),status:t.status,statusText:t.statusText});s.rawHeaders=t.headers,s.rawResponse=t,s.finalURL=c.toString();const i=r?.redirect||a.redirect;if(!b.includes(s.status))return s;switch(i){case\"follow\":{const t=s.headers.get(\"location\");if(20>e&&null!==t){c=new URL(t,c);continue}throw new TypeError(\"Failed to fetch\")}case\"error\":throw new TypeError(\"Failed to fetch\");case\"manual\":return s}}}}console.debug(\"bare-mux: running v2.1.7 (build c56d286)\");export{k as BareClient,m as BareMuxConnection,w as BareWebSocket,n as WebSocketFields,p as WorkerConnection,d as browserSupportsTransferringStreams,k as default,e as maxRedirects,g as validProtocol};\n//# sourceMappingURL=index.mjs.map\n"],
  "mappings": "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AA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,EAAE,GAAG;AAAA,IACN,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AAAA,IACP,CAAC,GAAG,GAAG;AA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,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,IAAI,GAAG,WAAW,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,YAAY,GAAG,IAAI,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,IAAI,GAAG,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,SAAS,GAAG,YAAY,GAAG,GAAG,GAAG,OAAO,GAAG,YAAY,GAAG,YAAY,GAAG,GAAG,GAAG,YAAY,GAAG,QAAQ,GAAG,YAAY,GAAG,YAAY,GAAG,SAAS,GAAG,KAAK,GAAG,GAAG,GAAG,YAAY,GAAG,WAAW,GAAG,OAAO,GAAG,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,IAAI,GAAG,YAAY,GAAG,QAAQ,GAAG,GAAG,GAAG,IAAI,GAAG,UAAU,IAAI,GAAG,IAAI,GAAG,YAAY,GAAG,YAAY,IAAI,GAAG,UAAU,GAAG,YAAY,GAAG,IAAI,GAAG,YAAY,GAAG,YAAY,GAAG,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,QAAQ,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,YAAY,GAAG,IAAI,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,GAAG,WAAW,GAAG,IAAI,GAAG,UAAU,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,WAAW,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,WAAW,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,UAAU,GAAG,YAAY,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,YAAY,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,YAAY,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,SAAS,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,QAAQ,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,YAAY,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,WAAW,GAAG,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,UAAU,GAAG,YAAY,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,UAAU,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,WAAW,GAAG,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,UAAU,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,YAAY,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,YAAY,GAAG,YAAY,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,YAAY,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,QAAQ,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,YAAY,GAAG,GAAG,GAAG,IAAI,GAAG,YAAY,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,SAAS,GAAG,GAAG,GAAG,GAAG,WAAW,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,UAAU,GAAG,IAAI,GAAG,YAAY,GAAG,YAAY,GAAG,SAAS,GAAG,KAAK,GAAG,IAAI,GAAG,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,UAAU,IAAI,GAAG,GAAG,GAAG,YAAY,GAAG,YAAY,IAAI,GAAG,GAAG,GAAG,GAAG,UAAU,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,KAAK,GAAG,YAAY,GAAG,IAAI,IAAI,GAAG,KAAK,GAAG,YAAY,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,SAAS,IAAI,GAAG,KAAK,GAAG,YAAY,GAAG,IAAI,GAAG,KAAK,GAAG,UAAU,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,YAAY,GAAG,YAAY,GAAG,WAAW,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,MAAM,GAAG,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,YAAY,GAAG,GAAG,GAAG,YAAY,IAAI,GAAG,QAAQ,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,YAAY,MAAM,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,YAAY,GAAG,MAAM,GAAG,KAAK,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,YAAY,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,SAAS,GAAG,YAAY,GAAG,KAAK,KAAK,GAAG,GAAG,GAAG,KAAK,IAAI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,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,WAAW,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,YAAY,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,YAAY,GAAG,IAAI,GAAG,YAAY,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,YAAY,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,YAAY,GAAG,GAAG,GAAG,YAAY,GAAG,WAAW,GAAG,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,YAAY,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,YAAY,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,YAAY,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,QAAQ,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,GAAG,SAAS,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,YAAY,GAAG,SAAS,GAAG,KAAK,GAAG,IAAI,GAAG,WAAW,IAAI,GAAG,KAAK,GAAG,YAAY,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,YAAY,GAAG,GAAG,GAAG,KAAK,GAAG,UAAU,GAAG,QAAQ,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,UAAU,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,YAAY,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,YAAY,GAAG,UAAU,GAAG,YAAY,GAAG,GAAG,GAAG,WAAW,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,UAAU,KAAK,GAAG,IAAI,GAAG,YAAY,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,MAAM,GAAG,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,OAAO,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,MAAM,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,MAAM,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,KAAK,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,YAAY,GAAG,OAAO,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,KAAK,GAAG,IAAI,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,OAAO,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,MAAM,GAAG,GAAG,MAAM,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,QAAQ,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,MAAM,KAAK,GAAG,KAAK,GAAG,OAAO,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,IAAI,GAAG,OAAO,IAAI,GAAG,KAAK,GAAG,YAAY,GAAG,WAAW,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,MAAM,IAAI,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG,YAAY,GAAG,KAAK,GAAG,KAAK,GAAG,SAAS,IAAI,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,WAAW,GAAG,YAAY,GAAG,YAAY,GAAG,QAAQ,GAAG,WAAW,GAAG,YAAY,GAAG,YAAY,GAAG,QAAQ,GAAG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,GAAG,IAAI,GAAG,YAAY,GAAG,GAAG,GAAG,WAAW,GAAG,YAAY,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,IAAI,GAAG,UAAU,GAAG,YAAY,GAAG,YAAY,IAAI,GAAG,GAAG,IAAI,GAAG,YAAY,IAAI,GAAG,UAAU,GAAG,KAAK,GAAG,UAAU,GAAG,YAAY,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,GAAG,UAAU,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,YAAY,GAAG,YAAY,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,GAAG,QAAQ,GAAG,KAAK,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,YAAY,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,IAAI,GAAG,YAAY,GAAG,QAAQ,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,YAAY,GAAG,KAAK,IAAI,GAAG,YAAY,GAAG,KAAK,GAAG,UAAU,GAAG,WAAW,GAAG,YAAY,GAAG,OAAO,GAAG,KAAK,GAAG,YAAY,GAAG,YAAY,IAAI,GAAG,WAAW,GAAG,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,IAAI,GAAG,YAAY,GAAG,IAAI,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,YAAY,GAAG,SAAS,GAAG,WAAW,GAAG,YAAY,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,YAAY,GAAG,KAAK,GAAG,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,YAAY,GAAG,GAAG,GAAG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",
  "names": ["ReflectApply", "ReflectOwnKeys", "NumberIsNaN", "EventEmitter", "n", "i", "w", "once", "unwrap", "value", "parse", "cookies", "CODE_POINTS", "ERR", "i", "TokenType", "i", "c", "_a", "CharCodes", "BinTrieFlags", "EntityDecoderState", "DecodingMode", "_a", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "_a", "State", "isAsciiAlphaNumeric", "_a", "i", "i", "EntryType", "i", "entry", "text", "i", "InsertionMode", "_a", "i", "p", "c", "EventEmitter", "attr", "i", "import_events", "EventEmitter", "match", "i", "t", "RegexState", "RegexFlags", "next", "ch", "decodeMap", "text", "decodeCodePoint", "n", "Parser", "block", "scope", "body", "attributes", "node", "b", "tokenStart", "property", "tokenValue", "tokenRaw", "modifierFlags", "token", "children", "i", "text", "attributes", "quasi", "property", "State", "length", "i", "import_events", "EventEmitter", "a", "b", "handler", "import_set_cookie_parser", "i", "openDB", "db", "serialize", "setCookie", "text", "property", "c", "unwrap", "db", "target", "unwrap", "e", "t", "r", "a", "t", "e", "r", "a", "s", "o", "c", "i", "t", "r", "t", "r", "a", "e", "s", "o", "n", "c", "i", "import_events", "serialize", "setCookie", "EventEmitter"]
}
